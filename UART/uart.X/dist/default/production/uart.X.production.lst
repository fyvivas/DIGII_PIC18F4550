

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Sep 22 12:41:16 2021

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20  0000                     
    21                           ; Version 1.41
    22                           ; Generated 25/01/2017 GMT
    23                           ; 
    24                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F4550 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     
    56                           	psect	idataCOMRAM
    57  00797A                     __pidataCOMRAM:
    58                           	opt stack 0
    59                           
    60                           ;initializer for _buffer_TX
    61  00797A  54                 	db	84
    62  00797B  65                 	db	101
    63  00797C  6D                 	db	109
    64  00797D  70                 	db	112
    65  00797E  3A                 	db	58
    66  00797F  20                 	db	32
    67  007980  78                 	db	120
    68  007981  78                 	db	120
    69  007982  78                 	db	120
    70  007983  20                 	db	32
    71  007984  67                 	db	103
    72  007985  72                 	db	114
    73  007986  61                 	db	97
    74  007987  64                 	db	100
    75  007988  6F                 	db	111
    76  007989  73                 	db	115
    77  00798A  0D                 	db	13
    78  00798B  00                 	db	0
    79  0000                     _TXREG	set	4013
    80  0000                     _ADRESL	set	4035
    81  0000                     _ADRESH	set	4036
    82  0000                     _ADCON2bits	set	4032
    83  0000                     _ADCON0bits	set	4034
    84  0000                     _ADCON1bits	set	4033
    85  0000                     _SPBRG	set	4015
    86  0000                     _RCSTAbits	set	4011
    87  0000                     _BAUDCONbits	set	4024
    88  0000                     _TXSTAbits	set	4012
    89  0000                     _TRISCbits	set	3988
    90  0000                     _OSCCONbits	set	4051
    91                           
    92                           ; #config settings
    93  0000                     
    94                           	psect	cinit
    95  00798C                     __pcinit:
    96                           	opt stack 0
    97  00798C                     start_initialization:
    98                           	opt stack 0
    99  00798C                     __initialization:
   100                           	opt stack 0
   101                           
   102                           ; Initialize objects allocated to COMRAM (18 bytes)
   103                           ; load TBLPTR registers with __pidataCOMRAM
   104  00798C  0E7A               	movlw	low __pidataCOMRAM
   105  00798E  6EF6               	movwf	tblptrl,c
   106  007990  0E79               	movlw	high __pidataCOMRAM
   107  007992  6EF7               	movwf	tblptrh,c
   108  007994  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   109  007996  6EF8               	movwf	tblptru,c
   110  007998  EE00  F02D         	lfsr	0,__pdataCOMRAM
   111  00799C  EE10 F012          	lfsr	1,18
   112  0079A0                     copy_data0:
   113  0079A0  0009               	tblrd		*+
   114  0079A2  CFF5 FFEE          	movff	tablat,postinc0
   115  0079A6  50E5               	movf	postdec1,w,c
   116  0079A8  50E1               	movf	fsr1l,w,c
   117  0079AA  E1FA               	bnz	copy_data0
   118                           
   119                           ; Clear objects allocated to COMRAM (6 bytes)
   120  0079AC  6A44               	clrf	(__pbssCOMRAM+5)& (0+255),c
   121  0079AE  6A43               	clrf	(__pbssCOMRAM+4)& (0+255),c
   122  0079B0  6A42               	clrf	(__pbssCOMRAM+3)& (0+255),c
   123  0079B2  6A41               	clrf	(__pbssCOMRAM+2)& (0+255),c
   124  0079B4  6A40               	clrf	(__pbssCOMRAM+1)& (0+255),c
   125  0079B6  6A3F               	clrf	__pbssCOMRAM& (0+255),c
   126  0079B8                     end_of_initialization:
   127                           	opt stack 0
   128  0079B8                     __end_of__initialization:
   129                           	opt stack 0
   130  0079B8  0100               	movlb	0
   131  0079BA  EF33  F03F         	goto	_main	;jump to C main() function
   132                           tblptru	equ	0xFF8
   133                           tblptrh	equ	0xFF7
   134                           tblptrl	equ	0xFF6
   135                           tablat	equ	0xFF5
   136                           postinc0	equ	0xFEE
   137                           postdec1	equ	0xFE5
   138                           fsr1l	equ	0xFE1
   139                           
   140                           	psect	bssCOMRAM
   141  00003F                     __pbssCOMRAM:
   142                           	opt stack 0
   143  00003F                     _temp:
   144                           	opt stack 0
   145  00003F                     	ds	3
   146  000042                     _value_adc:
   147                           	opt stack 0
   148  000042                     	ds	2
   149  000044                     _lm35:
   150                           	opt stack 0
   151  000044                     	ds	1
   152                           tblptru	equ	0xFF8
   153                           tblptrh	equ	0xFF7
   154                           tblptrl	equ	0xFF6
   155                           tablat	equ	0xFF5
   156                           postinc0	equ	0xFEE
   157                           postdec1	equ	0xFE5
   158                           fsr1l	equ	0xFE1
   159                           
   160                           	psect	dataCOMRAM
   161  00002D                     __pdataCOMRAM:
   162                           	opt stack 0
   163  00002D                     _buffer_TX:
   164                           	opt stack 0
   165  00002D                     	ds	18
   166                           tblptru	equ	0xFF8
   167                           tblptrh	equ	0xFF7
   168                           tblptrl	equ	0xFF6
   169                           tablat	equ	0xFF5
   170                           postinc0	equ	0xFEE
   171                           postdec1	equ	0xFE5
   172                           fsr1l	equ	0xFE1
   173                           
   174                           	psect	cstackCOMRAM
   175  000001                     __pcstackCOMRAM:
   176                           	opt stack 0
   177  000001                     ?___awmod:
   178                           	opt stack 0
   179  000001                     ?___ftpack:
   180                           	opt stack 0
   181  000001                     ?___fttol:
   182                           	opt stack 0
   183  000001                     ___awmod@dividend:
   184                           	opt stack 0
   185  000001                     ___ftpack@arg:
   186                           	opt stack 0
   187  000001                     ___fttol@f1:
   188                           	opt stack 0
   189                           
   190                           ; 3 bytes @ 0x0
   191  000001                     	ds	2
   192  000003                     ___awmod@divisor:
   193                           	opt stack 0
   194                           
   195                           ; 2 bytes @ 0x2
   196  000003                     	ds	1
   197  000004                     ___ftpack@exp:
   198                           	opt stack 0
   199                           
   200                           ; 1 bytes @ 0x3
   201  000004                     	ds	1
   202  000005                     ??___fttol:
   203  000005                     ___awmod@counter:
   204                           	opt stack 0
   205  000005                     ___ftpack@sign:
   206                           	opt stack 0
   207                           
   208                           ; 1 bytes @ 0x4
   209  000005                     	ds	1
   210  000006                     ??___ftpack:
   211  000006                     ___awmod@sign:
   212                           	opt stack 0
   213                           
   214                           ; 1 bytes @ 0x5
   215  000006                     	ds	1
   216  000007                     ?___awdiv:
   217                           	opt stack 0
   218  000007                     ___awdiv@dividend:
   219                           	opt stack 0
   220                           
   221                           ; 2 bytes @ 0x6
   222  000007                     	ds	2
   223  000009                     ?___ftmul:
   224                           	opt stack 0
   225  000009                     ?___awtoft:
   226                           	opt stack 0
   227  000009                     ___awdiv@divisor:
   228                           	opt stack 0
   229  000009                     ___awtoft@c:
   230                           	opt stack 0
   231  000009                     ___ftmul@f1:
   232                           	opt stack 0
   233                           
   234                           ; 3 bytes @ 0x8
   235  000009                     	ds	1
   236  00000A                     ___fttol@sign1:
   237                           	opt stack 0
   238                           
   239                           ; 1 bytes @ 0x9
   240  00000A                     	ds	1
   241  00000B                     ___awdiv@counter:
   242                           	opt stack 0
   243  00000B                     ___fttol@lval:
   244                           	opt stack 0
   245                           
   246                           ; 4 bytes @ 0xA
   247  00000B                     	ds	1
   248  00000C                     ___awdiv@sign:
   249                           	opt stack 0
   250  00000C                     ___awtoft@sign:
   251                           	opt stack 0
   252  00000C                     ___ftmul@f2:
   253                           	opt stack 0
   254                           
   255                           ; 3 bytes @ 0xB
   256  00000C                     	ds	1
   257  00000D                     ___awdiv@quotient:
   258                           	opt stack 0
   259                           
   260                           ; 2 bytes @ 0xC
   261  00000D                     	ds	2
   262  00000F                     ??___ftmul:
   263  00000F                     ___fttol@exp1:
   264                           	opt stack 0
   265                           
   266                           ; 1 bytes @ 0xE
   267  00000F                     	ds	3
   268  000012                     ___ftmul@exp:
   269                           	opt stack 0
   270                           
   271                           ; 1 bytes @ 0x11
   272  000012                     	ds	1
   273  000013                     ___ftmul@f3_as_product:
   274                           	opt stack 0
   275                           
   276                           ; 3 bytes @ 0x12
   277  000013                     	ds	3
   278  000016                     ___ftmul@cntr:
   279                           	opt stack 0
   280                           
   281                           ; 1 bytes @ 0x15
   282  000016                     	ds	1
   283  000017                     ___ftmul@sign:
   284                           	opt stack 0
   285                           
   286                           ; 1 bytes @ 0x16
   287  000017                     	ds	1
   288  000018                     ?___ftdiv:
   289                           	opt stack 0
   290  000018                     ___ftdiv@f1:
   291                           	opt stack 0
   292                           
   293                           ; 3 bytes @ 0x17
   294  000018                     	ds	3
   295  00001B                     ___ftdiv@f2:
   296                           	opt stack 0
   297                           
   298                           ; 3 bytes @ 0x1A
   299  00001B                     	ds	3
   300  00001E                     ??___ftdiv:
   301                           
   302                           ; 1 bytes @ 0x1D
   303  00001E                     	ds	3
   304  000021                     ___ftdiv@cntr:
   305                           	opt stack 0
   306                           
   307                           ; 1 bytes @ 0x20
   308  000021                     	ds	1
   309  000022                     ___ftdiv@f3:
   310                           	opt stack 0
   311                           
   312                           ; 3 bytes @ 0x21
   313  000022                     	ds	3
   314  000025                     ___ftdiv@exp:
   315                           	opt stack 0
   316                           
   317                           ; 1 bytes @ 0x24
   318  000025                     	ds	1
   319  000026                     ___ftdiv@sign:
   320                           	opt stack 0
   321                           
   322                           ; 1 bytes @ 0x25
   323  000026                     	ds	1
   324  000027                     ??_main:
   325                           
   326                           ; 1 bytes @ 0x26
   327  000027                     	ds	2
   328  000029                     _main$955:
   329                           	opt stack 0
   330                           
   331                           ; 2 bytes @ 0x28
   332  000029                     	ds	2
   333  00002B                     main@i:
   334                           	opt stack 0
   335                           
   336                           ; 2 bytes @ 0x2A
   337  00002B                     	ds	2
   338                           tblptru	equ	0xFF8
   339                           tblptrh	equ	0xFF7
   340                           tblptrl	equ	0xFF6
   341                           tablat	equ	0xFF5
   342                           postinc0	equ	0xFEE
   343                           postdec1	equ	0xFE5
   344                           fsr1l	equ	0xFE1
   345                           
   346 ;;
   347 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   348 ;;
   349 ;; *************** function _main *****************
   350 ;; Defined at:
   351 ;;		line 32 in file "uart_lm35.c"
   352 ;; Parameters:    Size  Location     Type
   353 ;;		None
   354 ;; Auto vars:     Size  Location     Type
   355 ;;  i               2   42[COMRAM] int 
   356 ;; Return value:  Size  Location     Type
   357 ;;                  1    wreg      void 
   358 ;; Registers used:
   359 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   360 ;; Tracked objects:
   361 ;;		On entry : 0/0
   362 ;;		On exit  : 0/0
   363 ;;		Unchanged: 0/0
   364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   365 ;;      Params:         0       0       0       0       0       0       0       0       0
   366 ;;      Locals:         4       0       0       0       0       0       0       0       0
   367 ;;      Temps:          2       0       0       0       0       0       0       0       0
   368 ;;      Totals:         6       0       0       0       0       0       0       0       0
   369 ;;Total ram usage:        6 bytes
   370 ;; Hardware stack levels required when called:    2
   371 ;; This function calls:
   372 ;;		___awdiv
   373 ;;		___awmod
   374 ;;		___awtoft
   375 ;;		___ftdiv
   376 ;;		___ftmul
   377 ;;		___fttol
   378 ;; This function is called by:
   379 ;;		Startup code after reset
   380 ;; This function uses a non-reentrant model
   381 ;;
   382                           
   383                           	psect	text0
   384  007E66                     __ptext0:
   385                           	opt stack 0
   386  007E66                     _main:
   387                           	opt stack 29
   388                           
   389                           ;uart_lm35.c: 34: OSCCONbits.IRCF = 0b111;
   390                           
   391                           ;incstack = 0
   392  007E66  88D3               	bsf	4051,4,c	;volatile
   393  007E68  8AD3               	bsf	4051,5,c	;volatile
   394  007E6A  8CD3               	bsf	4051,6,c	;volatile
   395                           
   396                           ;uart_lm35.c: 35: OSCCONbits.SCS = 0b10;
   397  007E6C  50D3               	movf	4051,w,c	;volatile
   398  007E6E  0BFC               	andlw	-4
   399  007E70  0902               	iorlw	2
   400  007E72  6ED3               	movwf	4051,c	;volatile
   401                           
   402                           ;uart_lm35.c: 38: TRISCbits.RC6 = 0;
   403  007E74  9C94               	bcf	3988,6,c	;volatile
   404                           
   405                           ;uart_lm35.c: 39: TXSTAbits.TX9 = 0;
   406  007E76  9CAC               	bcf	4012,6,c	;volatile
   407                           
   408                           ;uart_lm35.c: 40: TXSTAbits.TXEN = 1;
   409  007E78  8AAC               	bsf	4012,5,c	;volatile
   410                           
   411                           ;uart_lm35.c: 41: TXSTAbits.SYNC = 0;
   412  007E7A  98AC               	bcf	4012,4,c	;volatile
   413                           
   414                           ;uart_lm35.c: 42: TXSTAbits.BRGH = 0;
   415  007E7C  94AC               	bcf	4012,2,c	;volatile
   416                           
   417                           ;uart_lm35.c: 43: BAUDCONbits.BRG16 = 0;
   418  007E7E  96B8               	bcf	4024,3,c	;volatile
   419                           
   420                           ;uart_lm35.c: 44: RCSTAbits.SPEN = 1;
   421  007E80  8EAB               	bsf	4011,7,c	;volatile
   422                           
   423                           ;uart_lm35.c: 45: SPBRG = (unsigned char) (((8000000L / 9600) / 64) - 1);
   424  007E82  0E0C               	movlw	12
   425  007E84  6EAF               	movwf	4015,c	;volatile
   426                           
   427                           ;uart_lm35.c: 49: ADCON1bits.PCFG = 0b1110;
   428  007E86  50C1               	movf	4033,w,c	;volatile
   429  007E88  0BF0               	andlw	-16
   430  007E8A  090E               	iorlw	14
   431  007E8C  6EC1               	movwf	4033,c	;volatile
   432                           
   433                           ;uart_lm35.c: 50: ADCON1bits.VCFG = 0b00;
   434  007E8E  0ECF               	movlw	-49
   435  007E90  16C1               	andwf	4033,f,c	;volatile
   436                           
   437                           ;uart_lm35.c: 51: ADCON0bits.CHS = 0b0000;
   438  007E92  94C2               	bcf	4034,2,c	;volatile
   439  007E94  96C2               	bcf	4034,3,c	;volatile
   440  007E96  98C2               	bcf	4034,4,c	;volatile
   441  007E98  9AC2               	bcf	4034,5,c	;volatile
   442                           
   443                           ;uart_lm35.c: 52: ADCON2bits.ACQT = 0b010;
   444  007E9A  50C0               	movf	4032,w,c	;volatile
   445  007E9C  0BC7               	andlw	-57
   446  007E9E  0910               	iorlw	16
   447  007EA0  6EC0               	movwf	4032,c	;volatile
   448                           
   449                           ;uart_lm35.c: 53: ADCON2bits.ADCS = 0b001;
   450  007EA2  50C0               	movf	4032,w,c	;volatile
   451  007EA4  0BF8               	andlw	-8
   452  007EA6  0901               	iorlw	1
   453  007EA8  6EC0               	movwf	4032,c	;volatile
   454                           
   455                           ;uart_lm35.c: 54: ADCON2bits.ADFM = 1;
   456  007EAA  8EC0               	bsf	4032,7,c	;volatile
   457                           
   458                           ;uart_lm35.c: 55: ADCON0bits.ADON = 1;
   459  007EAC  80C2               	bsf	4034,0,c	;volatile
   460  007EAE                     l1262:
   461                           
   462                           ;uart_lm35.c: 59: ADCON0bits.GO_DONE = 1;
   463  007EAE  82C2               	bsf	4034,1,c	;volatile
   464  007EB0                     l38:
   465  007EB0  B2C2               	btfsc	4034,1,c	;volatile
   466  007EB2  D7FE               	goto	l38
   467                           
   468                           ;uart_lm35.c: 61: value_adc = ADRESH;
   469  007EB4  CFC4 F042          	movff	4036,_value_adc	;volatile
   470  007EB8  6A43               	clrf	_value_adc+1,c
   471                           
   472                           ;uart_lm35.c: 62: value_adc = (value_adc << 8) + ADRESL;
   473  007EBA  5042               	movf	_value_adc,w,c
   474  007EBC  6E28               	movwf	(??_main+1)& (0+255),c
   475  007EBE  6A27               	clrf	??_main& (0+255),c
   476  007EC0  50C3               	movf	4035,w,c	;volatile
   477  007EC2  2427               	addwf	??_main,w,c
   478  007EC4  6E42               	movwf	_value_adc,c
   479  007EC6  0E00               	movlw	0
   480  007EC8  2028               	addwfc	??_main+1,w,c
   481  007ECA  6E43               	movwf	_value_adc+1,c
   482                           
   483                           ;uart_lm35.c: 63: temp = value_adc;
   484  007ECC  C042  F009         	movff	_value_adc,___awtoft@c
   485  007ED0  C043  F00A         	movff	_value_adc+1,___awtoft@c+1
   486  007ED4  ECDF  F03C         	call	___awtoft	;wreg free
   487  007ED8  C009  F03F         	movff	?___awtoft,_temp
   488  007EDC  C00A  F040         	movff	?___awtoft+1,_temp+1
   489  007EE0  C00B  F041         	movff	?___awtoft+2,_temp+2
   490                           
   491                           ;uart_lm35.c: 64: temp = (temp * 500.0) / 1023.0;
   492  007EE4  0E00               	movlw	0
   493  007EE6  6E0C               	movwf	___ftmul@f2,c
   494  007EE8  0EFA               	movlw	250
   495  007EEA  6E0D               	movwf	___ftmul@f2+1,c
   496  007EEC  0E43               	movlw	67
   497  007EEE  6E0E               	movwf	___ftmul@f2+2,c
   498  007EF0  C03F  F009         	movff	_temp,___ftmul@f1
   499  007EF4  C040  F00A         	movff	_temp+1,___ftmul@f1+1
   500  007EF8  C041  F00B         	movff	_temp+2,___ftmul@f1+2
   501  007EFC  EC3F  F03E         	call	___ftmul	;wreg free
   502  007F00  C009  F018         	movff	?___ftmul,___ftdiv@f1
   503  007F04  C00A  F019         	movff	?___ftmul+1,___ftdiv@f1+1
   504  007F08  C00B  F01A         	movff	?___ftmul+2,___ftdiv@f1+2
   505  007F0C  0EC0               	movlw	192
   506  007F0E  6E1B               	movwf	___ftdiv@f2,c
   507  007F10  0E7F               	movlw	127
   508  007F12  6E1C               	movwf	___ftdiv@f2+1,c
   509  007F14  0E44               	movlw	68
   510  007F16  6E1D               	movwf	___ftdiv@f2+2,c
   511  007F18  ECCC  F03D         	call	___ftdiv	;wreg free
   512  007F1C  C018  F03F         	movff	?___ftdiv,_temp
   513  007F20  C019  F040         	movff	?___ftdiv+1,_temp+1
   514  007F24  C01A  F041         	movff	?___ftdiv+2,_temp+2
   515                           
   516                           ;uart_lm35.c: 65: lm35 = (char) temp;
   517  007F28  C03F  F001         	movff	_temp,___fttol@f1
   518  007F2C  C040  F002         	movff	_temp+1,___fttol@f1+1
   519  007F30  C041  F003         	movff	_temp+2,___fttol@f1+2
   520  007F34  ECB9  F03E         	call	___fttol	;wreg free
   521  007F38  5001               	movf	?___fttol,w,c
   522  007F3A  6E44               	movwf	_lm35,c
   523                           
   524                           ;uart_lm35.c: 66: buffer_TX[6] = (lm35 / 100) + '0';
   525  007F3C  C044  F007         	movff	_lm35,___awdiv@dividend
   526  007F40  6A08               	clrf	___awdiv@dividend+1,c
   527  007F42  0E00               	movlw	0
   528  007F44  6E0A               	movwf	___awdiv@divisor+1,c
   529  007F46  0E64               	movlw	100
   530  007F48  6E09               	movwf	___awdiv@divisor,c
   531  007F4A  EC33  F03D         	call	___awdiv	;wreg free
   532  007F4E  5007               	movf	?___awdiv,w,c
   533  007F50  0F30               	addlw	48
   534  007F52  6E33               	movwf	_buffer_TX+6,c
   535                           
   536                           ;uart_lm35.c: 67: buffer_TX[7] = (lm35 % 100) / 10 + '0';
   537  007F54  0E00               	movlw	0
   538  007F56  6E04               	movwf	___awmod@divisor+1,c
   539  007F58  0E64               	movlw	100
   540  007F5A  6E03               	movwf	___awmod@divisor,c
   541  007F5C  C044  F001         	movff	_lm35,___awmod@dividend
   542  007F60  6A02               	clrf	___awmod@dividend+1,c
   543  007F62  ECFB  F03C         	call	___awmod	;wreg free
   544  007F66  C001  F007         	movff	?___awmod,___awdiv@dividend
   545  007F6A  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
   546  007F6E  0E00               	movlw	0
   547  007F70  6E0A               	movwf	___awdiv@divisor+1,c
   548  007F72  0E0A               	movlw	10
   549  007F74  6E09               	movwf	___awdiv@divisor,c
   550  007F76  EC33  F03D         	call	___awdiv	;wreg free
   551  007F7A  5007               	movf	?___awdiv,w,c
   552  007F7C  0F30               	addlw	48
   553  007F7E  6E34               	movwf	_buffer_TX+7,c
   554                           
   555                           ;uart_lm35.c: 68: buffer_TX[8] = (lm35 % 100) % 10 + '0';
   556  007F80  0E00               	movlw	0
   557  007F82  6E04               	movwf	___awmod@divisor+1,c
   558  007F84  0E64               	movlw	100
   559  007F86  6E03               	movwf	___awmod@divisor,c
   560  007F88  C044  F001         	movff	_lm35,___awmod@dividend
   561  007F8C  6A02               	clrf	___awmod@dividend+1,c
   562  007F8E  ECFB  F03C         	call	___awmod	;wreg free
   563  007F92  C001  F029         	movff	?___awmod,_main$955
   564  007F96  C002  F02A         	movff	?___awmod+1,_main$955+1
   565                           
   566                           ;uart_lm35.c: 68: buffer_TX[8] = (lm35 % 100) % 10 + '0';
   567  007F9A  C029  F001         	movff	_main$955,___awmod@dividend
   568  007F9E  C02A  F002         	movff	_main$955+1,___awmod@dividend+1
   569  007FA2  0E00               	movlw	0
   570  007FA4  6E04               	movwf	___awmod@divisor+1,c
   571  007FA6  0E0A               	movlw	10
   572  007FA8  6E03               	movwf	___awmod@divisor,c
   573  007FAA  ECFB  F03C         	call	___awmod	;wreg free
   574  007FAE  5001               	movf	?___awmod,w,c
   575  007FB0  0F30               	addlw	48
   576  007FB2  6E35               	movwf	_buffer_TX+8,c
   577                           
   578                           ;uart_lm35.c: 70: for (int i = 0; i < 17; i++) {
   579  007FB4  0E00               	movlw	0
   580  007FB6  6E2C               	movwf	main@i+1,c
   581  007FB8  0E00               	movlw	0
   582  007FBA  6E2B               	movwf	main@i,c
   583  007FBC                     l1282:
   584  007FBC  BE2C               	btfsc	main@i+1,7,c
   585  007FBE  D006               	goto	l43
   586  007FC0  502C               	movf	main@i+1,w,c
   587  007FC2  E111               	bnz	l1292
   588  007FC4  0E11               	movlw	17
   589  007FC6  5C2B               	subwf	main@i,w,c
   590  007FC8  B0D8               	btfsc	status,0,c
   591  007FCA  D00D               	goto	l1292
   592  007FCC                     l43:
   593  007FCC  A2AC               	btfss	4012,1,c	;volatile
   594  007FCE  D7FE               	goto	l43
   595                           
   596                           ;uart_lm35.c: 73: }
   597                           ;uart_lm35.c: 75: TXREG = buffer_TX[i];
   598  007FD0  0E2D               	movlw	low _buffer_TX
   599  007FD2  242B               	addwf	main@i,w,c
   600  007FD4  6ED9               	movwf	fsr2l,c
   601  007FD6  0E00               	movlw	high _buffer_TX
   602  007FD8  202C               	addwfc	main@i+1,w,c
   603  007FDA  6EDA               	movwf	fsr2h,c
   604  007FDC  50DF               	movf	indf2,w,c
   605  007FDE  6EAD               	movwf	4013,c	;volatile
   606  007FE0  4A2B               	infsnz	main@i,f,c
   607  007FE2  2A2C               	incf	main@i+1,f,c
   608  007FE4  D7EB               	goto	l1282
   609  007FE6                     l1292:
   610                           
   611                           ;uart_lm35.c: 76: }
   612                           ;uart_lm35.c: 77: _delay((unsigned long)((100)*(8000000L/4000.0)));
   613  007FE6  0E02               	movlw	2
   614  007FE8  6E28               	movwf	(??_main+1)& (0+255),c
   615  007FEA  0E04               	movlw	4
   616  007FEC  6E27               	movwf	??_main& (0+255),c
   617  007FEE  0EBA               	movlw	186
   618  007FF0                     u897:
   619  007FF0  2EE8               	decfsz	wreg,f,c
   620  007FF2  D7FE               	bra	u897
   621  007FF4  2E27               	decfsz	??_main& (0+255),f,c
   622  007FF6  D7FC               	bra	u897
   623  007FF8  2E28               	decfsz	(??_main+1)& (0+255),f,c
   624  007FFA  D7FA               	bra	u897
   625  007FFC  D000               	nop2	
   626  007FFE  D757               	goto	l1262
   627  008000                     __end_of_main:
   628                           	opt stack 0
   629                           tblptru	equ	0xFF8
   630                           tblptrh	equ	0xFF7
   631                           tblptrl	equ	0xFF6
   632                           tablat	equ	0xFF5
   633                           postinc0	equ	0xFEE
   634                           wreg	equ	0xFE8
   635                           postdec1	equ	0xFE5
   636                           fsr1l	equ	0xFE1
   637                           indf2	equ	0xFDF
   638                           fsr2h	equ	0xFDA
   639                           fsr2l	equ	0xFD9
   640                           status	equ	0xFD8
   641                           
   642 ;; *************** function ___fttol *****************
   643 ;; Defined at:
   644 ;;		line 44 in file "D:\mplab\sources\common\fttol.c"
   645 ;; Parameters:    Size  Location     Type
   646 ;;  f1              3    0[COMRAM] float 
   647 ;; Auto vars:     Size  Location     Type
   648 ;;  lval            4   10[COMRAM] unsigned long 
   649 ;;  exp1            1   14[COMRAM] unsigned char 
   650 ;;  sign1           1    9[COMRAM] unsigned char 
   651 ;; Return value:  Size  Location     Type
   652 ;;                  4    0[COMRAM] long 
   653 ;; Registers used:
   654 ;;		wreg, status,2, status,0
   655 ;; Tracked objects:
   656 ;;		On entry : 0/0
   657 ;;		On exit  : 0/0
   658 ;;		Unchanged: 0/0
   659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   660 ;;      Params:         4       0       0       0       0       0       0       0       0
   661 ;;      Locals:         6       0       0       0       0       0       0       0       0
   662 ;;      Temps:          5       0       0       0       0       0       0       0       0
   663 ;;      Totals:        15       0       0       0       0       0       0       0       0
   664 ;;Total ram usage:       15 bytes
   665 ;; Hardware stack levels used:    1
   666 ;; This function calls:
   667 ;;		Nothing
   668 ;; This function is called by:
   669 ;;		_main
   670 ;; This function uses a non-reentrant model
   671 ;;
   672                           
   673                           	psect	text1
   674  007D72                     __ptext1:
   675                           	opt stack 0
   676  007D72                     ___fttol:
   677                           	opt stack 30
   678                           
   679                           ;incstack = 0
   680  007D72  C003  F005         	movff	___fttol@f1+2,??___fttol
   681  007D76  6A06               	clrf	(??___fttol+1)& (0+255),c
   682  007D78  6A07               	clrf	(??___fttol+2)& (0+255),c
   683  007D7A  3402               	rlcf	___fttol@f1+1,w,c
   684  007D7C  3605               	rlcf	??___fttol& (0+255),f,c
   685  007D7E  E301               	bnc	u771
   686  007D80  8006               	bsf	(??___fttol+1)& (0+255),0,c
   687  007D82                     u771:
   688  007D82  5005               	movf	??___fttol,w,c
   689  007D84  6E0F               	movwf	___fttol@exp1,c
   690  007D86  500F               	movf	___fttol@exp1,w,c
   691  007D88  A4D8               	btfss	status,2,c
   692  007D8A  D009               	goto	l1198
   693  007D8C  0E00               	movlw	0
   694  007D8E  6E01               	movwf	?___fttol,c
   695  007D90  0E00               	movlw	0
   696  007D92  6E02               	movwf	?___fttol+1,c
   697  007D94  0E00               	movlw	0
   698  007D96  6E03               	movwf	?___fttol+2,c
   699  007D98  0E00               	movlw	0
   700  007D9A  6E04               	movwf	?___fttol+3,c
   701  007D9C  0012               	return	
   702  007D9E                     l1198:
   703  007D9E  0E17               	movlw	23
   704  007DA0  6E05               	movwf	??___fttol& (0+255),c
   705  007DA2  C001  F006         	movff	___fttol@f1,??___fttol+1
   706  007DA6  C002  F007         	movff	___fttol@f1+1,??___fttol+2
   707  007DAA  C003  F008         	movff	___fttol@f1+2,??___fttol+3
   708  007DAE  2805               	incf	??___fttol,w,c
   709  007DB0  6E09               	movwf	(??___fttol+4)& (0+255),c
   710  007DB2  D004               	goto	u790
   711  007DB4                     u795:
   712  007DB4  90D8               	bcf	status,0,c
   713  007DB6  3208               	rrcf	??___fttol+3,f,c
   714  007DB8  3207               	rrcf	??___fttol+2,f,c
   715  007DBA  3206               	rrcf	??___fttol+1,f,c
   716  007DBC                     u790:
   717  007DBC  2E09               	decfsz	(??___fttol+4)& (0+255),f,c
   718  007DBE  D7FA               	goto	u795
   719  007DC0  5006               	movf	??___fttol+1,w,c
   720  007DC2  6E0A               	movwf	___fttol@sign1,c
   721  007DC4  8E02               	bsf	___fttol@f1+1,7,c
   722  007DC6  0EFF               	movlw	255
   723  007DC8  1601               	andwf	___fttol@f1,f,c
   724  007DCA  0EFF               	movlw	255
   725  007DCC  1602               	andwf	___fttol@f1+1,f,c
   726  007DCE  0E00               	movlw	0
   727  007DD0  1603               	andwf	___fttol@f1+2,f,c
   728  007DD2  5001               	movf	___fttol@f1,w,c
   729  007DD4  6E0B               	movwf	___fttol@lval,c
   730  007DD6  5002               	movf	___fttol@f1+1,w,c
   731  007DD8  6E0C               	movwf	___fttol@lval+1,c
   732  007DDA  5003               	movf	___fttol@f1+2,w,c
   733  007DDC  6E0D               	movwf	___fttol@lval+2,c
   734  007DDE  6A0E               	clrf	___fttol@lval+3,c
   735  007DE0  0E8E               	movlw	142
   736  007DE2  5E0F               	subwf	___fttol@exp1,f,c
   737  007DE4  AE0F               	btfss	___fttol@exp1,7,c
   738  007DE6  D016               	goto	l1220
   739  007DE8  500F               	movf	___fttol@exp1,w,c
   740  007DEA  0A80               	xorlw	128
   741  007DEC  0F8F               	addlw	143
   742  007DEE  B0D8               	btfsc	status,0,c
   743  007DF0  D009               	goto	l1216
   744  007DF2  0E00               	movlw	0
   745  007DF4  6E01               	movwf	?___fttol,c
   746  007DF6  0E00               	movlw	0
   747  007DF8  6E02               	movwf	?___fttol+1,c
   748  007DFA  0E00               	movlw	0
   749  007DFC  6E03               	movwf	?___fttol+2,c
   750  007DFE  0E00               	movlw	0
   751  007E00  6E04               	movwf	?___fttol+3,c
   752  007E02  0012               	return	
   753  007E04                     l1216:
   754  007E04  90D8               	bcf	status,0,c
   755  007E06  320E               	rrcf	___fttol@lval+3,f,c
   756  007E08  320D               	rrcf	___fttol@lval+2,f,c
   757  007E0A  320C               	rrcf	___fttol@lval+1,f,c
   758  007E0C  320B               	rrcf	___fttol@lval,f,c
   759  007E0E  3E0F               	incfsz	___fttol@exp1,f,c
   760  007E10  D7F9               	goto	l1216
   761  007E12  D015               	goto	l1230
   762  007E14                     l1220:
   763  007E14  0E17               	movlw	23
   764  007E16  640F               	cpfsgt	___fttol@exp1,c
   765  007E18  D00F               	goto	l1228
   766  007E1A  0E00               	movlw	0
   767  007E1C  6E01               	movwf	?___fttol,c
   768  007E1E  0E00               	movlw	0
   769  007E20  6E02               	movwf	?___fttol+1,c
   770  007E22  0E00               	movlw	0
   771  007E24  6E03               	movwf	?___fttol+2,c
   772  007E26  0E00               	movlw	0
   773  007E28  6E04               	movwf	?___fttol+3,c
   774  007E2A  0012               	return	
   775  007E2C                     l1226:
   776  007E2C  90D8               	bcf	status,0,c
   777  007E2E  360B               	rlcf	___fttol@lval,f,c
   778  007E30  360C               	rlcf	___fttol@lval+1,f,c
   779  007E32  360D               	rlcf	___fttol@lval+2,f,c
   780  007E34  360E               	rlcf	___fttol@lval+3,f,c
   781  007E36  060F               	decf	___fttol@exp1,f,c
   782  007E38                     l1228:
   783  007E38  500F               	movf	___fttol@exp1,w,c
   784  007E3A  A4D8               	btfss	status,2,c
   785  007E3C  D7F7               	goto	l1226
   786  007E3E                     l1230:
   787  007E3E  500A               	movf	___fttol@sign1,w,c
   788  007E40  B4D8               	btfsc	status,2,c
   789  007E42  D008               	goto	l1234
   790  007E44  1E0E               	comf	___fttol@lval+3,f,c
   791  007E46  1E0D               	comf	___fttol@lval+2,f,c
   792  007E48  1E0C               	comf	___fttol@lval+1,f,c
   793  007E4A  6C0B               	negf	___fttol@lval,c
   794  007E4C  0E00               	movlw	0
   795  007E4E  220C               	addwfc	___fttol@lval+1,f,c
   796  007E50  220D               	addwfc	___fttol@lval+2,f,c
   797  007E52  220E               	addwfc	___fttol@lval+3,f,c
   798  007E54                     l1234:
   799  007E54  C00B  F001         	movff	___fttol@lval,?___fttol
   800  007E58  C00C  F002         	movff	___fttol@lval+1,?___fttol+1
   801  007E5C  C00D  F003         	movff	___fttol@lval+2,?___fttol+2
   802  007E60  C00E  F004         	movff	___fttol@lval+3,?___fttol+3
   803  007E64  0012               	return	
   804  007E66                     __end_of___fttol:
   805                           	opt stack 0
   806                           tblptru	equ	0xFF8
   807                           tblptrh	equ	0xFF7
   808                           tblptrl	equ	0xFF6
   809                           tablat	equ	0xFF5
   810                           postinc0	equ	0xFEE
   811                           wreg	equ	0xFE8
   812                           postdec1	equ	0xFE5
   813                           fsr1l	equ	0xFE1
   814                           indf2	equ	0xFDF
   815                           fsr2h	equ	0xFDA
   816                           fsr2l	equ	0xFD9
   817                           status	equ	0xFD8
   818                           
   819 ;; *************** function ___ftmul *****************
   820 ;; Defined at:
   821 ;;		line 62 in file "D:\mplab\sources\common\ftmul.c"
   822 ;; Parameters:    Size  Location     Type
   823 ;;  f1              3    8[COMRAM] float 
   824 ;;  f2              3   11[COMRAM] float 
   825 ;; Auto vars:     Size  Location     Type
   826 ;;  f3_as_produc    3   18[COMRAM] unsigned um
   827 ;;  sign            1   22[COMRAM] unsigned char 
   828 ;;  cntr            1   21[COMRAM] unsigned char 
   829 ;;  exp             1   17[COMRAM] unsigned char 
   830 ;; Return value:  Size  Location     Type
   831 ;;                  3    8[COMRAM] float 
   832 ;; Registers used:
   833 ;;		wreg, status,2, status,0, cstack
   834 ;; Tracked objects:
   835 ;;		On entry : 0/0
   836 ;;		On exit  : 0/0
   837 ;;		Unchanged: 0/0
   838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   839 ;;      Params:         6       0       0       0       0       0       0       0       0
   840 ;;      Locals:         6       0       0       0       0       0       0       0       0
   841 ;;      Temps:          3       0       0       0       0       0       0       0       0
   842 ;;      Totals:        15       0       0       0       0       0       0       0       0
   843 ;;Total ram usage:       15 bytes
   844 ;; Hardware stack levels used:    1
   845 ;; Hardware stack levels required when called:    1
   846 ;; This function calls:
   847 ;;		___ftpack
   848 ;; This function is called by:
   849 ;;		_main
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           
   853                           	psect	text2
   854  007C7E                     __ptext2:
   855                           	opt stack 0
   856  007C7E                     ___ftmul:
   857                           	opt stack 29
   858                           
   859                           ;incstack = 0
   860  007C7E  C00B  F00F         	movff	___ftmul@f1+2,??___ftmul
   861  007C82  6A10               	clrf	(??___ftmul+1)& (0+255),c
   862  007C84  6A11               	clrf	(??___ftmul+2)& (0+255),c
   863  007C86  340A               	rlcf	___ftmul@f1+1,w,c
   864  007C88  360F               	rlcf	??___ftmul& (0+255),f,c
   865  007C8A  E301               	bnc	u581
   866  007C8C  8010               	bsf	(??___ftmul+1)& (0+255),0,c
   867  007C8E                     u581:
   868  007C8E  500F               	movf	??___ftmul,w,c
   869  007C90  6E12               	movwf	___ftmul@exp,c
   870  007C92  5012               	movf	___ftmul@exp,w,c
   871  007C94  A4D8               	btfss	status,2,c
   872  007C96  D007               	goto	l1058
   873  007C98  0E00               	movlw	0
   874  007C9A  6E09               	movwf	?___ftmul,c
   875  007C9C  0E00               	movlw	0
   876  007C9E  6E0A               	movwf	?___ftmul+1,c
   877  007CA0  0E00               	movlw	0
   878  007CA2  6E0B               	movwf	?___ftmul+2,c
   879  007CA4  0012               	return	
   880  007CA6                     l1058:
   881  007CA6  C00E  F00F         	movff	___ftmul@f2+2,??___ftmul
   882  007CAA  6A10               	clrf	(??___ftmul+1)& (0+255),c
   883  007CAC  6A11               	clrf	(??___ftmul+2)& (0+255),c
   884  007CAE  340D               	rlcf	___ftmul@f2+1,w,c
   885  007CB0  360F               	rlcf	??___ftmul& (0+255),f,c
   886  007CB2  E301               	bnc	u601
   887  007CB4  8010               	bsf	(??___ftmul+1)& (0+255),0,c
   888  007CB6                     u601:
   889  007CB6  500F               	movf	??___ftmul,w,c
   890  007CB8  6E17               	movwf	___ftmul@sign,c
   891  007CBA  5017               	movf	___ftmul@sign,w,c
   892  007CBC  A4D8               	btfss	status,2,c
   893  007CBE  D007               	goto	l1064
   894  007CC0  0E00               	movlw	0
   895  007CC2  6E09               	movwf	?___ftmul,c
   896  007CC4  0E00               	movlw	0
   897  007CC6  6E0A               	movwf	?___ftmul+1,c
   898  007CC8  0E00               	movlw	0
   899  007CCA  6E0B               	movwf	?___ftmul+2,c
   900  007CCC  0012               	return	
   901  007CCE                     l1064:
   902  007CCE  5017               	movf	___ftmul@sign,w,c
   903  007CD0  0F7B               	addlw	123
   904  007CD2  2612               	addwf	___ftmul@exp,f,c
   905  007CD4  C00B  F017         	movff	___ftmul@f1+2,___ftmul@sign
   906  007CD8  500E               	movf	___ftmul@f2+2,w,c
   907  007CDA  1A17               	xorwf	___ftmul@sign,f,c
   908  007CDC  0E80               	movlw	128
   909  007CDE  1617               	andwf	___ftmul@sign,f,c
   910  007CE0  8E0A               	bsf	___ftmul@f1+1,7,c
   911  007CE2  8E0D               	bsf	___ftmul@f2+1,7,c
   912  007CE4  0EFF               	movlw	255
   913  007CE6  160C               	andwf	___ftmul@f2,f,c
   914  007CE8  0EFF               	movlw	255
   915  007CEA  160D               	andwf	___ftmul@f2+1,f,c
   916  007CEC  0E00               	movlw	0
   917  007CEE  160E               	andwf	___ftmul@f2+2,f,c
   918  007CF0  0E00               	movlw	0
   919  007CF2  6E13               	movwf	___ftmul@f3_as_product,c
   920  007CF4  0E00               	movlw	0
   921  007CF6  6E14               	movwf	___ftmul@f3_as_product+1,c
   922  007CF8  0E00               	movlw	0
   923  007CFA  6E15               	movwf	___ftmul@f3_as_product+2,c
   924  007CFC  0E07               	movlw	7
   925  007CFE  6E16               	movwf	___ftmul@cntr,c
   926  007D00                     l1078:
   927  007D00  A009               	btfss	___ftmul@f1,0,c
   928  007D02  D006               	goto	l1082
   929  007D04  500C               	movf	___ftmul@f2,w,c
   930  007D06  2613               	addwf	___ftmul@f3_as_product,f,c
   931  007D08  500D               	movf	___ftmul@f2+1,w,c
   932  007D0A  2214               	addwfc	___ftmul@f3_as_product+1,f,c
   933  007D0C  500E               	movf	___ftmul@f2+2,w,c
   934  007D0E  2215               	addwfc	___ftmul@f3_as_product+2,f,c
   935  007D10                     l1082:
   936  007D10  90D8               	bcf	status,0,c
   937  007D12  320B               	rrcf	___ftmul@f1+2,f,c
   938  007D14  320A               	rrcf	___ftmul@f1+1,f,c
   939  007D16  3209               	rrcf	___ftmul@f1,f,c
   940  007D18  90D8               	bcf	status,0,c
   941  007D1A  360C               	rlcf	___ftmul@f2,f,c
   942  007D1C  360D               	rlcf	___ftmul@f2+1,f,c
   943  007D1E  360E               	rlcf	___ftmul@f2+2,f,c
   944  007D20  2E16               	decfsz	___ftmul@cntr,f,c
   945  007D22  D7EE               	goto	l1078
   946  007D24  0E09               	movlw	9
   947  007D26  6E16               	movwf	___ftmul@cntr,c
   948  007D28                     l1088:
   949  007D28  A009               	btfss	___ftmul@f1,0,c
   950  007D2A  D006               	goto	l1092
   951  007D2C  500C               	movf	___ftmul@f2,w,c
   952  007D2E  2613               	addwf	___ftmul@f3_as_product,f,c
   953  007D30  500D               	movf	___ftmul@f2+1,w,c
   954  007D32  2214               	addwfc	___ftmul@f3_as_product+1,f,c
   955  007D34  500E               	movf	___ftmul@f2+2,w,c
   956  007D36  2215               	addwfc	___ftmul@f3_as_product+2,f,c
   957  007D38                     l1092:
   958  007D38  90D8               	bcf	status,0,c
   959  007D3A  320B               	rrcf	___ftmul@f1+2,f,c
   960  007D3C  320A               	rrcf	___ftmul@f1+1,f,c
   961  007D3E  3209               	rrcf	___ftmul@f1,f,c
   962  007D40  90D8               	bcf	status,0,c
   963  007D42  3215               	rrcf	___ftmul@f3_as_product+2,f,c
   964  007D44  3214               	rrcf	___ftmul@f3_as_product+1,f,c
   965  007D46  3213               	rrcf	___ftmul@f3_as_product,f,c
   966  007D48  2E16               	decfsz	___ftmul@cntr,f,c
   967  007D4A  D7EE               	goto	l1088
   968  007D4C  C013  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
   969  007D50  C014  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
   970  007D54  C015  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
   971  007D58  C012  F004         	movff	___ftmul@exp,___ftpack@exp
   972  007D5C  C017  F005         	movff	___ftmul@sign,___ftpack@sign
   973  007D60  EC75  F03D         	call	___ftpack	;wreg free
   974  007D64  C001  F009         	movff	?___ftpack,?___ftmul
   975  007D68  C002  F00A         	movff	?___ftpack+1,?___ftmul+1
   976  007D6C  C003  F00B         	movff	?___ftpack+2,?___ftmul+2
   977  007D70  0012               	return	
   978  007D72                     __end_of___ftmul:
   979                           	opt stack 0
   980                           tblptru	equ	0xFF8
   981                           tblptrh	equ	0xFF7
   982                           tblptrl	equ	0xFF6
   983                           tablat	equ	0xFF5
   984                           postinc0	equ	0xFEE
   985                           wreg	equ	0xFE8
   986                           postdec1	equ	0xFE5
   987                           fsr1l	equ	0xFE1
   988                           indf2	equ	0xFDF
   989                           fsr2h	equ	0xFDA
   990                           fsr2l	equ	0xFD9
   991                           status	equ	0xFD8
   992                           
   993 ;; *************** function ___ftdiv *****************
   994 ;; Defined at:
   995 ;;		line 54 in file "D:\mplab\sources\common\ftdiv.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;  f1              3   23[COMRAM] float 
   998 ;;  f2              3   26[COMRAM] float 
   999 ;; Auto vars:     Size  Location     Type
  1000 ;;  f3              3   33[COMRAM] float 
  1001 ;;  sign            1   37[COMRAM] unsigned char 
  1002 ;;  exp             1   36[COMRAM] unsigned char 
  1003 ;;  cntr            1   32[COMRAM] unsigned char 
  1004 ;; Return value:  Size  Location     Type
  1005 ;;                  3   23[COMRAM] float 
  1006 ;; Registers used:
  1007 ;;		wreg, status,2, status,0, cstack
  1008 ;; Tracked objects:
  1009 ;;		On entry : 0/0
  1010 ;;		On exit  : 0/0
  1011 ;;		Unchanged: 0/0
  1012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1013 ;;      Params:         6       0       0       0       0       0       0       0       0
  1014 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1015 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1016 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1017 ;;Total ram usage:       15 bytes
  1018 ;; Hardware stack levels used:    1
  1019 ;; Hardware stack levels required when called:    1
  1020 ;; This function calls:
  1021 ;;		___ftpack
  1022 ;; This function is called by:
  1023 ;;		_main
  1024 ;; This function uses a non-reentrant model
  1025 ;;
  1026                           
  1027                           	psect	text3
  1028  007B98                     __ptext3:
  1029                           	opt stack 0
  1030  007B98                     ___ftdiv:
  1031                           	opt stack 29
  1032                           
  1033                           ;incstack = 0
  1034  007B98  C01A  F01E         	movff	___ftdiv@f1+2,??___ftdiv
  1035  007B9C  6A1F               	clrf	(??___ftdiv+1)& (0+255),c
  1036  007B9E  6A20               	clrf	(??___ftdiv+2)& (0+255),c
  1037  007BA0  3419               	rlcf	___ftdiv@f1+1,w,c
  1038  007BA2  361E               	rlcf	??___ftdiv& (0+255),f,c
  1039  007BA4  E301               	bnc	u531
  1040  007BA6  801F               	bsf	(??___ftdiv+1)& (0+255),0,c
  1041  007BA8                     u531:
  1042  007BA8  501E               	movf	??___ftdiv,w,c
  1043  007BAA  6E25               	movwf	___ftdiv@exp,c
  1044  007BAC  5025               	movf	___ftdiv@exp,w,c
  1045  007BAE  A4D8               	btfss	status,2,c
  1046  007BB0  D007               	goto	l1012
  1047  007BB2  0E00               	movlw	0
  1048  007BB4  6E18               	movwf	?___ftdiv,c
  1049  007BB6  0E00               	movlw	0
  1050  007BB8  6E19               	movwf	?___ftdiv+1,c
  1051  007BBA  0E00               	movlw	0
  1052  007BBC  6E1A               	movwf	?___ftdiv+2,c
  1053  007BBE  0012               	return	
  1054  007BC0                     l1012:
  1055  007BC0  C01D  F01E         	movff	___ftdiv@f2+2,??___ftdiv
  1056  007BC4  6A1F               	clrf	(??___ftdiv+1)& (0+255),c
  1057  007BC6  6A20               	clrf	(??___ftdiv+2)& (0+255),c
  1058  007BC8  341C               	rlcf	___ftdiv@f2+1,w,c
  1059  007BCA  361E               	rlcf	??___ftdiv& (0+255),f,c
  1060  007BCC  E301               	bnc	u551
  1061  007BCE  801F               	bsf	(??___ftdiv+1)& (0+255),0,c
  1062  007BD0                     u551:
  1063  007BD0  501E               	movf	??___ftdiv,w,c
  1064  007BD2  6E26               	movwf	___ftdiv@sign,c
  1065  007BD4  5026               	movf	___ftdiv@sign,w,c
  1066  007BD6  A4D8               	btfss	status,2,c
  1067  007BD8  D007               	goto	l1018
  1068  007BDA  0E00               	movlw	0
  1069  007BDC  6E18               	movwf	?___ftdiv,c
  1070  007BDE  0E00               	movlw	0
  1071  007BE0  6E19               	movwf	?___ftdiv+1,c
  1072  007BE2  0E00               	movlw	0
  1073  007BE4  6E1A               	movwf	?___ftdiv+2,c
  1074  007BE6  0012               	return	
  1075  007BE8                     l1018:
  1076  007BE8  0E00               	movlw	0
  1077  007BEA  6E22               	movwf	___ftdiv@f3,c
  1078  007BEC  0E00               	movlw	0
  1079  007BEE  6E23               	movwf	___ftdiv@f3+1,c
  1080  007BF0  0E00               	movlw	0
  1081  007BF2  6E24               	movwf	___ftdiv@f3+2,c
  1082  007BF4  5026               	movf	___ftdiv@sign,w,c
  1083  007BF6  0F89               	addlw	137
  1084  007BF8  5E25               	subwf	___ftdiv@exp,f,c
  1085  007BFA  C01A  F026         	movff	___ftdiv@f1+2,___ftdiv@sign
  1086  007BFE  501D               	movf	___ftdiv@f2+2,w,c
  1087  007C00  1A26               	xorwf	___ftdiv@sign,f,c
  1088  007C02  0E80               	movlw	128
  1089  007C04  1626               	andwf	___ftdiv@sign,f,c
  1090  007C06  8E19               	bsf	___ftdiv@f1+1,7,c
  1091  007C08  0EFF               	movlw	255
  1092  007C0A  1618               	andwf	___ftdiv@f1,f,c
  1093  007C0C  0EFF               	movlw	255
  1094  007C0E  1619               	andwf	___ftdiv@f1+1,f,c
  1095  007C10  0E00               	movlw	0
  1096  007C12  161A               	andwf	___ftdiv@f1+2,f,c
  1097  007C14  8E1C               	bsf	___ftdiv@f2+1,7,c
  1098  007C16  0EFF               	movlw	255
  1099  007C18  161B               	andwf	___ftdiv@f2,f,c
  1100  007C1A  0EFF               	movlw	255
  1101  007C1C  161C               	andwf	___ftdiv@f2+1,f,c
  1102  007C1E  0E00               	movlw	0
  1103  007C20  161D               	andwf	___ftdiv@f2+2,f,c
  1104  007C22  0E18               	movlw	24
  1105  007C24  6E21               	movwf	___ftdiv@cntr,c
  1106  007C26                     l1038:
  1107  007C26  90D8               	bcf	status,0,c
  1108  007C28  3622               	rlcf	___ftdiv@f3,f,c
  1109  007C2A  3623               	rlcf	___ftdiv@f3+1,f,c
  1110  007C2C  3624               	rlcf	___ftdiv@f3+2,f,c
  1111  007C2E  501B               	movf	___ftdiv@f2,w,c
  1112  007C30  5C18               	subwf	___ftdiv@f1,w,c
  1113  007C32  501C               	movf	___ftdiv@f2+1,w,c
  1114  007C34  5819               	subwfb	___ftdiv@f1+1,w,c
  1115  007C36  501D               	movf	___ftdiv@f2+2,w,c
  1116  007C38  581A               	subwfb	___ftdiv@f1+2,w,c
  1117  007C3A  A0D8               	btfss	status,0,c
  1118  007C3C  D007               	goto	l331
  1119  007C3E  501B               	movf	___ftdiv@f2,w,c
  1120  007C40  5E18               	subwf	___ftdiv@f1,f,c
  1121  007C42  501C               	movf	___ftdiv@f2+1,w,c
  1122  007C44  5A19               	subwfb	___ftdiv@f1+1,f,c
  1123  007C46  501D               	movf	___ftdiv@f2+2,w,c
  1124  007C48  5A1A               	subwfb	___ftdiv@f1+2,f,c
  1125  007C4A  8022               	bsf	___ftdiv@f3,0,c
  1126  007C4C                     l331:
  1127  007C4C  90D8               	bcf	status,0,c
  1128  007C4E  3618               	rlcf	___ftdiv@f1,f,c
  1129  007C50  3619               	rlcf	___ftdiv@f1+1,f,c
  1130  007C52  361A               	rlcf	___ftdiv@f1+2,f,c
  1131  007C54  2E21               	decfsz	___ftdiv@cntr,f,c
  1132  007C56  D7E7               	goto	l1038
  1133  007C58  C022  F001         	movff	___ftdiv@f3,___ftpack@arg
  1134  007C5C  C023  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  1135  007C60  C024  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  1136  007C64  C025  F004         	movff	___ftdiv@exp,___ftpack@exp
  1137  007C68  C026  F005         	movff	___ftdiv@sign,___ftpack@sign
  1138  007C6C  EC75  F03D         	call	___ftpack	;wreg free
  1139  007C70  C001  F018         	movff	?___ftpack,?___ftdiv
  1140  007C74  C002  F019         	movff	?___ftpack+1,?___ftdiv+1
  1141  007C78  C003  F01A         	movff	?___ftpack+2,?___ftdiv+2
  1142  007C7C  0012               	return	
  1143  007C7E                     __end_of___ftdiv:
  1144                           	opt stack 0
  1145                           tblptru	equ	0xFF8
  1146                           tblptrh	equ	0xFF7
  1147                           tblptrl	equ	0xFF6
  1148                           tablat	equ	0xFF5
  1149                           postinc0	equ	0xFEE
  1150                           wreg	equ	0xFE8
  1151                           postdec1	equ	0xFE5
  1152                           fsr1l	equ	0xFE1
  1153                           indf2	equ	0xFDF
  1154                           fsr2h	equ	0xFDA
  1155                           fsr2l	equ	0xFD9
  1156                           status	equ	0xFD8
  1157                           
  1158 ;; *************** function ___awtoft *****************
  1159 ;; Defined at:
  1160 ;;		line 32 in file "D:\mplab\sources\common\awtoft.c"
  1161 ;; Parameters:    Size  Location     Type
  1162 ;;  c               2    8[COMRAM] int 
  1163 ;; Auto vars:     Size  Location     Type
  1164 ;;  sign            1   11[COMRAM] unsigned char 
  1165 ;; Return value:  Size  Location     Type
  1166 ;;                  3    8[COMRAM] float 
  1167 ;; Registers used:
  1168 ;;		wreg, status,2, status,0, cstack
  1169 ;; Tracked objects:
  1170 ;;		On entry : 0/0
  1171 ;;		On exit  : 0/0
  1172 ;;		Unchanged: 0/0
  1173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1174 ;;      Params:         3       0       0       0       0       0       0       0       0
  1175 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1176 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1177 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1178 ;;Total ram usage:        4 bytes
  1179 ;; Hardware stack levels used:    1
  1180 ;; Hardware stack levels required when called:    1
  1181 ;; This function calls:
  1182 ;;		___ftpack
  1183 ;; This function is called by:
  1184 ;;		_main
  1185 ;; This function uses a non-reentrant model
  1186 ;;
  1187                           
  1188                           	psect	text4
  1189  0079BE                     __ptext4:
  1190                           	opt stack 0
  1191  0079BE                     ___awtoft:
  1192                           	opt stack 29
  1193                           
  1194                           ;incstack = 0
  1195  0079BE  0E00               	movlw	0
  1196  0079C0  6E0C               	movwf	___awtoft@sign,c
  1197  0079C2  AE0A               	btfss	___awtoft@c+1,7,c
  1198  0079C4  D006               	goto	l1188
  1199  0079C6  6C09               	negf	___awtoft@c,c
  1200  0079C8  1E0A               	comf	___awtoft@c+1,f,c
  1201  0079CA  B0D8               	btfsc	status,0,c
  1202  0079CC  2A0A               	incf	___awtoft@c+1,f,c
  1203  0079CE  0E01               	movlw	1
  1204  0079D0  6E0C               	movwf	___awtoft@sign,c
  1205  0079D2                     l1188:
  1206  0079D2  C009  F001         	movff	___awtoft@c,___ftpack@arg
  1207  0079D6  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  1208  0079DA  6A03               	clrf	___ftpack@arg+2,c
  1209  0079DC  0E8E               	movlw	142
  1210  0079DE  6E04               	movwf	___ftpack@exp,c
  1211  0079E0  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  1212  0079E4  EC75  F03D         	call	___ftpack	;wreg free
  1213  0079E8  C001  F009         	movff	?___ftpack,?___awtoft
  1214  0079EC  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  1215  0079F0  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  1216  0079F4  0012               	return	
  1217  0079F6                     __end_of___awtoft:
  1218                           	opt stack 0
  1219                           tblptru	equ	0xFF8
  1220                           tblptrh	equ	0xFF7
  1221                           tblptrl	equ	0xFF6
  1222                           tablat	equ	0xFF5
  1223                           postinc0	equ	0xFEE
  1224                           wreg	equ	0xFE8
  1225                           postdec1	equ	0xFE5
  1226                           fsr1l	equ	0xFE1
  1227                           indf2	equ	0xFDF
  1228                           fsr2h	equ	0xFDA
  1229                           fsr2l	equ	0xFD9
  1230                           status	equ	0xFD8
  1231                           
  1232 ;; *************** function ___ftpack *****************
  1233 ;; Defined at:
  1234 ;;		line 62 in file "D:\mplab\sources\common\float.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;  arg             3    0[COMRAM] unsigned um
  1237 ;;  exp             1    3[COMRAM] unsigned char 
  1238 ;;  sign            1    4[COMRAM] unsigned char 
  1239 ;; Auto vars:     Size  Location     Type
  1240 ;;		None
  1241 ;; Return value:  Size  Location     Type
  1242 ;;                  3    0[COMRAM] float 
  1243 ;; Registers used:
  1244 ;;		wreg, status,2, status,0
  1245 ;; Tracked objects:
  1246 ;;		On entry : 0/0
  1247 ;;		On exit  : 0/0
  1248 ;;		Unchanged: 0/0
  1249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1250 ;;      Params:         5       0       0       0       0       0       0       0       0
  1251 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1252 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1253 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1254 ;;Total ram usage:        8 bytes
  1255 ;; Hardware stack levels used:    1
  1256 ;; This function calls:
  1257 ;;		Nothing
  1258 ;; This function is called by:
  1259 ;;		___awtoft
  1260 ;;		___ftdiv
  1261 ;;		___ftmul
  1262 ;; This function uses a non-reentrant model
  1263 ;;
  1264                           
  1265                           	psect	text5
  1266  007AEA                     __ptext5:
  1267                           	opt stack 0
  1268  007AEA                     ___ftpack:
  1269                           	opt stack 29
  1270                           
  1271                           ;incstack = 0
  1272  007AEA  5004               	movf	___ftpack@exp,w,c
  1273  007AEC  B4D8               	btfsc	status,2,c
  1274  007AEE  D005               	goto	l974
  1275  007AF0  5001               	movf	___ftpack@arg,w,c
  1276  007AF2  1002               	iorwf	___ftpack@arg+1,w,c
  1277  007AF4  1003               	iorwf	___ftpack@arg+2,w,c
  1278  007AF6  A4D8               	btfss	status,2,c
  1279  007AF8  D00C               	goto	l980
  1280  007AFA                     l974:
  1281  007AFA  0E00               	movlw	0
  1282  007AFC  6E01               	movwf	?___ftpack,c
  1283  007AFE  0E00               	movlw	0
  1284  007B00  6E02               	movwf	?___ftpack+1,c
  1285  007B02  0E00               	movlw	0
  1286  007B04  6E03               	movwf	?___ftpack+2,c
  1287  007B06  0012               	return	
  1288  007B08                     l978:
  1289  007B08  2A04               	incf	___ftpack@exp,f,c
  1290  007B0A  90D8               	bcf	status,0,c
  1291  007B0C  3203               	rrcf	___ftpack@arg+2,f,c
  1292  007B0E  3202               	rrcf	___ftpack@arg+1,f,c
  1293  007B10  3201               	rrcf	___ftpack@arg,f,c
  1294  007B12                     l980:
  1295  007B12  0E00               	movlw	0
  1296  007B14  1401               	andwf	___ftpack@arg,w,c
  1297  007B16  6E06               	movwf	??___ftpack& (0+255),c
  1298  007B18  0E00               	movlw	0
  1299  007B1A  1402               	andwf	___ftpack@arg+1,w,c
  1300  007B1C  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1301  007B1E  0EFE               	movlw	254
  1302  007B20  1403               	andwf	___ftpack@arg+2,w,c
  1303  007B22  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1304  007B24  5006               	movf	??___ftpack,w,c
  1305  007B26  1007               	iorwf	??___ftpack+1,w,c
  1306  007B28  1008               	iorwf	??___ftpack+2,w,c
  1307  007B2A  B4D8               	btfsc	status,2,c
  1308  007B2C  D00C               	goto	l986
  1309  007B2E  D7EC               	goto	l978
  1310  007B30                     l982:
  1311  007B30  2A04               	incf	___ftpack@exp,f,c
  1312  007B32  0E01               	movlw	1
  1313  007B34  2601               	addwf	___ftpack@arg,f,c
  1314  007B36  0E00               	movlw	0
  1315  007B38  2202               	addwfc	___ftpack@arg+1,f,c
  1316  007B3A  0E00               	movlw	0
  1317  007B3C  2203               	addwfc	___ftpack@arg+2,f,c
  1318  007B3E  90D8               	bcf	status,0,c
  1319  007B40  3203               	rrcf	___ftpack@arg+2,f,c
  1320  007B42  3202               	rrcf	___ftpack@arg+1,f,c
  1321  007B44  3201               	rrcf	___ftpack@arg,f,c
  1322  007B46                     l986:
  1323  007B46  0E00               	movlw	0
  1324  007B48  1401               	andwf	___ftpack@arg,w,c
  1325  007B4A  6E06               	movwf	??___ftpack& (0+255),c
  1326  007B4C  0E00               	movlw	0
  1327  007B4E  1402               	andwf	___ftpack@arg+1,w,c
  1328  007B50  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1329  007B52  0EFF               	movlw	255
  1330  007B54  1403               	andwf	___ftpack@arg+2,w,c
  1331  007B56  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1332  007B58  5006               	movf	??___ftpack,w,c
  1333  007B5A  1007               	iorwf	??___ftpack+1,w,c
  1334  007B5C  1008               	iorwf	??___ftpack+2,w,c
  1335  007B5E  B4D8               	btfsc	status,2,c
  1336  007B60  D006               	goto	l990
  1337  007B62  D7E6               	goto	l982
  1338  007B64                     l988:
  1339  007B64  0604               	decf	___ftpack@exp,f,c
  1340  007B66  90D8               	bcf	status,0,c
  1341  007B68  3601               	rlcf	___ftpack@arg,f,c
  1342  007B6A  3602               	rlcf	___ftpack@arg+1,f,c
  1343  007B6C  3603               	rlcf	___ftpack@arg+2,f,c
  1344  007B6E                     l990:
  1345  007B6E  BE02               	btfsc	___ftpack@arg+1,7,c
  1346  007B70  D003               	goto	l273
  1347  007B72  0E02               	movlw	2
  1348  007B74  6004               	cpfslt	___ftpack@exp,c
  1349  007B76  D7F6               	goto	l988
  1350  007B78                     l273:
  1351  007B78  A004               	btfss	___ftpack@exp,0,c
  1352  007B7A  9E02               	bcf	___ftpack@arg+1,7,c
  1353  007B7C  90D8               	bcf	status,0,c
  1354  007B7E  3204               	rrcf	___ftpack@exp,f,c
  1355  007B80  5004               	movf	___ftpack@exp,w,c
  1356  007B82  1203               	iorwf	___ftpack@arg+2,f,c
  1357  007B84  5005               	movf	___ftpack@sign,w,c
  1358  007B86  A4D8               	btfss	status,2,c
  1359  007B88  8E03               	bsf	___ftpack@arg+2,7,c
  1360  007B8A  C001  F001         	movff	___ftpack@arg,?___ftpack
  1361  007B8E  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  1362  007B92  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  1363  007B96  0012               	return	
  1364  007B98                     __end_of___ftpack:
  1365                           	opt stack 0
  1366                           tblptru	equ	0xFF8
  1367                           tblptrh	equ	0xFF7
  1368                           tblptrl	equ	0xFF6
  1369                           tablat	equ	0xFF5
  1370                           postinc0	equ	0xFEE
  1371                           wreg	equ	0xFE8
  1372                           postdec1	equ	0xFE5
  1373                           fsr1l	equ	0xFE1
  1374                           indf2	equ	0xFDF
  1375                           fsr2h	equ	0xFDA
  1376                           fsr2l	equ	0xFD9
  1377                           status	equ	0xFD8
  1378                           
  1379 ;; *************** function ___awmod *****************
  1380 ;; Defined at:
  1381 ;;		line 8 in file "D:\mplab\sources\common\awmod.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;  dividend        2    0[COMRAM] int 
  1384 ;;  divisor         2    2[COMRAM] int 
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;  sign            1    5[COMRAM] unsigned char 
  1387 ;;  counter         1    4[COMRAM] unsigned char 
  1388 ;; Return value:  Size  Location     Type
  1389 ;;                  2    0[COMRAM] int 
  1390 ;; Registers used:
  1391 ;;		wreg, status,2, status,0
  1392 ;; Tracked objects:
  1393 ;;		On entry : 0/0
  1394 ;;		On exit  : 0/0
  1395 ;;		Unchanged: 0/0
  1396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1397 ;;      Params:         4       0       0       0       0       0       0       0       0
  1398 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1399 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1400 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1401 ;;Total ram usage:        6 bytes
  1402 ;; Hardware stack levels used:    1
  1403 ;; This function calls:
  1404 ;;		Nothing
  1405 ;; This function is called by:
  1406 ;;		_main
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           	psect	text6
  1411  0079F6                     __ptext6:
  1412                           	opt stack 0
  1413  0079F6                     ___awmod:
  1414                           	opt stack 30
  1415                           
  1416                           ;incstack = 0
  1417  0079F6  0E00               	movlw	0
  1418  0079F8  6E06               	movwf	___awmod@sign,c
  1419  0079FA  AE02               	btfss	___awmod@dividend+1,7,c
  1420  0079FC  D006               	goto	l1152
  1421  0079FE  6C01               	negf	___awmod@dividend,c
  1422  007A00  1E02               	comf	___awmod@dividend+1,f,c
  1423  007A02  B0D8               	btfsc	status,0,c
  1424  007A04  2A02               	incf	___awmod@dividend+1,f,c
  1425  007A06  0E01               	movlw	1
  1426  007A08  6E06               	movwf	___awmod@sign,c
  1427  007A0A                     l1152:
  1428  007A0A  AE04               	btfss	___awmod@divisor+1,7,c
  1429  007A0C  D004               	goto	l1156
  1430  007A0E  6C03               	negf	___awmod@divisor,c
  1431  007A10  1E04               	comf	___awmod@divisor+1,f,c
  1432  007A12  B0D8               	btfsc	status,0,c
  1433  007A14  2A04               	incf	___awmod@divisor+1,f,c
  1434  007A16                     l1156:
  1435  007A16  5003               	movf	___awmod@divisor,w,c
  1436  007A18  1004               	iorwf	___awmod@divisor+1,w,c
  1437  007A1A  B4D8               	btfsc	status,2,c
  1438  007A1C  D018               	goto	l1172
  1439  007A1E  0E01               	movlw	1
  1440  007A20  6E05               	movwf	___awmod@counter,c
  1441  007A22  D004               	goto	l1162
  1442  007A24                     l1160:
  1443  007A24  90D8               	bcf	status,0,c
  1444  007A26  3603               	rlcf	___awmod@divisor,f,c
  1445  007A28  3604               	rlcf	___awmod@divisor+1,f,c
  1446  007A2A  2A05               	incf	___awmod@counter,f,c
  1447  007A2C                     l1162:
  1448  007A2C  AE04               	btfss	___awmod@divisor+1,7,c
  1449  007A2E  D7FA               	goto	l1160
  1450  007A30                     l1164:
  1451  007A30  5003               	movf	___awmod@divisor,w,c
  1452  007A32  5C01               	subwf	___awmod@dividend,w,c
  1453  007A34  5004               	movf	___awmod@divisor+1,w,c
  1454  007A36  5802               	subwfb	___awmod@dividend+1,w,c
  1455  007A38  A0D8               	btfss	status,0,c
  1456  007A3A  D004               	goto	l1168
  1457  007A3C  5003               	movf	___awmod@divisor,w,c
  1458  007A3E  5E01               	subwf	___awmod@dividend,f,c
  1459  007A40  5004               	movf	___awmod@divisor+1,w,c
  1460  007A42  5A02               	subwfb	___awmod@dividend+1,f,c
  1461  007A44                     l1168:
  1462  007A44  90D8               	bcf	status,0,c
  1463  007A46  3204               	rrcf	___awmod@divisor+1,f,c
  1464  007A48  3203               	rrcf	___awmod@divisor,f,c
  1465  007A4A  2E05               	decfsz	___awmod@counter,f,c
  1466  007A4C  D7F1               	goto	l1164
  1467  007A4E                     l1172:
  1468  007A4E  5006               	movf	___awmod@sign,w,c
  1469  007A50  B4D8               	btfsc	status,2,c
  1470  007A52  D004               	goto	l1176
  1471  007A54  6C01               	negf	___awmod@dividend,c
  1472  007A56  1E02               	comf	___awmod@dividend+1,f,c
  1473  007A58  B0D8               	btfsc	status,0,c
  1474  007A5A  2A02               	incf	___awmod@dividend+1,f,c
  1475  007A5C                     l1176:
  1476  007A5C  C001  F001         	movff	___awmod@dividend,?___awmod
  1477  007A60  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1478  007A64  0012               	return	
  1479  007A66                     __end_of___awmod:
  1480                           	opt stack 0
  1481                           tblptru	equ	0xFF8
  1482                           tblptrh	equ	0xFF7
  1483                           tblptrl	equ	0xFF6
  1484                           tablat	equ	0xFF5
  1485                           postinc0	equ	0xFEE
  1486                           wreg	equ	0xFE8
  1487                           postdec1	equ	0xFE5
  1488                           fsr1l	equ	0xFE1
  1489                           indf2	equ	0xFDF
  1490                           fsr2h	equ	0xFDA
  1491                           fsr2l	equ	0xFD9
  1492                           status	equ	0xFD8
  1493                           
  1494 ;; *************** function ___awdiv *****************
  1495 ;; Defined at:
  1496 ;;		line 8 in file "D:\mplab\sources\common\awdiv.c"
  1497 ;; Parameters:    Size  Location     Type
  1498 ;;  dividend        2    6[COMRAM] int 
  1499 ;;  divisor         2    8[COMRAM] int 
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;  quotient        2   12[COMRAM] int 
  1502 ;;  sign            1   11[COMRAM] unsigned char 
  1503 ;;  counter         1   10[COMRAM] unsigned char 
  1504 ;; Return value:  Size  Location     Type
  1505 ;;                  2    6[COMRAM] int 
  1506 ;; Registers used:
  1507 ;;		wreg, status,2, status,0
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1513 ;;      Params:         4       0       0       0       0       0       0       0       0
  1514 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1515 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1516 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1517 ;;Total ram usage:        8 bytes
  1518 ;; Hardware stack levels used:    1
  1519 ;; This function calls:
  1520 ;;		Nothing
  1521 ;; This function is called by:
  1522 ;;		_main
  1523 ;; This function uses a non-reentrant model
  1524 ;;
  1525                           
  1526                           	psect	text7
  1527  007A66                     __ptext7:
  1528                           	opt stack 0
  1529  007A66                     ___awdiv:
  1530                           	opt stack 30
  1531                           
  1532                           ;incstack = 0
  1533  007A66  0E00               	movlw	0
  1534  007A68  6E0C               	movwf	___awdiv@sign,c
  1535  007A6A  AE0A               	btfss	___awdiv@divisor+1,7,c
  1536  007A6C  D006               	goto	l1108
  1537  007A6E  6C09               	negf	___awdiv@divisor,c
  1538  007A70  1E0A               	comf	___awdiv@divisor+1,f,c
  1539  007A72  B0D8               	btfsc	status,0,c
  1540  007A74  2A0A               	incf	___awdiv@divisor+1,f,c
  1541  007A76  0E01               	movlw	1
  1542  007A78  6E0C               	movwf	___awdiv@sign,c
  1543  007A7A                     l1108:
  1544  007A7A  AE08               	btfss	___awdiv@dividend+1,7,c
  1545  007A7C  D006               	goto	l1114
  1546  007A7E  6C07               	negf	___awdiv@dividend,c
  1547  007A80  1E08               	comf	___awdiv@dividend+1,f,c
  1548  007A82  B0D8               	btfsc	status,0,c
  1549  007A84  2A08               	incf	___awdiv@dividend+1,f,c
  1550  007A86  0E01               	movlw	1
  1551  007A88  1A0C               	xorwf	___awdiv@sign,f,c
  1552  007A8A                     l1114:
  1553  007A8A  0E00               	movlw	0
  1554  007A8C  6E0E               	movwf	___awdiv@quotient+1,c
  1555  007A8E  0E00               	movlw	0
  1556  007A90  6E0D               	movwf	___awdiv@quotient,c
  1557  007A92  5009               	movf	___awdiv@divisor,w,c
  1558  007A94  100A               	iorwf	___awdiv@divisor+1,w,c
  1559  007A96  B4D8               	btfsc	status,2,c
  1560  007A98  D01C               	goto	l1136
  1561  007A9A  0E01               	movlw	1
  1562  007A9C  6E0B               	movwf	___awdiv@counter,c
  1563  007A9E  D004               	goto	l1122
  1564  007AA0                     l1120:
  1565  007AA0  90D8               	bcf	status,0,c
  1566  007AA2  3609               	rlcf	___awdiv@divisor,f,c
  1567  007AA4  360A               	rlcf	___awdiv@divisor+1,f,c
  1568  007AA6  2A0B               	incf	___awdiv@counter,f,c
  1569  007AA8                     l1122:
  1570  007AA8  AE0A               	btfss	___awdiv@divisor+1,7,c
  1571  007AAA  D7FA               	goto	l1120
  1572  007AAC                     l1124:
  1573  007AAC  90D8               	bcf	status,0,c
  1574  007AAE  360D               	rlcf	___awdiv@quotient,f,c
  1575  007AB0  360E               	rlcf	___awdiv@quotient+1,f,c
  1576  007AB2  5009               	movf	___awdiv@divisor,w,c
  1577  007AB4  5C07               	subwf	___awdiv@dividend,w,c
  1578  007AB6  500A               	movf	___awdiv@divisor+1,w,c
  1579  007AB8  5808               	subwfb	___awdiv@dividend+1,w,c
  1580  007ABA  A0D8               	btfss	status,0,c
  1581  007ABC  D005               	goto	l1132
  1582  007ABE  5009               	movf	___awdiv@divisor,w,c
  1583  007AC0  5E07               	subwf	___awdiv@dividend,f,c
  1584  007AC2  500A               	movf	___awdiv@divisor+1,w,c
  1585  007AC4  5A08               	subwfb	___awdiv@dividend+1,f,c
  1586  007AC6  800D               	bsf	___awdiv@quotient,0,c
  1587  007AC8                     l1132:
  1588  007AC8  90D8               	bcf	status,0,c
  1589  007ACA  320A               	rrcf	___awdiv@divisor+1,f,c
  1590  007ACC  3209               	rrcf	___awdiv@divisor,f,c
  1591  007ACE  2E0B               	decfsz	___awdiv@counter,f,c
  1592  007AD0  D7ED               	goto	l1124
  1593  007AD2                     l1136:
  1594  007AD2  500C               	movf	___awdiv@sign,w,c
  1595  007AD4  B4D8               	btfsc	status,2,c
  1596  007AD6  D004               	goto	l1140
  1597  007AD8  6C0D               	negf	___awdiv@quotient,c
  1598  007ADA  1E0E               	comf	___awdiv@quotient+1,f,c
  1599  007ADC  B0D8               	btfsc	status,0,c
  1600  007ADE  2A0E               	incf	___awdiv@quotient+1,f,c
  1601  007AE0                     l1140:
  1602  007AE0  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  1603  007AE4  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  1604  007AE8  0012               	return	
  1605  007AEA                     __end_of___awdiv:
  1606                           	opt stack 0
  1607  0000                     tblptru	equ	0xFF8
  1608                           tblptrh	equ	0xFF7
  1609                           tblptrl	equ	0xFF6
  1610                           tablat	equ	0xFF5
  1611                           postinc0	equ	0xFEE
  1612                           wreg	equ	0xFE8
  1613                           postdec1	equ	0xFE5
  1614                           fsr1l	equ	0xFE1
  1615                           indf2	equ	0xFDF
  1616                           fsr2h	equ	0xFDA
  1617                           fsr2l	equ	0xFD9
  1618                           status	equ	0xFD8
  1619                           tblptru	equ	0xFF8
  1620                           tblptrh	equ	0xFF7
  1621                           tblptrl	equ	0xFF6
  1622                           tablat	equ	0xFF5
  1623                           postinc0	equ	0xFEE
  1624                           wreg	equ	0xFE8
  1625                           postdec1	equ	0xFE5
  1626                           fsr1l	equ	0xFE1
  1627                           indf2	equ	0xFDF
  1628                           fsr2h	equ	0xFDA
  1629                           fsr2l	equ	0xFD9
  1630                           status	equ	0xFD8
  1631                           
  1632                           	psect	rparam
  1633  0000                     tblptru	equ	0xFF8
  1634                           tblptrh	equ	0xFF7
  1635                           tblptrl	equ	0xFF6
  1636                           tablat	equ	0xFF5
  1637                           postinc0	equ	0xFEE
  1638                           wreg	equ	0xFE8
  1639                           postdec1	equ	0xFE5
  1640                           fsr1l	equ	0xFE1
  1641                           indf2	equ	0xFDF
  1642                           fsr2h	equ	0xFDA
  1643                           fsr2l	equ	0xFD9
  1644                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        18
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     44      68
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___ftdiv
    ___ftmul->___ftpack
    ___ftdiv->___ftmul
    ___awtoft->___ftpack
    ___awdiv->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    6458
                                             38 COMRAM     6     6      0
                            ___awdiv
                            ___awmod
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     295
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    1810
                                              8 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    1764
                                             23 COMRAM    15     9      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    1472
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1338
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     554
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     472
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___awmod (ARG)
   ___awmod
   ___awtoft
     ___ftpack
   ___ftdiv
     ___ftmul (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___ftmul
     ___ftpack
   ___fttol

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2C      44       1       71.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      44      20        0.0%
DATA                 0      0      44       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Sep 22 12:41:16 2021

                     l43 7FCC                       l38 7EB0             ___awdiv@sign 000C  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l331 7C4C  
                    l273 7B78                      l980 7B12                      l990 7B6E  
                    l982 7B30                      l974 7AFA                      l986 7B46  
                    l978 7B08                      l988 7B64             __CFG_CPB$OFF 000000  
                    u601 7CB6             __CFG_CPD$OFF 000000                      u531 7BA8  
                    u551 7BD0                      u581 7C8E                      u771 7D82  
                    u790 7DBC                      u795 7DB4                      u897 7FF0  
           __CFG_BOR$OFF 000000             ___awmod@sign 0006                      wreg 000FE8  
           __CFG_LVP$OFF 000000             ___ftdiv@cntr 0021             ___ftdiv@sign 0026  
           __CFG_WDT$OFF 000000                     l1012 7BC0                     l1120 7AA0  
                   l1122 7AA8                     l1114 7A8A                     l1018 7BE8  
                   l1140 7AE0                     l1132 7AC8                     l1124 7AAC  
                   l1108 7A7A                     l1220 7E14                     l1038 7C26  
                   l1230 7E3E                     l1136 7AD2                     l1160 7A24  
                   l1152 7A0A                     l1064 7CCE                     l1216 7E04  
                   l1162 7A2C                     l1082 7D10                     l1058 7CA6  
                   l1234 7E54                     l1226 7E2C                     l1164 7A30  
                   l1172 7A4E                     l1156 7A16                     l1092 7D38  
                   l1228 7E38                     l1078 7D00                     l1262 7EAE  
                   l1176 7A5C                     l1168 7A44                     l1088 7D28  
                   l1282 7FBC                     l1188 79D2                     l1292 7FE6  
                   l1198 7D9E             __CFG_PWRT$ON 000000                     _lm35 0044  
                   _main 7E66             ___ftpack@arg 0001             ___ftpack@exp 0004  
                   _temp 003F                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     start 0000            __CFG_IESO$OFF 000000  
           ___ftmul@cntr 0016             ___param_bank 000000             ___ftmul@sign 0017  
           ___fttol@exp1 000F             ___fttol@lval 000B            __CFG_PLLDIV$1 000000  
         __CFG_CCP2MX$ON 000000                    ?_main 0001          __end_of___awdiv 7AEA  
        __end_of___awmod 7A66          __end_of___ftdiv 7C7E          __end_of___ftmul 7D72  
        ___awdiv@divisor 0009          __end_of___fttol 7E66          ___awdiv@counter 000B  
                  _SPBRG 000FAF            __CFG_USBDIV$1 000000                    _TXREG 000FAD  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000            ___awtoft@sign 000C            ___ftpack@sign 0005  
                  main@i 002B                    tablat 000FF5                    status 000FD8  
         __CFG_ICPRT$OFF 000000           __CFG_MCLRE$OFF 000000          __initialization 798C  
           __end_of_main 8000                   ??_main 0027            ___fttol@sign1 000A  
          __activetblptr 000000                   _ADRESH 000FC4                   _ADRESL 000FC3  
       ___awdiv@dividend 0007         __end_of___awtoft 79F6         __end_of___ftpack 7B98  
         __CFG_XINST$OFF 000000                ??___awdiv 000B           __CFG_STVREN$ON 000000  
              ??___awmod 0005                ??___ftdiv 001E                ??___ftmul 000F  
              ??___fttol 0005         ___awdiv@quotient 000D          ___awmod@divisor 0003  
        ___awmod@counter 0005    ___ftmul@f3_as_product 0013             __pdataCOMRAM 002D  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 79B8          __CFG_PBADEN$OFF 000000  
          ___rparam_used 000001               ___ftdiv@f1 0018               ___ftdiv@f2 001B  
             ___ftdiv@f3 0022               ___awtoft@c 0009               ___ftmul@f1 0009  
             ___ftmul@f2 000C               ___fttol@f1 0001           __pcstackCOMRAM 0001  
              ?___awtoft 0009                ?___ftpack 0001          __CFG_VREGEN$OFF 000000  
                __Hparam 0000                  __Lparam 0000                  ___awdiv 7A66  
                ___awmod 79F6                  ___ftdiv 7B98                  ___ftmul 7C7E  
                ___fttol 7D72                  __pcinit 798C               ??___awtoft 000C  
             ??___ftpack 0006                  __ramtop 0800                  __ptext0 7E66  
                __ptext1 7D72                  __ptext2 7C7E                  __ptext3 7B98  
                __ptext4 79BE                  __ptext5 7AEA                  __ptext6 79F6  
                __ptext7 7A66         ___awmod@dividend 0001     end_of_initialization 79B8  
              _RCSTAbits 000FAB                  postdec1 000FE5                  postinc0 000FEE  
              _TRISCbits 000F94              ___ftdiv@exp 0025                _TXSTAbits 000FAC  
            ___ftmul@exp 0012              _BAUDCONbits 000FB8            __pidataCOMRAM 797A  
    start_initialization 798C         __CFG_LPT1OSC$OFF 000000        __size_of___awtoft 0038  
      __size_of___ftpack 00AE              __pbssCOMRAM 003F                 ?___awdiv 0007  
               ?___awmod 0001                 ?___ftdiv 0018                 ?___ftmul 0009  
               ?___fttol 0001                _buffer_TX 002D         __CFG_WDTPS$32768 000000  
              _value_adc 0042               _ADCON0bits 000FC2               _ADCON1bits 000FC1  
             _ADCON2bits 000FC0                copy_data0 79A0                 __Hrparam 0000  
               __Lrparam 0000         __size_of___awdiv 0084         __size_of___awmod 0070  
       __size_of___ftdiv 00E6         __size_of___ftmul 00F4         __size_of___fttol 00F4  
               ___awtoft 79BE                 ___ftpack 7AEA    __CFG_FOSC$INTOSCIO_EC 000000  
               _main$955 0029            __size_of_main 019A    __CFG_CPUDIV$OSC1_PLL2 000000  
             _OSCCONbits 000FD3  
