

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue Sep 28 11:49:37 2021

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20  0000                     
    21                           ; Version 1.41
    22                           ; Generated 25/01/2017 GMT
    23                           ; 
    24                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F4550 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     _RCREG	set	4014
    56  0000                     _TXREG	set	4013
    57  0000                     _RCSTA	set	4011
    58  0000                     _TXSTA	set	4012
    59  0000                     _SPBRG	set	4015
    60  0000                     _TRISD	set	3989
    61  0000                     _OSCCON	set	4051
    62  0000                     _RCIF	set	31989
    63  0000                     _TXIF	set	31988
    64  0000                     _TRISC7	set	31911
    65  0000                     _TRISC6	set	31910
    66  0000                     _LATD0	set	31840
    67                           
    68                           	psect	smallconst
    69  000800                     __psmallconst:
    70                           	opt stack 0
    71  000800  00                 	db	0
    72  000801                     STR_4:
    73  000801  20                 	db	32
    74  000802  73                 	db	115	;'s'
    75  000803  65                 	db	101	;'e'
    76  000804  6C                 	db	108	;'l'
    77  000805  65                 	db	101	;'e'
    78  000806  63                 	db	99	;'c'
    79  000807  74                 	db	116	;'t'
    80  000808  20                 	db	32
    81  000809  31                 	db	49	;'1'
    82  00080A  20                 	db	32
    83  00080B  6F                 	db	111	;'o'
    84  00080C  72                 	db	114	;'r'
    85  00080D  20                 	db	32
    86  00080E  32                 	db	50	;'2'
    87  00080F  0D                 	db	13
    88  000810  0A                 	db	10
    89  000811  00                 	db	0
    90  000812                     STR_1:
    91  000812  42                 	db	66	;'B'
    92  000813  49                 	db	73	;'I'
    93  000814  45                 	db	69	;'E'
    94  000815  4E                 	db	78	;'N'
    95  000816  56                 	db	86	;'V'
    96  000817  45                 	db	69	;'E'
    97  000818  4E                 	db	78	;'N'
    98  000819  49                 	db	73	;'I'
    99  00081A  44                 	db	68	;'D'
   100  00081B  4F                 	db	79	;'O'
   101  00081C  0D                 	db	13
   102  00081D  0A                 	db	10
   103  00081E  00                 	db	0
   104  00081F                     STR_3:
   105  00081F  4C                 	db	76	;'L'
   106  000820  45                 	db	69	;'E'
   107  000821  44                 	db	68	;'D'
   108  000822  5F                 	db	95	;'_'
   109  000823  4F                 	db	79	;'O'
   110  000824  46                 	db	70	;'F'
   111  000825  46                 	db	70	;'F'
   112  000826  0D                 	db	13
   113  000827  0A                 	db	10
   114  000828  00                 	db	0
   115  000829                     STR_2:
   116  000829  4C                 	db	76	;'L'
   117  00082A  45                 	db	69	;'E'
   118  00082B  44                 	db	68	;'D'
   119  00082C  5F                 	db	95	;'_'
   120  00082D  4F                 	db	79	;'O'
   121  00082E  4E                 	db	78	;'N'
   122  00082F  0D                 	db	13
   123  000830  0A                 	db	10
   124  000831  00                 	db	0
   125                           
   126                           ; #config settings
   127  000832  00                 	db	0	; dummy byte at the end
   128  0000                     
   129                           	psect	cinit
   130  000E16                     __pcinit:
   131                           	opt stack 0
   132  000E16                     start_initialization:
   133                           	opt stack 0
   134  000E16                     __initialization:
   135                           	opt stack 0
   136  000E16                     end_of_initialization:
   137                           	opt stack 0
   138  000E16                     __end_of__initialization:
   139                           	opt stack 0
   140  000E16  0E00               	movlw	low (__Lsmallconst shr (0+16))
   141  000E18  6EF8               	movwf	tblptru,c
   142  000E1A  0E08               	movlw	high __Lsmallconst
   143  000E1C  6EF7               	movwf	tblptrh,c
   144  000E1E  0100               	movlb	0
   145  000E20  EF34  F006         	goto	_main	;jump to C main() function
   146                           tblptru	equ	0xFF8
   147                           tblptrh	equ	0xFF7
   148                           
   149                           	psect	cstackCOMRAM
   150  000001                     __pcstackCOMRAM:
   151                           	opt stack 0
   152  000001                     ?___ftpack:
   153                           	opt stack 0
   154  000001                     ?___fttol:
   155                           	opt stack 0
   156  000001                     USART_TransmitChar@out:
   157                           	opt stack 0
   158  000001                     ___ftpack@arg:
   159                           	opt stack 0
   160  000001                     ___fttol@f1:
   161                           	opt stack 0
   162                           
   163                           ; 3 bytes @ 0x0
   164  000001                     	ds	1
   165  000002                     USART_SendString@out:
   166                           	opt stack 0
   167                           
   168                           ; 2 bytes @ 0x1
   169  000002                     	ds	2
   170  000004                     ___ftpack@exp:
   171                           	opt stack 0
   172                           
   173                           ; 1 bytes @ 0x3
   174  000004                     	ds	1
   175  000005                     ??___fttol:
   176  000005                     ___ftpack@sign:
   177                           	opt stack 0
   178                           
   179                           ; 1 bytes @ 0x4
   180  000005                     	ds	1
   181  000006                     ??___ftpack:
   182                           
   183                           ; 1 bytes @ 0x5
   184  000006                     	ds	3
   185  000009                     ?___altoft:
   186                           	opt stack 0
   187  000009                     ___altoft@c:
   188                           	opt stack 0
   189                           
   190                           ; 4 bytes @ 0x8
   191  000009                     	ds	1
   192  00000A                     ___fttol@sign1:
   193                           	opt stack 0
   194                           
   195                           ; 1 bytes @ 0x9
   196  00000A                     	ds	1
   197  00000B                     ___fttol@lval:
   198                           	opt stack 0
   199                           
   200                           ; 4 bytes @ 0xA
   201  00000B                     	ds	2
   202  00000D                     ??___altoft:
   203                           
   204                           ; 1 bytes @ 0xC
   205  00000D                     	ds	2
   206  00000F                     ___fttol@exp1:
   207                           	opt stack 0
   208                           
   209                           ; 1 bytes @ 0xE
   210  00000F                     	ds	2
   211  000011                     ___altoft@exp:
   212                           	opt stack 0
   213                           
   214                           ; 1 bytes @ 0x10
   215  000011                     	ds	1
   216  000012                     ___altoft@sign:
   217                           	opt stack 0
   218                           
   219                           ; 1 bytes @ 0x11
   220  000012                     	ds	1
   221  000013                     ?___ftdiv:
   222                           	opt stack 0
   223  000013                     ___ftdiv@f1:
   224                           	opt stack 0
   225                           
   226                           ; 3 bytes @ 0x12
   227  000013                     	ds	3
   228  000016                     ___ftdiv@f2:
   229                           	opt stack 0
   230                           
   231                           ; 3 bytes @ 0x15
   232  000016                     	ds	3
   233  000019                     ??___ftdiv:
   234                           
   235                           ; 1 bytes @ 0x18
   236  000019                     	ds	3
   237  00001C                     ___ftdiv@cntr:
   238                           	opt stack 0
   239                           
   240                           ; 1 bytes @ 0x1B
   241  00001C                     	ds	1
   242  00001D                     ___ftdiv@f3:
   243                           	opt stack 0
   244                           
   245                           ; 3 bytes @ 0x1C
   246  00001D                     	ds	3
   247  000020                     ___ftdiv@exp:
   248                           	opt stack 0
   249                           
   250                           ; 1 bytes @ 0x1F
   251  000020                     	ds	1
   252  000021                     ___ftdiv@sign:
   253                           	opt stack 0
   254                           
   255                           ; 1 bytes @ 0x20
   256  000021                     	ds	1
   257  000022                     ?___ftadd:
   258                           	opt stack 0
   259  000022                     ___ftadd@f1:
   260                           	opt stack 0
   261                           
   262                           ; 3 bytes @ 0x21
   263  000022                     	ds	3
   264  000025                     ___ftadd@f2:
   265                           	opt stack 0
   266                           
   267                           ; 3 bytes @ 0x24
   268  000025                     	ds	3
   269  000028                     ??___ftadd:
   270                           
   271                           ; 1 bytes @ 0x27
   272  000028                     	ds	3
   273  00002B                     ___ftadd@sign:
   274                           	opt stack 0
   275                           
   276                           ; 1 bytes @ 0x2A
   277  00002B                     	ds	1
   278  00002C                     ___ftadd@exp2:
   279                           	opt stack 0
   280                           
   281                           ; 1 bytes @ 0x2B
   282  00002C                     	ds	1
   283  00002D                     ___ftadd@exp1:
   284                           	opt stack 0
   285                           
   286                           ; 1 bytes @ 0x2C
   287  00002D                     	ds	1
   288  00002E                     USART_Init@baud_rate:
   289                           	opt stack 0
   290                           
   291                           ; 4 bytes @ 0x2D
   292  00002E                     	ds	4
   293  000032                     USART_Init@temp:
   294                           	opt stack 0
   295                           
   296                           ; 3 bytes @ 0x31
   297  000032                     	ds	3
   298  000035                     ??_main:
   299                           
   300                           ; 1 bytes @ 0x34
   301  000035                     	ds	2
   302  000037                     main@data_in:
   303                           	opt stack 0
   304                           
   305                           ; 1 bytes @ 0x36
   306  000037                     	ds	1
   307                           tblptru	equ	0xFF8
   308                           tblptrh	equ	0xFF7
   309                           
   310 ;;
   311 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   312 ;;
   313 ;; *************** function _main *****************
   314 ;; Defined at:
   315 ;;		line 37 in file "bluetooth.c"
   316 ;; Parameters:    Size  Location     Type
   317 ;;		None
   318 ;; Auto vars:     Size  Location     Type
   319 ;;  data_in         1   54[COMRAM] unsigned char 
   320 ;; Return value:  Size  Location     Type
   321 ;;                  1    wreg      void 
   322 ;; Registers used:
   323 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   324 ;; Tracked objects:
   325 ;;		On entry : 0/0
   326 ;;		On exit  : 0/0
   327 ;;		Unchanged: 0/0
   328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   329 ;;      Params:         0       0       0       0       0       0       0       0       0
   330 ;;      Locals:         1       0       0       0       0       0       0       0       0
   331 ;;      Temps:          2       0       0       0       0       0       0       0       0
   332 ;;      Totals:         3       0       0       0       0       0       0       0       0
   333 ;;Total ram usage:        3 bytes
   334 ;; Hardware stack levels required when called:    3
   335 ;; This function calls:
   336 ;;		_USART_Init
   337 ;;		_USART_ReceiveChar
   338 ;;		_USART_SendString
   339 ;; This function is called by:
   340 ;;		Startup code after reset
   341 ;; This function uses a non-reentrant model
   342 ;;
   343                           
   344                           	psect	text0
   345  000C68                     __ptext0:
   346                           	opt stack 0
   347  000C68                     _main:
   348                           	opt stack 28
   349                           
   350                           ;bluetooth.c: 39: OSCCON=0x72;
   351                           
   352                           ;incstack = 0
   353  000C68  0E72               	movlw	114
   354  000C6A  6ED3               	movwf	4051,c	;volatile
   355                           
   356                           ;bluetooth.c: 41: char data_in;
   357                           ;bluetooth.c: 42: TRISD = 0;
   358  000C6C  0E00               	movlw	0
   359  000C6E  6E95               	movwf	3989,c	;volatile
   360                           
   361                           ;bluetooth.c: 43: USART_Init(9600);
   362  000C70  0E80               	movlw	128
   363  000C72  6E2E               	movwf	USART_Init@baud_rate,c
   364  000C74  0E25               	movlw	37
   365  000C76  6E2F               	movwf	USART_Init@baud_rate+1,c
   366  000C78  0E00               	movlw	0
   367  000C7A  6E30               	movwf	USART_Init@baud_rate+2,c
   368  000C7C  0E00               	movlw	0
   369  000C7E  6E31               	movwf	USART_Init@baud_rate+3,c
   370  000C80  EC7D  F006         	call	_USART_Init	;wreg free
   371                           
   372                           ;bluetooth.c: 44: _delay((unsigned long)((50)*(8000000L/4000.0)));
   373  000C84  0E82               	movlw	130
   374  000C86  6E35               	movwf	??_main& (0+255),c
   375  000C88  0EDE               	movlw	222
   376  000C8A                     u977:
   377  000C8A  2EE8               	decfsz	wreg,f,c
   378  000C8C  D7FE               	bra	u977
   379  000C8E  2E35               	decfsz	??_main& (0+255),f,c
   380  000C90  D7FC               	bra	u977
   381                           
   382                           ;bluetooth.c: 46: USART_SendString("BIENVENIDO\r\n");
   383  000C92  0E12               	movlw	low STR_1
   384  000C94  6E02               	movwf	USART_SendString@out,c
   385  000C96  0E08               	movlw	high STR_1
   386  000C98  6E03               	movwf	USART_SendString@out+1,c
   387  000C9A  ECF6  F006         	call	_USART_SendString	;wreg free
   388  000C9E                     l1181:
   389                           
   390                           ;bluetooth.c: 49: {
   391                           ;bluetooth.c: 50: data_in=USART_ReceiveChar();
   392  000C9E  EC18  F007         	call	_USART_ReceiveChar	;wreg free
   393  000CA2  6E37               	movwf	main@data_in,c
   394                           
   395                           ;bluetooth.c: 51: if(data_in=='1')
   396  000CA4  0E31               	movlw	49
   397  000CA6  1837               	xorwf	main@data_in,w,c
   398  000CA8  A4D8               	btfss	status,2,c
   399  000CAA  D008               	goto	l1189
   400                           
   401                           ;bluetooth.c: 52: {
   402                           ;bluetooth.c: 53: LATD0 = 1;
   403  000CAC  808C               	bsf	3980,0,c	;volatile
   404                           
   405                           ;bluetooth.c: 54: USART_SendString("LED_ON\r\n");
   406  000CAE  0E29               	movlw	low STR_2
   407  000CB0  6E02               	movwf	USART_SendString@out,c
   408  000CB2  0E08               	movlw	high STR_2
   409  000CB4  6E03               	movwf	USART_SendString@out+1,c
   410  000CB6  ECF6  F006         	call	_USART_SendString	;wreg free
   411                           
   412                           ;bluetooth.c: 55: }
   413  000CBA  D012               	goto	l1197
   414  000CBC                     l1189:
   415                           
   416                           ;bluetooth.c: 56: else if(data_in=='2')
   417  000CBC  0E32               	movlw	50
   418  000CBE  1837               	xorwf	main@data_in,w,c
   419  000CC0  A4D8               	btfss	status,2,c
   420  000CC2  D008               	goto	l1195
   421                           
   422                           ;bluetooth.c: 58: {
   423                           ;bluetooth.c: 59: LATD0 = 0;
   424  000CC4  908C               	bcf	3980,0,c	;volatile
   425                           
   426                           ;bluetooth.c: 60: USART_SendString("LED_OFF\r\n");
   427  000CC6  0E1F               	movlw	low STR_3
   428  000CC8  6E02               	movwf	USART_SendString@out,c
   429  000CCA  0E08               	movlw	high STR_3
   430  000CCC  6E03               	movwf	USART_SendString@out+1,c
   431  000CCE  ECF6  F006         	call	_USART_SendString	;wreg free
   432                           
   433                           ;bluetooth.c: 61: }
   434  000CD2  D006               	goto	l1197
   435  000CD4                     l1195:
   436                           
   437                           ;bluetooth.c: 62: else
   438                           ;bluetooth.c: 63: {
   439                           ;bluetooth.c: 64: USART_SendString(" select 1 or 2\r\n");
   440  000CD4  0E01               	movlw	low STR_4
   441  000CD6  6E02               	movwf	USART_SendString@out,c
   442  000CD8  0E08               	movlw	high STR_4
   443  000CDA  6E03               	movwf	USART_SendString@out+1,c
   444  000CDC  ECF6  F006         	call	_USART_SendString	;wreg free
   445  000CE0                     l1197:
   446                           
   447                           ;bluetooth.c: 65: }
   448                           ;bluetooth.c: 66: _delay((unsigned long)((100)*(8000000L/4000.0)));
   449  000CE0  0E02               	movlw	2
   450  000CE2  6E36               	movwf	(??_main+1)& (0+255),c
   451  000CE4  0E04               	movlw	4
   452  000CE6  6E35               	movwf	??_main& (0+255),c
   453  000CE8  0EBA               	movlw	186
   454  000CEA                     u987:
   455  000CEA  2EE8               	decfsz	wreg,f,c
   456  000CEC  D7FE               	bra	u987
   457  000CEE  2E35               	decfsz	??_main& (0+255),f,c
   458  000CF0  D7FC               	bra	u987
   459  000CF2  2E36               	decfsz	(??_main+1)& (0+255),f,c
   460  000CF4  D7FA               	bra	u987
   461  000CF6  D000               	nop2	
   462  000CF8  D7D2               	goto	l1181
   463  000CFA                     __end_of_main:
   464                           	opt stack 0
   465                           tblptru	equ	0xFF8
   466                           tblptrh	equ	0xFF7
   467                           wreg	equ	0xFE8
   468                           status	equ	0xFD8
   469                           
   470 ;; *************** function _USART_SendString *****************
   471 ;; Defined at:
   472 ;;		line 99 in file "bluetooth.c"
   473 ;; Parameters:    Size  Location     Type
   474 ;;  out             2    1[COMRAM] PTR const unsigned char 
   475 ;;		 -> STR_4(17), STR_3(10), STR_2(9), STR_1(13), 
   476 ;; Auto vars:     Size  Location     Type
   477 ;;		None
   478 ;; Return value:  Size  Location     Type
   479 ;;                  1    wreg      void 
   480 ;; Registers used:
   481 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   482 ;; Tracked objects:
   483 ;;		On entry : 0/0
   484 ;;		On exit  : 0/0
   485 ;;		Unchanged: 0/0
   486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   487 ;;      Params:         2       0       0       0       0       0       0       0       0
   488 ;;      Locals:         0       0       0       0       0       0       0       0       0
   489 ;;      Temps:          0       0       0       0       0       0       0       0       0
   490 ;;      Totals:         2       0       0       0       0       0       0       0       0
   491 ;;Total ram usage:        2 bytes
   492 ;; Hardware stack levels used:    1
   493 ;; Hardware stack levels required when called:    1
   494 ;; This function calls:
   495 ;;		_USART_TransmitChar
   496 ;; This function is called by:
   497 ;;		_main
   498 ;; This function uses a non-reentrant model
   499 ;;
   500                           
   501                           	psect	text1
   502  000DEC                     __ptext1:
   503                           	opt stack 0
   504  000DEC                     _USART_SendString:
   505                           	opt stack 29
   506                           
   507                           ;bluetooth.c: 101: while(*out!='\0')
   508                           
   509                           ;incstack = 0
   510  000DEC  D00A               	goto	l1171
   511  000DEE                     l1167:
   512                           
   513                           ;bluetooth.c: 102: {
   514                           ;bluetooth.c: 103: USART_TransmitChar(*out);
   515  000DEE  C002  FFF6         	movff	USART_SendString@out,tblptrl
   516  000DF2  C003  FFF7         	movff	USART_SendString@out+1,tblptrh
   517  000DF6                     	if	0	;tblptru may be non-zero
   518  000DF6                     	endif
   519  000DF6                     	if	0	;tblptru may be non-zero
   520  000DF6                     	endif
   521  000DF6  0008               	tblrd		*
   522  000DF8  50F5               	movf	tablat,w,c
   523  000DFA  EC12  F007         	call	_USART_TransmitChar
   524                           
   525                           ;bluetooth.c: 104: out++;
   526  000DFE  4A02               	infsnz	USART_SendString@out,f,c
   527  000E00  2A03               	incf	USART_SendString@out+1,f,c
   528  000E02                     l1171:
   529  000E02  C002  FFF6         	movff	USART_SendString@out,tblptrl
   530  000E06  C003  FFF7         	movff	USART_SendString@out+1,tblptrh
   531  000E0A                     	if	0	;tblptru may be non-zero
   532  000E0A                     	endif
   533  000E0A                     	if	0	;tblptru may be non-zero
   534  000E0A                     	endif
   535  000E0A  0008               	tblrd		*
   536  000E0C  50F5               	movf	tablat,w,c
   537  000E0E  0900               	iorlw	0
   538  000E10  B4D8               	btfsc	status,2,c
   539  000E12  0012               	return	
   540  000E14  D7EC               	goto	l1167
   541  000E16                     __end_of_USART_SendString:
   542                           	opt stack 0
   543                           tblptru	equ	0xFF8
   544                           tblptrh	equ	0xFF7
   545                           tblptrl	equ	0xFF6
   546                           tablat	equ	0xFF5
   547                           wreg	equ	0xFE8
   548                           status	equ	0xFD8
   549                           
   550 ;; *************** function _USART_TransmitChar *****************
   551 ;; Defined at:
   552 ;;		line 85 in file "bluetooth.c"
   553 ;; Parameters:    Size  Location     Type
   554 ;;  out             1    wreg     unsigned char 
   555 ;; Auto vars:     Size  Location     Type
   556 ;;  out             1    0[COMRAM] unsigned char 
   557 ;; Return value:  Size  Location     Type
   558 ;;                  1    wreg      void 
   559 ;; Registers used:
   560 ;;		wreg
   561 ;; Tracked objects:
   562 ;;		On entry : 0/0
   563 ;;		On exit  : 0/0
   564 ;;		Unchanged: 0/0
   565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   566 ;;      Params:         0       0       0       0       0       0       0       0       0
   567 ;;      Locals:         1       0       0       0       0       0       0       0       0
   568 ;;      Temps:          0       0       0       0       0       0       0       0       0
   569 ;;      Totals:         1       0       0       0       0       0       0       0       0
   570 ;;Total ram usage:        1 bytes
   571 ;; Hardware stack levels used:    1
   572 ;; This function calls:
   573 ;;		Nothing
   574 ;; This function is called by:
   575 ;;		_USART_SendString
   576 ;; This function uses a non-reentrant model
   577 ;;
   578                           
   579                           	psect	text2
   580  000E24                     __ptext2:
   581                           	opt stack 0
   582  000E24                     _USART_TransmitChar:
   583                           	opt stack 29
   584                           
   585                           ;incstack = 0
   586                           ;USART_TransmitChar@out stored from wreg
   587  000E24  6E01               	movwf	USART_TransmitChar@out,c
   588  000E26                     l48:
   589  000E26  A89E               	btfss	3998,4,c	;volatile
   590  000E28  D7FE               	goto	l48
   591                           
   592                           ;bluetooth.c: 88: TXREG=out;
   593  000E2A  C001  FFAD         	movff	USART_TransmitChar@out,4013	;volatile
   594  000E2E  0012               	return		;funcret
   595  000E30                     __end_of_USART_TransmitChar:
   596                           	opt stack 0
   597                           tblptru	equ	0xFF8
   598                           tblptrh	equ	0xFF7
   599                           tblptrl	equ	0xFF6
   600                           tablat	equ	0xFF5
   601                           wreg	equ	0xFE8
   602                           status	equ	0xFD8
   603                           
   604 ;; *************** function _USART_ReceiveChar *****************
   605 ;; Defined at:
   606 ;;		line 92 in file "bluetooth.c"
   607 ;; Parameters:    Size  Location     Type
   608 ;;		None
   609 ;; Auto vars:     Size  Location     Type
   610 ;;		None
   611 ;; Return value:  Size  Location     Type
   612 ;;                  1    wreg      unsigned char 
   613 ;; Registers used:
   614 ;;		wreg, status,2
   615 ;; Tracked objects:
   616 ;;		On entry : 0/0
   617 ;;		On exit  : 0/0
   618 ;;		Unchanged: 0/0
   619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   620 ;;      Params:         0       0       0       0       0       0       0       0       0
   621 ;;      Locals:         0       0       0       0       0       0       0       0       0
   622 ;;      Temps:          0       0       0       0       0       0       0       0       0
   623 ;;      Totals:         0       0       0       0       0       0       0       0       0
   624 ;;Total ram usage:        0 bytes
   625 ;; Hardware stack levels used:    1
   626 ;; This function calls:
   627 ;;		Nothing
   628 ;; This function is called by:
   629 ;;		_main
   630 ;; This function uses a non-reentrant model
   631 ;;
   632                           
   633                           	psect	text3
   634  000E30                     __ptext3:
   635                           	opt stack 0
   636  000E30                     _USART_ReceiveChar:
   637                           	opt stack 30
   638  000E30                     l54:
   639  000E30  AA9E               	btfss	3998,5,c	;volatile
   640  000E32  D7FE               	goto	l54
   641                           
   642                           ;bluetooth.c: 96: return(RCREG);
   643  000E34  50AE               	movf	4014,w,c	;volatile
   644  000E36  0012               	return	
   645  000E38                     __end_of_USART_ReceiveChar:
   646                           	opt stack 0
   647                           tblptru	equ	0xFF8
   648                           tblptrh	equ	0xFF7
   649                           tblptrl	equ	0xFF6
   650                           tablat	equ	0xFF5
   651                           wreg	equ	0xFE8
   652                           status	equ	0xFD8
   653                           
   654 ;; *************** function _USART_Init *****************
   655 ;; Defined at:
   656 ;;		line 74 in file "bluetooth.c"
   657 ;; Parameters:    Size  Location     Type
   658 ;;  baud_rate       4   45[COMRAM] long 
   659 ;; Auto vars:     Size  Location     Type
   660 ;;  temp            3   49[COMRAM] float 
   661 ;; Return value:  Size  Location     Type
   662 ;;                  1    wreg      void 
   663 ;; Registers used:
   664 ;;		wreg, status,2, status,0, cstack
   665 ;; Tracked objects:
   666 ;;		On entry : 0/0
   667 ;;		On exit  : 0/0
   668 ;;		Unchanged: 0/0
   669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   670 ;;      Params:         4       0       0       0       0       0       0       0       0
   671 ;;      Locals:         3       0       0       0       0       0       0       0       0
   672 ;;      Temps:          0       0       0       0       0       0       0       0       0
   673 ;;      Totals:         7       0       0       0       0       0       0       0       0
   674 ;;Total ram usage:        7 bytes
   675 ;; Hardware stack levels used:    1
   676 ;; Hardware stack levels required when called:    2
   677 ;; This function calls:
   678 ;;		___altoft
   679 ;;		___ftadd
   680 ;;		___ftdiv
   681 ;;		___fttol
   682 ;; This function is called by:
   683 ;;		_main
   684 ;; This function uses a non-reentrant model
   685 ;;
   686                           
   687                           	psect	text4
   688  000CFA                     __ptext4:
   689                           	opt stack 0
   690  000CFA                     _USART_Init:
   691                           	opt stack 28
   692                           
   693                           ;bluetooth.c: 76: float temp;
   694                           ;bluetooth.c: 77: TRISC6=0;
   695                           
   696                           ;incstack = 0
   697  000CFA  9C94               	bcf	3988,6,c	;volatile
   698                           
   699                           ;bluetooth.c: 78: TRISC7=1;
   700  000CFC  8E94               	bsf	3988,7,c	;volatile
   701                           
   702                           ;bluetooth.c: 79: temp=(((float)(8000000/64)/(float)baud_rate)-1);
   703  000CFE  C02E  F009         	movff	USART_Init@baud_rate,___altoft@c
   704  000D02  C02F  F00A         	movff	USART_Init@baud_rate+1,___altoft@c+1
   705  000D06  C030  F00B         	movff	USART_Init@baud_rate+2,___altoft@c+2
   706  000D0A  C031  F00C         	movff	USART_Init@baud_rate+3,___altoft@c+3
   707  000D0E  ECBA  F006         	call	___altoft	;wreg free
   708  000D12  C009  F016         	movff	?___altoft,___ftdiv@f2
   709  000D16  C00A  F017         	movff	?___altoft+1,___ftdiv@f2+1
   710  000D1A  C00B  F018         	movff	?___altoft+2,___ftdiv@f2+2
   711  000D1E  0E24               	movlw	36
   712  000D20  6E13               	movwf	___ftdiv@f1,c
   713  000D22  0EF4               	movlw	244
   714  000D24  6E14               	movwf	___ftdiv@f1+1,c
   715  000D26  0E47               	movlw	71
   716  000D28  6E15               	movwf	___ftdiv@f1+2,c
   717  000D2A  EC6A  F005         	call	___ftdiv	;wreg free
   718  000D2E  C013  F022         	movff	?___ftdiv,___ftadd@f1
   719  000D32  C014  F023         	movff	?___ftdiv+1,___ftadd@f1+1
   720  000D36  C015  F024         	movff	?___ftdiv+2,___ftadd@f1+2
   721  000D3A  0E00               	movlw	0
   722  000D3C  6E25               	movwf	___ftadd@f2,c
   723  000D3E  0E80               	movlw	128
   724  000D40  6E26               	movwf	___ftadd@f2+1,c
   725  000D42  0EBF               	movlw	191
   726  000D44  6E27               	movwf	___ftadd@f2+2,c
   727  000D46  EC1A  F004         	call	___ftadd	;wreg free
   728  000D4A  C022  F032         	movff	?___ftadd,USART_Init@temp
   729  000D4E  C023  F033         	movff	?___ftadd+1,USART_Init@temp+1
   730  000D52  C024  F034         	movff	?___ftadd+2,USART_Init@temp+2
   731                           
   732                           ;bluetooth.c: 80: SPBRG=(int)temp;
   733  000D56  C032  F001         	movff	USART_Init@temp,___fttol@f1
   734  000D5A  C033  F002         	movff	USART_Init@temp+1,___fttol@f1+1
   735  000D5E  C034  F003         	movff	USART_Init@temp+2,___fttol@f1+2
   736  000D62  ECF0  F004         	call	___fttol	;wreg free
   737  000D66  5001               	movf	?___fttol,w,c
   738  000D68  6EAF               	movwf	4015,c	;volatile
   739                           
   740                           ;bluetooth.c: 81: TXSTA=0x20;
   741  000D6A  0E20               	movlw	32
   742  000D6C  6EAC               	movwf	4012,c	;volatile
   743                           
   744                           ;bluetooth.c: 82: RCSTA=0x90;
   745  000D6E  0E90               	movlw	144
   746  000D70  6EAB               	movwf	4011,c	;volatile
   747  000D72  0012               	return		;funcret
   748  000D74                     __end_of_USART_Init:
   749                           	opt stack 0
   750                           tblptru	equ	0xFF8
   751                           tblptrh	equ	0xFF7
   752                           tblptrl	equ	0xFF6
   753                           tablat	equ	0xFF5
   754                           wreg	equ	0xFE8
   755                           status	equ	0xFD8
   756                           
   757 ;; *************** function ___fttol *****************
   758 ;; Defined at:
   759 ;;		line 44 in file "D:\mplab\sources\common\fttol.c"
   760 ;; Parameters:    Size  Location     Type
   761 ;;  f1              3    0[COMRAM] float 
   762 ;; Auto vars:     Size  Location     Type
   763 ;;  lval            4   10[COMRAM] unsigned long 
   764 ;;  exp1            1   14[COMRAM] unsigned char 
   765 ;;  sign1           1    9[COMRAM] unsigned char 
   766 ;; Return value:  Size  Location     Type
   767 ;;                  4    0[COMRAM] long 
   768 ;; Registers used:
   769 ;;		wreg, status,2, status,0
   770 ;; Tracked objects:
   771 ;;		On entry : 0/0
   772 ;;		On exit  : 0/0
   773 ;;		Unchanged: 0/0
   774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   775 ;;      Params:         4       0       0       0       0       0       0       0       0
   776 ;;      Locals:         6       0       0       0       0       0       0       0       0
   777 ;;      Temps:          5       0       0       0       0       0       0       0       0
   778 ;;      Totals:        15       0       0       0       0       0       0       0       0
   779 ;;Total ram usage:       15 bytes
   780 ;; Hardware stack levels used:    1
   781 ;; This function calls:
   782 ;;		Nothing
   783 ;; This function is called by:
   784 ;;		_USART_Init
   785 ;; This function uses a non-reentrant model
   786 ;;
   787                           
   788                           	psect	text5
   789  0009E0                     __ptext5:
   790                           	opt stack 0
   791  0009E0                     ___fttol:
   792                           	opt stack 29
   793                           
   794                           ;incstack = 0
   795  0009E0  C003  F005         	movff	___fttol@f1+2,??___fttol
   796  0009E4  6A06               	clrf	(??___fttol+1)& (0+255),c
   797  0009E6  6A07               	clrf	(??___fttol+2)& (0+255),c
   798  0009E8  3402               	rlcf	___fttol@f1+1,w,c
   799  0009EA  3605               	rlcf	??___fttol& (0+255),f,c
   800  0009EC  E301               	bnc	u861
   801  0009EE  8006               	bsf	(??___fttol+1)& (0+255),0,c
   802  0009F0                     u861:
   803  0009F0  5005               	movf	??___fttol,w,c
   804  0009F2  6E0F               	movwf	___fttol@exp1,c
   805  0009F4  500F               	movf	___fttol@exp1,w,c
   806  0009F6  A4D8               	btfss	status,2,c
   807  0009F8  D009               	goto	l1117
   808  0009FA  0E00               	movlw	0
   809  0009FC  6E01               	movwf	?___fttol,c
   810  0009FE  0E00               	movlw	0
   811  000A00  6E02               	movwf	?___fttol+1,c
   812  000A02  0E00               	movlw	0
   813  000A04  6E03               	movwf	?___fttol+2,c
   814  000A06  0E00               	movlw	0
   815  000A08  6E04               	movwf	?___fttol+3,c
   816  000A0A  0012               	return	
   817  000A0C                     l1117:
   818  000A0C  0E17               	movlw	23
   819  000A0E  6E05               	movwf	??___fttol& (0+255),c
   820  000A10  C001  F006         	movff	___fttol@f1,??___fttol+1
   821  000A14  C002  F007         	movff	___fttol@f1+1,??___fttol+2
   822  000A18  C003  F008         	movff	___fttol@f1+2,??___fttol+3
   823  000A1C  2805               	incf	??___fttol,w,c
   824  000A1E  6E09               	movwf	(??___fttol+4)& (0+255),c
   825  000A20  D004               	goto	u880
   826  000A22                     u885:
   827  000A22  90D8               	bcf	status,0,c
   828  000A24  3208               	rrcf	??___fttol+3,f,c
   829  000A26  3207               	rrcf	??___fttol+2,f,c
   830  000A28  3206               	rrcf	??___fttol+1,f,c
   831  000A2A                     u880:
   832  000A2A  2E09               	decfsz	(??___fttol+4)& (0+255),f,c
   833  000A2C  D7FA               	goto	u885
   834  000A2E  5006               	movf	??___fttol+1,w,c
   835  000A30  6E0A               	movwf	___fttol@sign1,c
   836  000A32  8E02               	bsf	___fttol@f1+1,7,c
   837  000A34  0EFF               	movlw	255
   838  000A36  1601               	andwf	___fttol@f1,f,c
   839  000A38  0EFF               	movlw	255
   840  000A3A  1602               	andwf	___fttol@f1+1,f,c
   841  000A3C  0E00               	movlw	0
   842  000A3E  1603               	andwf	___fttol@f1+2,f,c
   843  000A40  5001               	movf	___fttol@f1,w,c
   844  000A42  6E0B               	movwf	___fttol@lval,c
   845  000A44  5002               	movf	___fttol@f1+1,w,c
   846  000A46  6E0C               	movwf	___fttol@lval+1,c
   847  000A48  5003               	movf	___fttol@f1+2,w,c
   848  000A4A  6E0D               	movwf	___fttol@lval+2,c
   849  000A4C  6A0E               	clrf	___fttol@lval+3,c
   850  000A4E  0E8E               	movlw	142
   851  000A50  5E0F               	subwf	___fttol@exp1,f,c
   852  000A52  AE0F               	btfss	___fttol@exp1,7,c
   853  000A54  D016               	goto	l1139
   854  000A56  500F               	movf	___fttol@exp1,w,c
   855  000A58  0A80               	xorlw	128
   856  000A5A  0F8F               	addlw	143
   857  000A5C  B0D8               	btfsc	status,0,c
   858  000A5E  D009               	goto	l1135
   859  000A60  0E00               	movlw	0
   860  000A62  6E01               	movwf	?___fttol,c
   861  000A64  0E00               	movlw	0
   862  000A66  6E02               	movwf	?___fttol+1,c
   863  000A68  0E00               	movlw	0
   864  000A6A  6E03               	movwf	?___fttol+2,c
   865  000A6C  0E00               	movlw	0
   866  000A6E  6E04               	movwf	?___fttol+3,c
   867  000A70  0012               	return	
   868  000A72                     l1135:
   869  000A72  90D8               	bcf	status,0,c
   870  000A74  320E               	rrcf	___fttol@lval+3,f,c
   871  000A76  320D               	rrcf	___fttol@lval+2,f,c
   872  000A78  320C               	rrcf	___fttol@lval+1,f,c
   873  000A7A  320B               	rrcf	___fttol@lval,f,c
   874  000A7C  3E0F               	incfsz	___fttol@exp1,f,c
   875  000A7E  D7F9               	goto	l1135
   876  000A80  D015               	goto	l1149
   877  000A82                     l1139:
   878  000A82  0E17               	movlw	23
   879  000A84  640F               	cpfsgt	___fttol@exp1,c
   880  000A86  D00F               	goto	l1147
   881  000A88  0E00               	movlw	0
   882  000A8A  6E01               	movwf	?___fttol,c
   883  000A8C  0E00               	movlw	0
   884  000A8E  6E02               	movwf	?___fttol+1,c
   885  000A90  0E00               	movlw	0
   886  000A92  6E03               	movwf	?___fttol+2,c
   887  000A94  0E00               	movlw	0
   888  000A96  6E04               	movwf	?___fttol+3,c
   889  000A98  0012               	return	
   890  000A9A                     l1145:
   891  000A9A  90D8               	bcf	status,0,c
   892  000A9C  360B               	rlcf	___fttol@lval,f,c
   893  000A9E  360C               	rlcf	___fttol@lval+1,f,c
   894  000AA0  360D               	rlcf	___fttol@lval+2,f,c
   895  000AA2  360E               	rlcf	___fttol@lval+3,f,c
   896  000AA4  060F               	decf	___fttol@exp1,f,c
   897  000AA6                     l1147:
   898  000AA6  500F               	movf	___fttol@exp1,w,c
   899  000AA8  A4D8               	btfss	status,2,c
   900  000AAA  D7F7               	goto	l1145
   901  000AAC                     l1149:
   902  000AAC  500A               	movf	___fttol@sign1,w,c
   903  000AAE  B4D8               	btfsc	status,2,c
   904  000AB0  D008               	goto	l1153
   905  000AB2  1E0E               	comf	___fttol@lval+3,f,c
   906  000AB4  1E0D               	comf	___fttol@lval+2,f,c
   907  000AB6  1E0C               	comf	___fttol@lval+1,f,c
   908  000AB8  6C0B               	negf	___fttol@lval,c
   909  000ABA  0E00               	movlw	0
   910  000ABC  220C               	addwfc	___fttol@lval+1,f,c
   911  000ABE  220D               	addwfc	___fttol@lval+2,f,c
   912  000AC0  220E               	addwfc	___fttol@lval+3,f,c
   913  000AC2                     l1153:
   914  000AC2  C00B  F001         	movff	___fttol@lval,?___fttol
   915  000AC6  C00C  F002         	movff	___fttol@lval+1,?___fttol+1
   916  000ACA  C00D  F003         	movff	___fttol@lval+2,?___fttol+2
   917  000ACE  C00E  F004         	movff	___fttol@lval+3,?___fttol+3
   918  000AD2  0012               	return	
   919  000AD4                     __end_of___fttol:
   920                           	opt stack 0
   921                           tblptru	equ	0xFF8
   922                           tblptrh	equ	0xFF7
   923                           tblptrl	equ	0xFF6
   924                           tablat	equ	0xFF5
   925                           wreg	equ	0xFE8
   926                           status	equ	0xFD8
   927                           
   928 ;; *************** function ___ftdiv *****************
   929 ;; Defined at:
   930 ;;		line 54 in file "D:\mplab\sources\common\ftdiv.c"
   931 ;; Parameters:    Size  Location     Type
   932 ;;  f1              3   18[COMRAM] float 
   933 ;;  f2              3   21[COMRAM] float 
   934 ;; Auto vars:     Size  Location     Type
   935 ;;  f3              3   28[COMRAM] float 
   936 ;;  sign            1   32[COMRAM] unsigned char 
   937 ;;  exp             1   31[COMRAM] unsigned char 
   938 ;;  cntr            1   27[COMRAM] unsigned char 
   939 ;; Return value:  Size  Location     Type
   940 ;;                  3   18[COMRAM] float 
   941 ;; Registers used:
   942 ;;		wreg, status,2, status,0, cstack
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   948 ;;      Params:         6       0       0       0       0       0       0       0       0
   949 ;;      Locals:         6       0       0       0       0       0       0       0       0
   950 ;;      Temps:          3       0       0       0       0       0       0       0       0
   951 ;;      Totals:        15       0       0       0       0       0       0       0       0
   952 ;;Total ram usage:       15 bytes
   953 ;; Hardware stack levels used:    1
   954 ;; Hardware stack levels required when called:    1
   955 ;; This function calls:
   956 ;;		___ftpack
   957 ;; This function is called by:
   958 ;;		_USART_Init
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962                           	psect	text6
   963  000AD4                     __ptext6:
   964                           	opt stack 0
   965  000AD4                     ___ftdiv:
   966                           	opt stack 28
   967                           
   968                           ;incstack = 0
   969  000AD4  C015  F019         	movff	___ftdiv@f1+2,??___ftdiv
   970  000AD8  6A1A               	clrf	(??___ftdiv+1)& (0+255),c
   971  000ADA  6A1B               	clrf	(??___ftdiv+2)& (0+255),c
   972  000ADC  3414               	rlcf	___ftdiv@f1+1,w,c
   973  000ADE  3619               	rlcf	??___ftdiv& (0+255),f,c
   974  000AE0  E301               	bnc	u811
   975  000AE2  801A               	bsf	(??___ftdiv+1)& (0+255),0,c
   976  000AE4                     u811:
   977  000AE4  5019               	movf	??___ftdiv,w,c
   978  000AE6  6E20               	movwf	___ftdiv@exp,c
   979  000AE8  5020               	movf	___ftdiv@exp,w,c
   980  000AEA  A4D8               	btfss	status,2,c
   981  000AEC  D007               	goto	l1071
   982  000AEE  0E00               	movlw	0
   983  000AF0  6E13               	movwf	?___ftdiv,c
   984  000AF2  0E00               	movlw	0
   985  000AF4  6E14               	movwf	?___ftdiv+1,c
   986  000AF6  0E00               	movlw	0
   987  000AF8  6E15               	movwf	?___ftdiv+2,c
   988  000AFA  0012               	return	
   989  000AFC                     l1071:
   990  000AFC  C018  F019         	movff	___ftdiv@f2+2,??___ftdiv
   991  000B00  6A1A               	clrf	(??___ftdiv+1)& (0+255),c
   992  000B02  6A1B               	clrf	(??___ftdiv+2)& (0+255),c
   993  000B04  3417               	rlcf	___ftdiv@f2+1,w,c
   994  000B06  3619               	rlcf	??___ftdiv& (0+255),f,c
   995  000B08  E301               	bnc	u831
   996  000B0A  801A               	bsf	(??___ftdiv+1)& (0+255),0,c
   997  000B0C                     u831:
   998  000B0C  5019               	movf	??___ftdiv,w,c
   999  000B0E  6E21               	movwf	___ftdiv@sign,c
  1000  000B10  5021               	movf	___ftdiv@sign,w,c
  1001  000B12  A4D8               	btfss	status,2,c
  1002  000B14  D007               	goto	l1077
  1003  000B16  0E00               	movlw	0
  1004  000B18  6E13               	movwf	?___ftdiv,c
  1005  000B1A  0E00               	movlw	0
  1006  000B1C  6E14               	movwf	?___ftdiv+1,c
  1007  000B1E  0E00               	movlw	0
  1008  000B20  6E15               	movwf	?___ftdiv+2,c
  1009  000B22  0012               	return	
  1010  000B24                     l1077:
  1011  000B24  0E00               	movlw	0
  1012  000B26  6E1D               	movwf	___ftdiv@f3,c
  1013  000B28  0E00               	movlw	0
  1014  000B2A  6E1E               	movwf	___ftdiv@f3+1,c
  1015  000B2C  0E00               	movlw	0
  1016  000B2E  6E1F               	movwf	___ftdiv@f3+2,c
  1017  000B30  5021               	movf	___ftdiv@sign,w,c
  1018  000B32  0F89               	addlw	137
  1019  000B34  5E20               	subwf	___ftdiv@exp,f,c
  1020  000B36  C015  F021         	movff	___ftdiv@f1+2,___ftdiv@sign
  1021  000B3A  5018               	movf	___ftdiv@f2+2,w,c
  1022  000B3C  1A21               	xorwf	___ftdiv@sign,f,c
  1023  000B3E  0E80               	movlw	128
  1024  000B40  1621               	andwf	___ftdiv@sign,f,c
  1025  000B42  8E14               	bsf	___ftdiv@f1+1,7,c
  1026  000B44  0EFF               	movlw	255
  1027  000B46  1613               	andwf	___ftdiv@f1,f,c
  1028  000B48  0EFF               	movlw	255
  1029  000B4A  1614               	andwf	___ftdiv@f1+1,f,c
  1030  000B4C  0E00               	movlw	0
  1031  000B4E  1615               	andwf	___ftdiv@f1+2,f,c
  1032  000B50  8E17               	bsf	___ftdiv@f2+1,7,c
  1033  000B52  0EFF               	movlw	255
  1034  000B54  1616               	andwf	___ftdiv@f2,f,c
  1035  000B56  0EFF               	movlw	255
  1036  000B58  1617               	andwf	___ftdiv@f2+1,f,c
  1037  000B5A  0E00               	movlw	0
  1038  000B5C  1618               	andwf	___ftdiv@f2+2,f,c
  1039  000B5E  0E18               	movlw	24
  1040  000B60  6E1C               	movwf	___ftdiv@cntr,c
  1041  000B62                     l1097:
  1042  000B62  90D8               	bcf	status,0,c
  1043  000B64  361D               	rlcf	___ftdiv@f3,f,c
  1044  000B66  361E               	rlcf	___ftdiv@f3+1,f,c
  1045  000B68  361F               	rlcf	___ftdiv@f3+2,f,c
  1046  000B6A  5016               	movf	___ftdiv@f2,w,c
  1047  000B6C  5C13               	subwf	___ftdiv@f1,w,c
  1048  000B6E  5017               	movf	___ftdiv@f2+1,w,c
  1049  000B70  5814               	subwfb	___ftdiv@f1+1,w,c
  1050  000B72  5018               	movf	___ftdiv@f2+2,w,c
  1051  000B74  5815               	subwfb	___ftdiv@f1+2,w,c
  1052  000B76  A0D8               	btfss	status,0,c
  1053  000B78  D007               	goto	l346
  1054  000B7A  5016               	movf	___ftdiv@f2,w,c
  1055  000B7C  5E13               	subwf	___ftdiv@f1,f,c
  1056  000B7E  5017               	movf	___ftdiv@f2+1,w,c
  1057  000B80  5A14               	subwfb	___ftdiv@f1+1,f,c
  1058  000B82  5018               	movf	___ftdiv@f2+2,w,c
  1059  000B84  5A15               	subwfb	___ftdiv@f1+2,f,c
  1060  000B86  801D               	bsf	___ftdiv@f3,0,c
  1061  000B88                     l346:
  1062  000B88  90D8               	bcf	status,0,c
  1063  000B8A  3613               	rlcf	___ftdiv@f1,f,c
  1064  000B8C  3614               	rlcf	___ftdiv@f1+1,f,c
  1065  000B8E  3615               	rlcf	___ftdiv@f1+2,f,c
  1066  000B90  2E1C               	decfsz	___ftdiv@cntr,f,c
  1067  000B92  D7E7               	goto	l1097
  1068  000B94  C01D  F001         	movff	___ftdiv@f3,___ftpack@arg
  1069  000B98  C01E  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  1070  000B9C  C01F  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  1071  000BA0  C020  F004         	movff	___ftdiv@exp,___ftpack@exp
  1072  000BA4  C021  F005         	movff	___ftdiv@sign,___ftpack@sign
  1073  000BA8  ECDD  F005         	call	___ftpack	;wreg free
  1074  000BAC  C001  F013         	movff	?___ftpack,?___ftdiv
  1075  000BB0  C002  F014         	movff	?___ftpack+1,?___ftdiv+1
  1076  000BB4  C003  F015         	movff	?___ftpack+2,?___ftdiv+2
  1077  000BB8  0012               	return	
  1078  000BBA                     __end_of___ftdiv:
  1079                           	opt stack 0
  1080                           tblptru	equ	0xFF8
  1081                           tblptrh	equ	0xFF7
  1082                           tblptrl	equ	0xFF6
  1083                           tablat	equ	0xFF5
  1084                           wreg	equ	0xFE8
  1085                           status	equ	0xFD8
  1086                           
  1087 ;; *************** function ___ftadd *****************
  1088 ;; Defined at:
  1089 ;;		line 86 in file "D:\mplab\sources\common\ftadd.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;  f1              3   33[COMRAM] float 
  1092 ;;  f2              3   36[COMRAM] float 
  1093 ;; Auto vars:     Size  Location     Type
  1094 ;;  exp1            1   44[COMRAM] unsigned char 
  1095 ;;  exp2            1   43[COMRAM] unsigned char 
  1096 ;;  sign            1   42[COMRAM] unsigned char 
  1097 ;; Return value:  Size  Location     Type
  1098 ;;                  3   33[COMRAM] float 
  1099 ;; Registers used:
  1100 ;;		wreg, status,2, status,0, cstack
  1101 ;; Tracked objects:
  1102 ;;		On entry : 0/0
  1103 ;;		On exit  : 0/0
  1104 ;;		Unchanged: 0/0
  1105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1106 ;;      Params:         6       0       0       0       0       0       0       0       0
  1107 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1108 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1109 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1110 ;;Total ram usage:       12 bytes
  1111 ;; Hardware stack levels used:    1
  1112 ;; Hardware stack levels required when called:    1
  1113 ;; This function calls:
  1114 ;;		___ftpack
  1115 ;; This function is called by:
  1116 ;;		_USART_Init
  1117 ;; This function uses a non-reentrant model
  1118 ;;
  1119                           
  1120                           	psect	text7
  1121  000834                     __ptext7:
  1122                           	opt stack 0
  1123  000834                     ___ftadd:
  1124                           	opt stack 28
  1125                           
  1126                           ;incstack = 0
  1127  000834  C024  F028         	movff	___ftadd@f1+2,??___ftadd
  1128  000838  6A29               	clrf	(??___ftadd+1)& (0+255),c
  1129  00083A  6A2A               	clrf	(??___ftadd+2)& (0+255),c
  1130  00083C  3423               	rlcf	___ftadd@f1+1,w,c
  1131  00083E  3628               	rlcf	??___ftadd& (0+255),f,c
  1132  000840  E301               	bnc	u601
  1133  000842  8029               	bsf	(??___ftadd+1)& (0+255),0,c
  1134  000844                     u601:
  1135  000844  5028               	movf	??___ftadd,w,c
  1136  000846  6E2D               	movwf	___ftadd@exp1,c
  1137  000848  C027  F028         	movff	___ftadd@f2+2,??___ftadd
  1138  00084C  6A29               	clrf	(??___ftadd+1)& (0+255),c
  1139  00084E  6A2A               	clrf	(??___ftadd+2)& (0+255),c
  1140  000850  3426               	rlcf	___ftadd@f2+1,w,c
  1141  000852  3628               	rlcf	??___ftadd& (0+255),f,c
  1142  000854  E301               	bnc	u611
  1143  000856  8029               	bsf	(??___ftadd+1)& (0+255),0,c
  1144  000858                     u611:
  1145  000858  5028               	movf	??___ftadd,w,c
  1146  00085A  6E2C               	movwf	___ftadd@exp2,c
  1147  00085C  502D               	movf	___ftadd@exp1,w,c
  1148  00085E  B4D8               	btfsc	status,2,c
  1149  000860  D00B               	goto	l311
  1150  000862  502C               	movf	___ftadd@exp2,w,c
  1151  000864  5C2D               	subwf	___ftadd@exp1,w,c
  1152  000866  B0D8               	btfsc	status,0,c
  1153  000868  D00E               	goto	l1003
  1154  00086A  502D               	movf	___ftadd@exp1,w,c
  1155  00086C  0800               	sublw	0
  1156  00086E  242C               	addwf	___ftadd@exp2,w,c
  1157  000870  6E28               	movwf	??___ftadd& (0+255),c
  1158  000872  0E18               	movlw	24
  1159  000874  6428               	cpfsgt	??___ftadd,c
  1160  000876  D007               	goto	l1003
  1161  000878                     l311:
  1162  000878  C025  F022         	movff	___ftadd@f2,?___ftadd
  1163  00087C  C026  F023         	movff	___ftadd@f2+1,?___ftadd+1
  1164  000880  C027  F024         	movff	___ftadd@f2+2,?___ftadd+2
  1165  000884  0012               	return	
  1166  000886                     l1003:
  1167  000886  502C               	movf	___ftadd@exp2,w,c
  1168  000888  B4D8               	btfsc	status,2,c
  1169  00088A  D00B               	goto	l315
  1170  00088C  502D               	movf	___ftadd@exp1,w,c
  1171  00088E  5C2C               	subwf	___ftadd@exp2,w,c
  1172  000890  B0D8               	btfsc	status,0,c
  1173  000892  D00E               	goto	l1009
  1174  000894  502C               	movf	___ftadd@exp2,w,c
  1175  000896  0800               	sublw	0
  1176  000898  242D               	addwf	___ftadd@exp1,w,c
  1177  00089A  6E28               	movwf	??___ftadd& (0+255),c
  1178  00089C  0E18               	movlw	24
  1179  00089E  6428               	cpfsgt	??___ftadd,c
  1180  0008A0  D007               	goto	l1009
  1181  0008A2                     l315:
  1182  0008A2  C022  F022         	movff	___ftadd@f1,?___ftadd
  1183  0008A6  C023  F023         	movff	___ftadd@f1+1,?___ftadd+1
  1184  0008AA  C024  F024         	movff	___ftadd@f1+2,?___ftadd+2
  1185  0008AE  0012               	return	
  1186  0008B0                     l1009:
  1187  0008B0  0E06               	movlw	6
  1188  0008B2  6E2B               	movwf	___ftadd@sign,c
  1189  0008B4  BE24               	btfsc	___ftadd@f1+2,7,c
  1190  0008B6  8E2B               	bsf	___ftadd@sign,7,c
  1191  0008B8  BE27               	btfsc	___ftadd@f2+2,7,c
  1192  0008BA  8C2B               	bsf	___ftadd@sign,6,c
  1193  0008BC  8E23               	bsf	___ftadd@f1+1,7,c
  1194  0008BE  0EFF               	movlw	255
  1195  0008C0  1622               	andwf	___ftadd@f1,f,c
  1196  0008C2  0EFF               	movlw	255
  1197  0008C4  1623               	andwf	___ftadd@f1+1,f,c
  1198  0008C6  0E00               	movlw	0
  1199  0008C8  1624               	andwf	___ftadd@f1+2,f,c
  1200  0008CA  8E26               	bsf	___ftadd@f2+1,7,c
  1201  0008CC  0EFF               	movlw	255
  1202  0008CE  1625               	andwf	___ftadd@f2,f,c
  1203  0008D0  0EFF               	movlw	255
  1204  0008D2  1626               	andwf	___ftadd@f2+1,f,c
  1205  0008D4  0E00               	movlw	0
  1206  0008D6  1627               	andwf	___ftadd@f2+2,f,c
  1207  0008D8  502C               	movf	___ftadd@exp2,w,c
  1208  0008DA  5C2D               	subwf	___ftadd@exp1,w,c
  1209  0008DC  B0D8               	btfsc	status,0,c
  1210  0008DE  D01B               	goto	l1035
  1211  0008E0                     l1025:
  1212  0008E0  90D8               	bcf	status,0,c
  1213  0008E2  3625               	rlcf	___ftadd@f2,f,c
  1214  0008E4  3626               	rlcf	___ftadd@f2+1,f,c
  1215  0008E6  3627               	rlcf	___ftadd@f2+2,f,c
  1216  0008E8  062C               	decf	___ftadd@exp2,f,c
  1217  0008EA  502D               	movf	___ftadd@exp1,w,c
  1218  0008EC  182C               	xorwf	___ftadd@exp2,w,c
  1219  0008EE  B4D8               	btfsc	status,2,c
  1220  0008F0  D00D               	goto	l1033
  1221  0008F2  062B               	decf	___ftadd@sign,f,c
  1222  0008F4  C02B  F028         	movff	___ftadd@sign,??___ftadd
  1223  0008F8  0E07               	movlw	7
  1224  0008FA  1628               	andwf	??___ftadd,f,c
  1225  0008FC  B4D8               	btfsc	status,2,c
  1226  0008FE  D006               	goto	l1033
  1227  000900  D7EF               	goto	l1025
  1228  000902                     l1031:
  1229  000902  90D8               	bcf	status,0,c
  1230  000904  3224               	rrcf	___ftadd@f1+2,f,c
  1231  000906  3223               	rrcf	___ftadd@f1+1,f,c
  1232  000908  3222               	rrcf	___ftadd@f1,f,c
  1233  00090A  2A2D               	incf	___ftadd@exp1,f,c
  1234  00090C                     l1033:
  1235  00090C  502C               	movf	___ftadd@exp2,w,c
  1236  00090E  182D               	xorwf	___ftadd@exp1,w,c
  1237  000910  B4D8               	btfsc	status,2,c
  1238  000912  D01F               	goto	l326
  1239  000914  D7F6               	goto	l1031
  1240  000916                     l1035:
  1241  000916  502D               	movf	___ftadd@exp1,w,c
  1242  000918  5C2C               	subwf	___ftadd@exp2,w,c
  1243  00091A  B0D8               	btfsc	status,0,c
  1244  00091C  D01A               	goto	l326
  1245  00091E                     l1037:
  1246  00091E  90D8               	bcf	status,0,c
  1247  000920  3622               	rlcf	___ftadd@f1,f,c
  1248  000922  3623               	rlcf	___ftadd@f1+1,f,c
  1249  000924  3624               	rlcf	___ftadd@f1+2,f,c
  1250  000926  062D               	decf	___ftadd@exp1,f,c
  1251  000928  502D               	movf	___ftadd@exp1,w,c
  1252  00092A  182C               	xorwf	___ftadd@exp2,w,c
  1253  00092C  B4D8               	btfsc	status,2,c
  1254  00092E  D00D               	goto	l1045
  1255  000930  062B               	decf	___ftadd@sign,f,c
  1256  000932  C02B  F028         	movff	___ftadd@sign,??___ftadd
  1257  000936  0E07               	movlw	7
  1258  000938  1628               	andwf	??___ftadd,f,c
  1259  00093A  B4D8               	btfsc	status,2,c
  1260  00093C  D006               	goto	l1045
  1261  00093E  D7EF               	goto	l1037
  1262  000940                     l1043:
  1263  000940  90D8               	bcf	status,0,c
  1264  000942  3227               	rrcf	___ftadd@f2+2,f,c
  1265  000944  3226               	rrcf	___ftadd@f2+1,f,c
  1266  000946  3225               	rrcf	___ftadd@f2,f,c
  1267  000948  2A2C               	incf	___ftadd@exp2,f,c
  1268  00094A                     l1045:
  1269  00094A  502C               	movf	___ftadd@exp2,w,c
  1270  00094C  182D               	xorwf	___ftadd@exp1,w,c
  1271  00094E  A4D8               	btfss	status,2,c
  1272  000950  D7F7               	goto	l1043
  1273  000952                     l326:
  1274  000952  AE2B               	btfss	___ftadd@sign,7,c
  1275  000954  D00C               	goto	l335
  1276  000956  0EFF               	movlw	255
  1277  000958  1A22               	xorwf	___ftadd@f1,f,c
  1278  00095A  0EFF               	movlw	255
  1279  00095C  1A23               	xorwf	___ftadd@f1+1,f,c
  1280  00095E  0EFF               	movlw	255
  1281  000960  1A24               	xorwf	___ftadd@f1+2,f,c
  1282  000962  0E01               	movlw	1
  1283  000964  2622               	addwf	___ftadd@f1,f,c
  1284  000966  0E00               	movlw	0
  1285  000968  2223               	addwfc	___ftadd@f1+1,f,c
  1286  00096A  0E00               	movlw	0
  1287  00096C  2224               	addwfc	___ftadd@f1+2,f,c
  1288  00096E                     l335:
  1289  00096E  AC2B               	btfss	___ftadd@sign,6,c
  1290  000970  D00C               	goto	l1051
  1291  000972  0EFF               	movlw	255
  1292  000974  1A25               	xorwf	___ftadd@f2,f,c
  1293  000976  0EFF               	movlw	255
  1294  000978  1A26               	xorwf	___ftadd@f2+1,f,c
  1295  00097A  0EFF               	movlw	255
  1296  00097C  1A27               	xorwf	___ftadd@f2+2,f,c
  1297  00097E  0E01               	movlw	1
  1298  000980  2625               	addwf	___ftadd@f2,f,c
  1299  000982  0E00               	movlw	0
  1300  000984  2226               	addwfc	___ftadd@f2+1,f,c
  1301  000986  0E00               	movlw	0
  1302  000988  2227               	addwfc	___ftadd@f2+2,f,c
  1303  00098A                     l1051:
  1304  00098A  0E00               	movlw	0
  1305  00098C  6E2B               	movwf	___ftadd@sign,c
  1306  00098E  5022               	movf	___ftadd@f1,w,c
  1307  000990  2625               	addwf	___ftadd@f2,f,c
  1308  000992  5023               	movf	___ftadd@f1+1,w,c
  1309  000994  2226               	addwfc	___ftadd@f2+1,f,c
  1310  000996  5024               	movf	___ftadd@f1+2,w,c
  1311  000998  2227               	addwfc	___ftadd@f2+2,f,c
  1312  00099A  AE27               	btfss	___ftadd@f2+2,7,c
  1313  00099C  D00E               	goto	l1061
  1314  00099E  0EFF               	movlw	255
  1315  0009A0  1A25               	xorwf	___ftadd@f2,f,c
  1316  0009A2  0EFF               	movlw	255
  1317  0009A4  1A26               	xorwf	___ftadd@f2+1,f,c
  1318  0009A6  0EFF               	movlw	255
  1319  0009A8  1A27               	xorwf	___ftadd@f2+2,f,c
  1320  0009AA  0E01               	movlw	1
  1321  0009AC  2625               	addwf	___ftadd@f2,f,c
  1322  0009AE  0E00               	movlw	0
  1323  0009B0  2226               	addwfc	___ftadd@f2+1,f,c
  1324  0009B2  0E00               	movlw	0
  1325  0009B4  2227               	addwfc	___ftadd@f2+2,f,c
  1326  0009B6  0E01               	movlw	1
  1327  0009B8  6E2B               	movwf	___ftadd@sign,c
  1328  0009BA                     l1061:
  1329  0009BA  C025  F001         	movff	___ftadd@f2,___ftpack@arg
  1330  0009BE  C026  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  1331  0009C2  C027  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  1332  0009C6  C02D  F004         	movff	___ftadd@exp1,___ftpack@exp
  1333  0009CA  C02B  F005         	movff	___ftadd@sign,___ftpack@sign
  1334  0009CE  ECDD  F005         	call	___ftpack	;wreg free
  1335  0009D2  C001  F022         	movff	?___ftpack,?___ftadd
  1336  0009D6  C002  F023         	movff	?___ftpack+1,?___ftadd+1
  1337  0009DA  C003  F024         	movff	?___ftpack+2,?___ftadd+2
  1338  0009DE  0012               	return	
  1339  0009E0                     __end_of___ftadd:
  1340                           	opt stack 0
  1341                           tblptru	equ	0xFF8
  1342                           tblptrh	equ	0xFF7
  1343                           tblptrl	equ	0xFF6
  1344                           tablat	equ	0xFF5
  1345                           wreg	equ	0xFE8
  1346                           status	equ	0xFD8
  1347                           
  1348 ;; *************** function ___altoft *****************
  1349 ;; Defined at:
  1350 ;;		line 42 in file "D:\mplab\sources\common\altoft.c"
  1351 ;; Parameters:    Size  Location     Type
  1352 ;;  c               4    8[COMRAM] long 
  1353 ;; Auto vars:     Size  Location     Type
  1354 ;;  sign            1   17[COMRAM] unsigned char 
  1355 ;;  exp             1   16[COMRAM] unsigned char 
  1356 ;; Return value:  Size  Location     Type
  1357 ;;                  3    8[COMRAM] float 
  1358 ;; Registers used:
  1359 ;;		wreg, status,2, status,0, cstack
  1360 ;; Tracked objects:
  1361 ;;		On entry : 0/0
  1362 ;;		On exit  : 0/0
  1363 ;;		Unchanged: 0/0
  1364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1365 ;;      Params:         4       0       0       0       0       0       0       0       0
  1366 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1367 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1368 ;;      Totals:        10       0       0       0       0       0       0       0       0
  1369 ;;Total ram usage:       10 bytes
  1370 ;; Hardware stack levels used:    1
  1371 ;; Hardware stack levels required when called:    1
  1372 ;; This function calls:
  1373 ;;		___ftpack
  1374 ;; This function is called by:
  1375 ;;		_USART_Init
  1376 ;; This function uses a non-reentrant model
  1377 ;;
  1378                           
  1379                           	psect	text8
  1380  000D74                     __ptext8:
  1381                           	opt stack 0
  1382  000D74                     ___altoft:
  1383                           	opt stack 28
  1384                           
  1385                           ;incstack = 0
  1386  000D74  0E00               	movlw	0
  1387  000D76  6E12               	movwf	___altoft@sign,c
  1388  000D78  0E8E               	movlw	142
  1389  000D7A  6E11               	movwf	___altoft@exp,c
  1390  000D7C  AE0C               	btfss	___altoft@c+3,7,c
  1391  000D7E  D011               	goto	l989
  1392  000D80  1E0C               	comf	___altoft@c+3,f,c
  1393  000D82  1E0B               	comf	___altoft@c+2,f,c
  1394  000D84  1E0A               	comf	___altoft@c+1,f,c
  1395  000D86  6C09               	negf	___altoft@c,c
  1396  000D88  0E00               	movlw	0
  1397  000D8A  220A               	addwfc	___altoft@c+1,f,c
  1398  000D8C  220B               	addwfc	___altoft@c+2,f,c
  1399  000D8E  220C               	addwfc	___altoft@c+3,f,c
  1400  000D90  0E01               	movlw	1
  1401  000D92  6E12               	movwf	___altoft@sign,c
  1402  000D94  D006               	goto	l989
  1403  000D96                     l987:
  1404  000D96  90D8               	bcf	status,0,c
  1405  000D98  320C               	rrcf	___altoft@c+3,f,c
  1406  000D9A  320B               	rrcf	___altoft@c+2,f,c
  1407  000D9C  320A               	rrcf	___altoft@c+1,f,c
  1408  000D9E  3209               	rrcf	___altoft@c,f,c
  1409  000DA0  2A11               	incf	___altoft@exp,f,c
  1410  000DA2                     l989:
  1411  000DA2  0E00               	movlw	0
  1412  000DA4  1409               	andwf	___altoft@c,w,c
  1413  000DA6  6E0D               	movwf	??___altoft& (0+255),c
  1414  000DA8  0E00               	movlw	0
  1415  000DAA  140A               	andwf	___altoft@c+1,w,c
  1416  000DAC  6E0E               	movwf	(??___altoft+1)& (0+255),c
  1417  000DAE  0E00               	movlw	0
  1418  000DB0  140B               	andwf	___altoft@c+2,w,c
  1419  000DB2  6E0F               	movwf	(??___altoft+2)& (0+255),c
  1420  000DB4  0EFF               	movlw	255
  1421  000DB6  140C               	andwf	___altoft@c+3,w,c
  1422  000DB8  6E10               	movwf	(??___altoft+3)& (0+255),c
  1423  000DBA  500D               	movf	??___altoft,w,c
  1424  000DBC  100E               	iorwf	??___altoft+1,w,c
  1425  000DBE  100F               	iorwf	??___altoft+2,w,c
  1426  000DC0  1010               	iorwf	??___altoft+3,w,c
  1427  000DC2  A4D8               	btfss	status,2,c
  1428  000DC4  D7E8               	goto	l987
  1429  000DC6  C009  F001         	movff	___altoft@c,___ftpack@arg
  1430  000DCA  C00A  F002         	movff	___altoft@c+1,___ftpack@arg+1
  1431  000DCE  C00B  F003         	movff	___altoft@c+2,___ftpack@arg+2
  1432  000DD2  C011  F004         	movff	___altoft@exp,___ftpack@exp
  1433  000DD6  C012  F005         	movff	___altoft@sign,___ftpack@sign
  1434  000DDA  ECDD  F005         	call	___ftpack	;wreg free
  1435  000DDE  C001  F009         	movff	?___ftpack,?___altoft
  1436  000DE2  C002  F00A         	movff	?___ftpack+1,?___altoft+1
  1437  000DE6  C003  F00B         	movff	?___ftpack+2,?___altoft+2
  1438  000DEA  0012               	return	
  1439  000DEC                     __end_of___altoft:
  1440                           	opt stack 0
  1441                           tblptru	equ	0xFF8
  1442                           tblptrh	equ	0xFF7
  1443                           tblptrl	equ	0xFF6
  1444                           tablat	equ	0xFF5
  1445                           wreg	equ	0xFE8
  1446                           status	equ	0xFD8
  1447                           
  1448 ;; *************** function ___ftpack *****************
  1449 ;; Defined at:
  1450 ;;		line 62 in file "D:\mplab\sources\common\float.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;  arg             3    0[COMRAM] unsigned um
  1453 ;;  exp             1    3[COMRAM] unsigned char 
  1454 ;;  sign            1    4[COMRAM] unsigned char 
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;		None
  1457 ;; Return value:  Size  Location     Type
  1458 ;;                  3    0[COMRAM] float 
  1459 ;; Registers used:
  1460 ;;		wreg, status,2, status,0
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1466 ;;      Params:         5       0       0       0       0       0       0       0       0
  1467 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1468 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1469 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1470 ;;Total ram usage:        8 bytes
  1471 ;; Hardware stack levels used:    1
  1472 ;; This function calls:
  1473 ;;		Nothing
  1474 ;; This function is called by:
  1475 ;;		___altoft
  1476 ;;		___ftadd
  1477 ;;		___ftdiv
  1478 ;; This function uses a non-reentrant model
  1479 ;;
  1480                           
  1481                           	psect	text9
  1482  000BBA                     __ptext9:
  1483                           	opt stack 0
  1484  000BBA                     ___ftpack:
  1485                           	opt stack 28
  1486                           
  1487                           ;incstack = 0
  1488  000BBA  5004               	movf	___ftpack@exp,w,c
  1489  000BBC  B4D8               	btfsc	status,2,c
  1490  000BBE  D005               	goto	l947
  1491  000BC0  5001               	movf	___ftpack@arg,w,c
  1492  000BC2  1002               	iorwf	___ftpack@arg+1,w,c
  1493  000BC4  1003               	iorwf	___ftpack@arg+2,w,c
  1494  000BC6  A4D8               	btfss	status,2,c
  1495  000BC8  D00C               	goto	l953
  1496  000BCA                     l947:
  1497  000BCA  0E00               	movlw	0
  1498  000BCC  6E01               	movwf	?___ftpack,c
  1499  000BCE  0E00               	movlw	0
  1500  000BD0  6E02               	movwf	?___ftpack+1,c
  1501  000BD2  0E00               	movlw	0
  1502  000BD4  6E03               	movwf	?___ftpack+2,c
  1503  000BD6  0012               	return	
  1504  000BD8                     l951:
  1505  000BD8  2A04               	incf	___ftpack@exp,f,c
  1506  000BDA  90D8               	bcf	status,0,c
  1507  000BDC  3203               	rrcf	___ftpack@arg+2,f,c
  1508  000BDE  3202               	rrcf	___ftpack@arg+1,f,c
  1509  000BE0  3201               	rrcf	___ftpack@arg,f,c
  1510  000BE2                     l953:
  1511  000BE2  0E00               	movlw	0
  1512  000BE4  1401               	andwf	___ftpack@arg,w,c
  1513  000BE6  6E06               	movwf	??___ftpack& (0+255),c
  1514  000BE8  0E00               	movlw	0
  1515  000BEA  1402               	andwf	___ftpack@arg+1,w,c
  1516  000BEC  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1517  000BEE  0EFE               	movlw	254
  1518  000BF0  1403               	andwf	___ftpack@arg+2,w,c
  1519  000BF2  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1520  000BF4  5006               	movf	??___ftpack,w,c
  1521  000BF6  1007               	iorwf	??___ftpack+1,w,c
  1522  000BF8  1008               	iorwf	??___ftpack+2,w,c
  1523  000BFA  B4D8               	btfsc	status,2,c
  1524  000BFC  D00C               	goto	l959
  1525  000BFE  D7EC               	goto	l951
  1526  000C00                     l955:
  1527  000C00  2A04               	incf	___ftpack@exp,f,c
  1528  000C02  0E01               	movlw	1
  1529  000C04  2601               	addwf	___ftpack@arg,f,c
  1530  000C06  0E00               	movlw	0
  1531  000C08  2202               	addwfc	___ftpack@arg+1,f,c
  1532  000C0A  0E00               	movlw	0
  1533  000C0C  2203               	addwfc	___ftpack@arg+2,f,c
  1534  000C0E  90D8               	bcf	status,0,c
  1535  000C10  3203               	rrcf	___ftpack@arg+2,f,c
  1536  000C12  3202               	rrcf	___ftpack@arg+1,f,c
  1537  000C14  3201               	rrcf	___ftpack@arg,f,c
  1538  000C16                     l959:
  1539  000C16  0E00               	movlw	0
  1540  000C18  1401               	andwf	___ftpack@arg,w,c
  1541  000C1A  6E06               	movwf	??___ftpack& (0+255),c
  1542  000C1C  0E00               	movlw	0
  1543  000C1E  1402               	andwf	___ftpack@arg+1,w,c
  1544  000C20  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1545  000C22  0EFF               	movlw	255
  1546  000C24  1403               	andwf	___ftpack@arg+2,w,c
  1547  000C26  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1548  000C28  5006               	movf	??___ftpack,w,c
  1549  000C2A  1007               	iorwf	??___ftpack+1,w,c
  1550  000C2C  1008               	iorwf	??___ftpack+2,w,c
  1551  000C2E  B4D8               	btfsc	status,2,c
  1552  000C30  D006               	goto	l963
  1553  000C32  D7E6               	goto	l955
  1554  000C34                     l961:
  1555  000C34  0604               	decf	___ftpack@exp,f,c
  1556  000C36  90D8               	bcf	status,0,c
  1557  000C38  3601               	rlcf	___ftpack@arg,f,c
  1558  000C3A  3602               	rlcf	___ftpack@arg+1,f,c
  1559  000C3C  3603               	rlcf	___ftpack@arg+2,f,c
  1560  000C3E                     l963:
  1561  000C3E  BE02               	btfsc	___ftpack@arg+1,7,c
  1562  000C40  D003               	goto	l288
  1563  000C42  0E02               	movlw	2
  1564  000C44  6004               	cpfslt	___ftpack@exp,c
  1565  000C46  D7F6               	goto	l961
  1566  000C48                     l288:
  1567  000C48  A004               	btfss	___ftpack@exp,0,c
  1568  000C4A  9E02               	bcf	___ftpack@arg+1,7,c
  1569  000C4C  90D8               	bcf	status,0,c
  1570  000C4E  3204               	rrcf	___ftpack@exp,f,c
  1571  000C50  5004               	movf	___ftpack@exp,w,c
  1572  000C52  1203               	iorwf	___ftpack@arg+2,f,c
  1573  000C54  5005               	movf	___ftpack@sign,w,c
  1574  000C56  A4D8               	btfss	status,2,c
  1575  000C58  8E03               	bsf	___ftpack@arg+2,7,c
  1576  000C5A  C001  F001         	movff	___ftpack@arg,?___ftpack
  1577  000C5E  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  1578  000C62  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  1579  000C66  0012               	return	
  1580  000C68                     __end_of___ftpack:
  1581                           	opt stack 0
  1582                           tblptru	equ	0xFF8
  1583                           tblptrh	equ	0xFF7
  1584                           tblptrl	equ	0xFF6
  1585                           tablat	equ	0xFF5
  1586                           wreg	equ	0xFE8
  1587                           status	equ	0xFD8
  1588                           tblptru	equ	0xFF8
  1589                           tblptrh	equ	0xFF7
  1590                           tblptrl	equ	0xFF6
  1591                           tablat	equ	0xFF5
  1592                           wreg	equ	0xFE8
  1593                           status	equ	0xFD8
  1594                           
  1595                           	psect	rparam
  1596  0000                     tblptru	equ	0xFF8
  1597                           tblptrh	equ	0xFF7
  1598                           tblptrl	equ	0xFF6
  1599                           tablat	equ	0xFF5
  1600                           wreg	equ	0xFE8
  1601                           status	equ	0xFD8


Data Sizes:
    Strings     49
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     55      55
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    USART_SendString@out	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_4(CODE[17]), STR_3(CODE[10]), STR_2(CODE[9]), STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_USART_Init
    _USART_SendString->_USART_TransmitChar
    _USART_Init->___ftadd
    ___ftdiv->___altoft
    ___ftadd->___ftdiv
    ___altoft->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    8763
                                             52 COMRAM     3     3      0
                         _USART_Init
                  _USART_ReceiveChar
                   _USART_SendString
 ---------------------------------------------------------------------------------
 (1) _USART_SendString                                     2     0      2     316
                                              1 COMRAM     2     0      2
                 _USART_TransmitChar
 ---------------------------------------------------------------------------------
 (2) _USART_TransmitChar                                   1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_ReceiveChar                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           7     3      4    8402
                                             45 COMRAM     7     3      4
                           ___altoft
                            ___ftadd
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     316
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    2541
                                             18 COMRAM    15     9      6
                           ___altoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    3203
                                             33 COMRAM    12     6      6
                           ___altoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___altoft                                            10     6      4    2233
                                              8 COMRAM    10     6      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2031
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _USART_Init
     ___altoft
       ___ftpack
     ___ftadd
       ___altoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___altoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
   _USART_ReceiveChar
   _USART_SendString
     _USART_TransmitChar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     37      37       1       57.9%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue Sep 28 11:49:37 2021

               ___altoft@exp 0011                ___altoft@sign 0012                           l54 0E30  
                         l48 0E26                  __CFG_BORV$3 000000                 __CFG_CP0$OFF 000000  
               __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000  
               ___ftadd@exp1 002D                 ___ftadd@exp2 002C                 ___ftadd@sign 002B  
                        l311 0878                          l315 08A2                          l326 0952  
                        l335 096E                          l346 0B88                          l288 0C48  
                        l951 0BD8                          l961 0C34                          l953 0BE2  
                        l963 0C3E                          l955 0C00                          l947 0BCA  
                        l959 0C16                          l987 0D96                          l989 0DA2  
               __CFG_CPB$OFF 000000                          u601 0844                 __CFG_CPD$OFF 000000  
                        u611 0858                          u811 0AE4                          u831 0B0C  
                        u861 09F0                          u880 0A2A                          u885 0A22  
                        u977 0C8A                          u987 0CEA                 __CFG_BOR$OFF 000000  
                        wreg 000FE8                  main@data_in 0037                 __CFG_LVP$OFF 000000  
               ___ftdiv@cntr 001C                 ___ftdiv@sign 0021                 __CFG_WDT$OFF 000000  
                       l1003 0886                         l1031 0902                         l1033 090C  
                       l1025 08E0                         l1009 08B0                         l1051 098A  
                       l1043 0940                         l1035 0916                         l1061 09BA  
                       l1045 094A                         l1037 091E                         l1117 0A0C  
                       l1071 0AFC                         l1135 0A72                         l1153 0AC2  
                       l1145 0A9A                         l1147 0AA6                         l1139 0A82  
                       l1171 0E02                         l1077 0B24                         l1149 0AAC  
                       l1181 0C9E                         l1167 0DEE                         l1097 0B62  
                       l1195 0CD4                         l1197 0CE0                         l1189 0CBC  
                       STR_1 0812                         STR_2 0829                         STR_3 081F  
                       STR_4 0801                         _RCIF 007CF5                         _TXIF 007CF4  
               __CFG_PWRT$ON 000000                         _main 0C68                 ___ftpack@arg 0001  
               ___ftpack@exp 0004     __end_of_USART_SendString 0E16                         start 0000  
              __CFG_IESO$OFF 000000                 ___param_bank 000000                 ___fttol@exp1 000F  
               ___fttol@lval 000B                __CFG_PLLDIV$1 000000               __CFG_CCP2MX$ON 000000  
                      ?_main 0001              __end_of___ftadd 09E0              __end_of___ftdiv 0BBA  
            __end_of___fttol 0AD4                        _LATD0 007C60                        _RCREG 000FAE  
                      _RCSTA 000FAB                        _SPBRG 000FAF                __CFG_USBDIV$1 000000  
                      _TRISD 000F95                        _TXREG 000FAD                        _TXSTA 000FAC  
              __CFG_WRT0$OFF 000000                __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000  
              __CFG_WRT3$OFF 000000               __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000  
             __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000  
              __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000  
             __CFG_EBTRB$OFF 000000                ___ftpack@sign 0005                        tablat 000FF5  
                      status 000FD8               __CFG_ICPRT$OFF 000000                  ?_USART_Init 002E  
             __CFG_MCLRE$OFF 000000              __initialization 0E16                 __end_of_main 0CFA  
                     ??_main 0035                ___fttol@sign1 000A                __activetblptr 000001  
           __end_of___altoft 0DEC             __end_of___ftpack 0C68                       _OSCCON 000FD3  
                     _TRISC6 007CA6                       _TRISC7 007CA7               __CFG_XINST$OFF 000000  
                  ??___ftadd 0028               __CFG_STVREN$ON 000000                    ??___ftdiv 0019  
                  ??___fttol 0005   __end_of_USART_TransmitChar 0E30                 __mediumconst 0000  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
        __size_of_USART_Init 007A                   __accesstop 0060      __end_of__initialization 0E16  
                 ___altoft@c 0009              __CFG_PBADEN$OFF 000000                   ___ftadd@f1 0022  
                 ___ftadd@f2 0025                ___rparam_used 000001                   ___ftdiv@f1 0013  
                 ___ftdiv@f2 0016                   ___ftdiv@f3 001D                   ___fttol@f1 0001  
             __pcstackCOMRAM 0001            ?_USART_SendString 0002           ??_USART_SendString 0004  
                  ?___altoft 0009                    ?___ftpack 0001              __CFG_VREGEN$OFF 000000  
               ??_USART_Init 0032                      __Hparam 0000                      __Lparam 0000  
                    ___ftadd 0834                      ___ftdiv 0AD4                      ___fttol 09E0  
               __psmallconst 0800                   ??___altoft 000D                      __pcinit 0E16  
                 ??___ftpack 0006                      __ramtop 0800                      __ptext0 0C68  
                    __ptext1 0DEC                      __ptext2 0E24                      __ptext3 0E30  
                    __ptext4 0CFA                      __ptext5 09E0                      __ptext6 0AD4  
                    __ptext7 0834                      __ptext8 0D74                      __ptext9 0BBA  
        USART_SendString@out 0002               USART_Init@temp 0032           __end_of_USART_Init 0D74  
       end_of_initialization 0E16          USART_Init@baud_rate 002E        USART_TransmitChar@out 0001  
                ___ftdiv@exp 0020           _USART_TransmitChar 0E24          ?_USART_TransmitChar 0001  
        start_initialization 0E16         ??_USART_TransmitChar 0001            _USART_ReceiveChar 0E30  
         ?_USART_ReceiveChar 0001             __CFG_LPT1OSC$OFF 000000          ??_USART_ReceiveChar 0001  
  __size_of_USART_SendString 002A            __size_of___altoft 0078            __size_of___ftpack 00AE  
  __end_of_USART_ReceiveChar 0E38                     ?___ftadd 0022                     ?___ftdiv 0013  
                   ?___fttol 0001                  __smallconst 0800             __CFG_WDTPS$32768 000000  
 __size_of_USART_ReceiveChar 0008                     __Hrparam 0000                     __Lrparam 0000  
               __Lsmallconst 0800             __size_of___ftadd 01AC             __size_of___ftdiv 00E6  
                   ___altoft 0D74             __size_of___fttol 00F4                     ___ftpack 0BBA  
      __CFG_FOSC$INTOSCIO_EC 000000             _USART_SendString 0DEC                __size_of_main 0092  
      __CFG_CPUDIV$OSC1_PLL2 000000  __size_of_USART_TransmitChar 000C                   _USART_Init 0CFA  
