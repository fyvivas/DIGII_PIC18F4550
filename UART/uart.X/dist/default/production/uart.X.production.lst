

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Feb 23 12:26:14 2022

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22  0000                     
    23                           ; Version 1.41
    24                           ; Generated 25/01/2017 GMT
    25                           ; 
    26                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F4550 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     
    58                           	psect	idataCOMRAM
    59  007926                     __pidataCOMRAM:
    60                           	opt stack 0
    61                           
    62                           ;initializer for _buffer_TX
    63  007926  54                 	db	84
    64  007927  65                 	db	101
    65  007928  6D                 	db	109
    66  007929  70                 	db	112
    67  00792A  3A                 	db	58
    68  00792B  20                 	db	32
    69  00792C  78                 	db	120
    70  00792D  78                 	db	120
    71  00792E  78                 	db	120
    72  00792F  20                 	db	32
    73  007930  67                 	db	103
    74  007931  72                 	db	114
    75  007932  61                 	db	97
    76  007933  64                 	db	100
    77  007934  6F                 	db	111
    78  007935  73                 	db	115
    79  007936  0D                 	db	13
    80  007937  00                 	db	0
    81                           
    82                           	psect	nvCOMRAM
    83  00003F                     __pnvCOMRAM:
    84                           	opt stack 0
    85  00003F                     _temp:
    86                           	opt stack 0
    87  00003F                     	ds	3
    88  000042                     _value_adc:
    89                           	opt stack 0
    90  000042                     	ds	2
    91  000044                     _lm35:
    92                           	opt stack 0
    93  000044                     	ds	1
    94  0000                     _ADCON0bits	set	4034
    95  0000                     _ADCON0	set	4034
    96  0000                     _ADRESL	set	4035
    97  0000                     _ADRESH	set	4036
    98  0000                     _ADCON2	set	4032
    99  0000                     _ADCON1	set	4033
   100  0000                     _TRISA	set	3986
   101  0000                     _TXREG	set	4013
   102  0000                     _SPBRG	set	4015
   103  0000                     _RCSTAbits	set	4011
   104  0000                     _BAUDCONbits	set	4024
   105  0000                     _TXSTAbits	set	4012
   106  0000                     _TRISCbits	set	3988
   107  0000                     _OSCCONbits	set	4051
   108  0000                     _GO	set	32273
   109  0000                     _ADON	set	32272
   110                           
   111                           ; #config settings
   112  0000                     
   113                           	psect	cinit
   114  00794C                     __pcinit:
   115                           	opt stack 0
   116  00794C                     start_initialization:
   117                           	opt stack 0
   118  00794C                     __initialization:
   119                           	opt stack 0
   120                           
   121                           ; Initialize objects allocated to COMRAM (18 bytes)
   122                           ; load TBLPTR registers with __pidataCOMRAM
   123  00794C  0E26               	movlw	low __pidataCOMRAM
   124  00794E  6EF6               	movwf	tblptrl,c
   125  007950  0E79               	movlw	high __pidataCOMRAM
   126  007952  6EF7               	movwf	tblptrh,c
   127  007954  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   128  007956  6EF8               	movwf	tblptru,c
   129  007958  EE00  F02D         	lfsr	0,__pdataCOMRAM
   130  00795C  EE10 F012          	lfsr	1,18
   131  007960                     copy_data0:
   132  007960  0009               	tblrd		*+
   133  007962  CFF5 FFEE          	movff	tablat,postinc0
   134  007966  50E5               	movf	postdec1,w,c
   135  007968  50E1               	movf	fsr1l,w,c
   136  00796A  E1FA               	bnz	copy_data0
   137  00796C                     end_of_initialization:
   138                           	opt stack 0
   139  00796C                     __end_of__initialization:
   140                           	opt stack 0
   141  00796C  0100               	movlb	0
   142  00796E  EF4A  F03F         	goto	_main	;jump to C main() function
   143                           tblptru	equ	0xFF8
   144                           tblptrh	equ	0xFF7
   145                           tblptrl	equ	0xFF6
   146                           tablat	equ	0xFF5
   147                           postinc0	equ	0xFEE
   148                           postdec1	equ	0xFE5
   149                           fsr1l	equ	0xFE1
   150                           
   151                           	psect	dataCOMRAM
   152  00002D                     __pdataCOMRAM:
   153                           	opt stack 0
   154  00002D                     _buffer_TX:
   155                           	opt stack 0
   156  00002D                     	ds	18
   157                           tblptru	equ	0xFF8
   158                           tblptrh	equ	0xFF7
   159                           tblptrl	equ	0xFF6
   160                           tablat	equ	0xFF5
   161                           postinc0	equ	0xFEE
   162                           postdec1	equ	0xFE5
   163                           fsr1l	equ	0xFE1
   164                           
   165                           	psect	cstackCOMRAM
   166  000001                     __pcstackCOMRAM:
   167                           	opt stack 0
   168  000001                     ?_ADC_Read:
   169                           	opt stack 0
   170  000001                     ?___awmod:
   171                           	opt stack 0
   172  000001                     ?___ftpack:
   173                           	opt stack 0
   174  000001                     ?___fttol:
   175                           	opt stack 0
   176  000001                     ADC_Read@channel:
   177                           	opt stack 0
   178  000001                     ___awmod@dividend:
   179                           	opt stack 0
   180  000001                     ___ftpack@arg:
   181                           	opt stack 0
   182  000001                     ___fttol@f1:
   183                           	opt stack 0
   184                           
   185                           ; 3 bytes @ 0x0
   186  000001                     	ds	2
   187  000003                     ??_ADC_Read:
   188  000003                     ___awmod@divisor:
   189                           	opt stack 0
   190                           
   191                           ; 2 bytes @ 0x2
   192  000003                     	ds	1
   193  000004                     ___ftpack@exp:
   194                           	opt stack 0
   195                           
   196                           ; 1 bytes @ 0x3
   197  000004                     	ds	1
   198  000005                     ??___fttol:
   199  000005                     ___awmod@counter:
   200                           	opt stack 0
   201  000005                     ___ftpack@sign:
   202                           	opt stack 0
   203                           
   204                           ; 1 bytes @ 0x4
   205  000005                     	ds	1
   206  000006                     ??___ftpack:
   207  000006                     ___awmod@sign:
   208                           	opt stack 0
   209                           
   210                           ; 1 bytes @ 0x5
   211  000006                     	ds	1
   212  000007                     ?___awdiv:
   213                           	opt stack 0
   214  000007                     ADC_Read@digital:
   215                           	opt stack 0
   216  000007                     ___awdiv@dividend:
   217                           	opt stack 0
   218                           
   219                           ; 2 bytes @ 0x6
   220  000007                     	ds	2
   221  000009                     ?___ftmul:
   222                           	opt stack 0
   223  000009                     ?___awtoft:
   224                           	opt stack 0
   225  000009                     ___awdiv@divisor:
   226                           	opt stack 0
   227  000009                     ___awtoft@c:
   228                           	opt stack 0
   229  000009                     ___ftmul@f1:
   230                           	opt stack 0
   231                           
   232                           ; 3 bytes @ 0x8
   233  000009                     	ds	1
   234  00000A                     ___fttol@sign1:
   235                           	opt stack 0
   236                           
   237                           ; 1 bytes @ 0x9
   238  00000A                     	ds	1
   239  00000B                     ___awdiv@counter:
   240                           	opt stack 0
   241  00000B                     ___fttol@lval:
   242                           	opt stack 0
   243                           
   244                           ; 4 bytes @ 0xA
   245  00000B                     	ds	1
   246  00000C                     ___awdiv@sign:
   247                           	opt stack 0
   248  00000C                     ___awtoft@sign:
   249                           	opt stack 0
   250  00000C                     ___ftmul@f2:
   251                           	opt stack 0
   252                           
   253                           ; 3 bytes @ 0xB
   254  00000C                     	ds	1
   255  00000D                     ___awdiv@quotient:
   256                           	opt stack 0
   257                           
   258                           ; 2 bytes @ 0xC
   259  00000D                     	ds	2
   260  00000F                     ??___ftmul:
   261  00000F                     ___fttol@exp1:
   262                           	opt stack 0
   263                           
   264                           ; 1 bytes @ 0xE
   265  00000F                     	ds	3
   266  000012                     ___ftmul@exp:
   267                           	opt stack 0
   268                           
   269                           ; 1 bytes @ 0x11
   270  000012                     	ds	1
   271  000013                     ___ftmul@f3_as_product:
   272                           	opt stack 0
   273                           
   274                           ; 3 bytes @ 0x12
   275  000013                     	ds	3
   276  000016                     ___ftmul@cntr:
   277                           	opt stack 0
   278                           
   279                           ; 1 bytes @ 0x15
   280  000016                     	ds	1
   281  000017                     ___ftmul@sign:
   282                           	opt stack 0
   283                           
   284                           ; 1 bytes @ 0x16
   285  000017                     	ds	1
   286  000018                     ?___ftdiv:
   287                           	opt stack 0
   288  000018                     ___ftdiv@f1:
   289                           	opt stack 0
   290                           
   291                           ; 3 bytes @ 0x17
   292  000018                     	ds	3
   293  00001B                     ___ftdiv@f2:
   294                           	opt stack 0
   295                           
   296                           ; 3 bytes @ 0x1A
   297  00001B                     	ds	3
   298  00001E                     ??___ftdiv:
   299                           
   300                           ; 1 bytes @ 0x1D
   301  00001E                     	ds	3
   302  000021                     ___ftdiv@cntr:
   303                           	opt stack 0
   304                           
   305                           ; 1 bytes @ 0x20
   306  000021                     	ds	1
   307  000022                     ___ftdiv@f3:
   308                           	opt stack 0
   309                           
   310                           ; 3 bytes @ 0x21
   311  000022                     	ds	3
   312  000025                     ___ftdiv@exp:
   313                           	opt stack 0
   314                           
   315                           ; 1 bytes @ 0x24
   316  000025                     	ds	1
   317  000026                     ___ftdiv@sign:
   318                           	opt stack 0
   319                           
   320                           ; 1 bytes @ 0x25
   321  000026                     	ds	1
   322  000027                     ??_main:
   323                           
   324                           ; 1 bytes @ 0x26
   325  000027                     	ds	2
   326  000029                     _main$899:
   327                           	opt stack 0
   328                           
   329                           ; 2 bytes @ 0x28
   330  000029                     	ds	2
   331  00002B                     main@i:
   332                           	opt stack 0
   333                           
   334                           ; 2 bytes @ 0x2A
   335  00002B                     	ds	2
   336                           tblptru	equ	0xFF8
   337                           tblptrh	equ	0xFF7
   338                           tblptrl	equ	0xFF6
   339                           tablat	equ	0xFF5
   340                           postinc0	equ	0xFEE
   341                           postdec1	equ	0xFE5
   342                           fsr1l	equ	0xFE1
   343                           
   344 ;;
   345 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   346 ;;
   347 ;; *************** function _main *****************
   348 ;; Defined at:
   349 ;;		line 33 in file "uart_lm35.c"
   350 ;; Parameters:    Size  Location     Type
   351 ;;		None
   352 ;; Auto vars:     Size  Location     Type
   353 ;;  i               2   42[COMRAM] int 
   354 ;; Return value:  Size  Location     Type
   355 ;;                  1    wreg      void 
   356 ;; Registers used:
   357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   358 ;; Tracked objects:
   359 ;;		On entry : 0/0
   360 ;;		On exit  : 0/0
   361 ;;		Unchanged: 0/0
   362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   363 ;;      Params:         0       0       0       0       0       0       0       0       0
   364 ;;      Locals:         4       0       0       0       0       0       0       0       0
   365 ;;      Temps:          2       0       0       0       0       0       0       0       0
   366 ;;      Totals:         6       0       0       0       0       0       0       0       0
   367 ;;Total ram usage:        6 bytes
   368 ;; Hardware stack levels required when called:    2
   369 ;; This function calls:
   370 ;;		_ADC_Init
   371 ;;		_ADC_Read
   372 ;;		___awdiv
   373 ;;		___awmod
   374 ;;		___awtoft
   375 ;;		___ftdiv
   376 ;;		___ftmul
   377 ;;		___fttol
   378 ;; This function is called by:
   379 ;;		Startup code after reset
   380 ;; This function uses a non-reentrant model
   381 ;;
   382                           
   383                           	psect	text0
   384  007E94                     __ptext0:
   385                           	opt stack 0
   386  007E94                     _main:
   387                           	opt stack 29
   388                           
   389                           ;uart_lm35.c: 35: OSCCONbits.IRCF = 0b111;
   390                           
   391                           ;incstack = 0
   392  007E94  88D3               	bsf	4051,4,c	;volatile
   393  007E96  8AD3               	bsf	4051,5,c	;volatile
   394  007E98  8CD3               	bsf	4051,6,c	;volatile
   395                           
   396                           ;uart_lm35.c: 36: OSCCONbits.SCS = 0b10;
   397  007E9A  50D3               	movf	4051,w,c	;volatile
   398  007E9C  0BFC               	andlw	-4
   399  007E9E  0902               	iorlw	2
   400  007EA0  6ED3               	movwf	4051,c	;volatile
   401                           
   402                           ;uart_lm35.c: 39: TRISCbits.RC6 = 0;
   403  007EA2  9C94               	bcf	3988,6,c	;volatile
   404                           
   405                           ;uart_lm35.c: 40: TXSTAbits.TX9 = 0;
   406  007EA4  9CAC               	bcf	4012,6,c	;volatile
   407                           
   408                           ;uart_lm35.c: 41: TXSTAbits.TXEN = 1;
   409  007EA6  8AAC               	bsf	4012,5,c	;volatile
   410                           
   411                           ;uart_lm35.c: 42: TXSTAbits.SYNC = 0;
   412  007EA8  98AC               	bcf	4012,4,c	;volatile
   413                           
   414                           ;uart_lm35.c: 43: TXSTAbits.BRGH = 0;
   415  007EAA  94AC               	bcf	4012,2,c	;volatile
   416                           
   417                           ;uart_lm35.c: 44: BAUDCONbits.BRG16 = 0;
   418  007EAC  96B8               	bcf	4024,3,c	;volatile
   419                           
   420                           ;uart_lm35.c: 45: RCSTAbits.SPEN = 1;
   421  007EAE  8EAB               	bsf	4011,7,c	;volatile
   422                           
   423                           ;uart_lm35.c: 46: SPBRG = (unsigned char) (((8000000L / 9600) / 64) - 1);
   424  007EB0  0E0C               	movlw	12
   425  007EB2  6EAF               	movwf	4015,c	;volatile
   426                           
   427                           ;uart_lm35.c: 49: ADC_Init();
   428  007EB4  EC9C  F03C         	call	_ADC_Init	;wreg free
   429  007EB8                     l1294:
   430                           
   431                           ;uart_lm35.c: 63: value_adc = ADC_Read(0);
   432  007EB8  0E00               	movlw	0
   433  007EBA  6E02               	movwf	ADC_Read@channel+1,c
   434  007EBC  0E00               	movlw	0
   435  007EBE  6E01               	movwf	ADC_Read@channel,c
   436  007EC0  EC0D  F03D         	call	_ADC_Read	;wreg free
   437  007EC4  C001  F042         	movff	?_ADC_Read,_value_adc
   438  007EC8  C002  F043         	movff	?_ADC_Read+1,_value_adc+1
   439                           
   440                           ;uart_lm35.c: 70: temp = value_adc;
   441  007ECC  C042  F009         	movff	_value_adc,___awtoft@c
   442  007ED0  C043  F00A         	movff	_value_adc+1,___awtoft@c+1
   443  007ED4  ECB9  F03C         	call	___awtoft	;wreg free
   444  007ED8  C009  F03F         	movff	?___awtoft,_temp
   445  007EDC  C00A  F040         	movff	?___awtoft+1,_temp+1
   446  007EE0  C00B  F041         	movff	?___awtoft+2,_temp+2
   447                           
   448                           ;uart_lm35.c: 71: temp = (temp * 500.0) / 1023.0;
   449  007EE4  0E00               	movlw	0
   450  007EE6  6E0C               	movwf	___ftmul@f2,c
   451  007EE8  0EFA               	movlw	250
   452  007EEA  6E0D               	movwf	___ftmul@f2+1,c
   453  007EEC  0E43               	movlw	67
   454  007EEE  6E0E               	movwf	___ftmul@f2+2,c
   455  007EF0  C03F  F009         	movff	_temp,___ftmul@f1
   456  007EF4  C040  F00A         	movff	_temp+1,___ftmul@f1+1
   457  007EF8  C041  F00B         	movff	_temp+2,___ftmul@f1+2
   458  007EFC  EC56  F03E         	call	___ftmul	;wreg free
   459  007F00  C009  F018         	movff	?___ftmul,___ftdiv@f1
   460  007F04  C00A  F019         	movff	?___ftmul+1,___ftdiv@f1+1
   461  007F08  C00B  F01A         	movff	?___ftmul+2,___ftdiv@f1+2
   462  007F0C  0EC0               	movlw	192
   463  007F0E  6E1B               	movwf	___ftdiv@f2,c
   464  007F10  0E7F               	movlw	127
   465  007F12  6E1C               	movwf	___ftdiv@f2+1,c
   466  007F14  0E44               	movlw	68
   467  007F16  6E1D               	movwf	___ftdiv@f2+2,c
   468  007F18  ECE3  F03D         	call	___ftdiv	;wreg free
   469  007F1C  C018  F03F         	movff	?___ftdiv,_temp
   470  007F20  C019  F040         	movff	?___ftdiv+1,_temp+1
   471  007F24  C01A  F041         	movff	?___ftdiv+2,_temp+2
   472                           
   473                           ;uart_lm35.c: 72: lm35 = (char) temp;
   474  007F28  C03F  F001         	movff	_temp,___fttol@f1
   475  007F2C  C040  F002         	movff	_temp+1,___fttol@f1+1
   476  007F30  C041  F003         	movff	_temp+2,___fttol@f1+2
   477  007F34  ECD0  F03E         	call	___fttol	;wreg free
   478  007F38  5001               	movf	?___fttol,w,c
   479  007F3A  6E44               	movwf	_lm35,c
   480                           
   481                           ;uart_lm35.c: 73: buffer_TX[6] = (lm35 / 100) + '0';
   482  007F3C  C044  F007         	movff	_lm35,___awdiv@dividend
   483  007F40  6A08               	clrf	___awdiv@dividend+1,c
   484  007F42  0E00               	movlw	0
   485  007F44  6E0A               	movwf	___awdiv@divisor+1,c
   486  007F46  0E64               	movlw	100
   487  007F48  6E09               	movwf	___awdiv@divisor,c
   488  007F4A  EC4A  F03D         	call	___awdiv	;wreg free
   489  007F4E  5007               	movf	?___awdiv,w,c
   490  007F50  0F30               	addlw	48
   491  007F52  6E33               	movwf	_buffer_TX+6,c
   492                           
   493                           ;uart_lm35.c: 74: buffer_TX[7] = (lm35 % 100) / 10 + '0';
   494  007F54  0E00               	movlw	0
   495  007F56  6E04               	movwf	___awmod@divisor+1,c
   496  007F58  0E64               	movlw	100
   497  007F5A  6E03               	movwf	___awmod@divisor,c
   498  007F5C  C044  F001         	movff	_lm35,___awmod@dividend
   499  007F60  6A02               	clrf	___awmod@dividend+1,c
   500  007F62  ECD5  F03C         	call	___awmod	;wreg free
   501  007F66  C001  F007         	movff	?___awmod,___awdiv@dividend
   502  007F6A  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
   503  007F6E  0E00               	movlw	0
   504  007F70  6E0A               	movwf	___awdiv@divisor+1,c
   505  007F72  0E0A               	movlw	10
   506  007F74  6E09               	movwf	___awdiv@divisor,c
   507  007F76  EC4A  F03D         	call	___awdiv	;wreg free
   508  007F7A  5007               	movf	?___awdiv,w,c
   509  007F7C  0F30               	addlw	48
   510  007F7E  6E34               	movwf	_buffer_TX+7,c
   511                           
   512                           ;uart_lm35.c: 75: buffer_TX[8] = (lm35 % 100) % 10 + '0';
   513  007F80  0E00               	movlw	0
   514  007F82  6E04               	movwf	___awmod@divisor+1,c
   515  007F84  0E64               	movlw	100
   516  007F86  6E03               	movwf	___awmod@divisor,c
   517  007F88  C044  F001         	movff	_lm35,___awmod@dividend
   518  007F8C  6A02               	clrf	___awmod@dividend+1,c
   519  007F8E  ECD5  F03C         	call	___awmod	;wreg free
   520  007F92  C001  F029         	movff	?___awmod,_main$899
   521  007F96  C002  F02A         	movff	?___awmod+1,_main$899+1
   522                           
   523                           ;uart_lm35.c: 75: buffer_TX[8] = (lm35 % 100) % 10 + '0';
   524  007F9A  C029  F001         	movff	_main$899,___awmod@dividend
   525  007F9E  C02A  F002         	movff	_main$899+1,___awmod@dividend+1
   526  007FA2  0E00               	movlw	0
   527  007FA4  6E04               	movwf	___awmod@divisor+1,c
   528  007FA6  0E0A               	movlw	10
   529  007FA8  6E03               	movwf	___awmod@divisor,c
   530  007FAA  ECD5  F03C         	call	___awmod	;wreg free
   531  007FAE  5001               	movf	?___awmod,w,c
   532  007FB0  0F30               	addlw	48
   533  007FB2  6E35               	movwf	_buffer_TX+8,c
   534                           
   535                           ;uart_lm35.c: 77: for (int i = 0; i < 17; i++) {
   536  007FB4  0E00               	movlw	0
   537  007FB6  6E2C               	movwf	main@i+1,c
   538  007FB8  0E00               	movlw	0
   539  007FBA  6E2B               	movwf	main@i,c
   540  007FBC                     l1312:
   541  007FBC  BE2C               	btfsc	main@i+1,7,c
   542  007FBE  D006               	goto	l34
   543  007FC0  502C               	movf	main@i+1,w,c
   544  007FC2  E111               	bnz	l1322
   545  007FC4  0E11               	movlw	17
   546  007FC6  5C2B               	subwf	main@i,w,c
   547  007FC8  B0D8               	btfsc	status,0,c
   548  007FCA  D00D               	goto	l1322
   549  007FCC                     l34:
   550  007FCC  A2AC               	btfss	4012,1,c	;volatile
   551  007FCE  D7FE               	goto	l34
   552                           
   553                           ;uart_lm35.c: 80: }
   554                           ;uart_lm35.c: 82: TXREG = buffer_TX[i];
   555  007FD0  0E2D               	movlw	low _buffer_TX
   556  007FD2  242B               	addwf	main@i,w,c
   557  007FD4  6ED9               	movwf	fsr2l,c
   558  007FD6  0E00               	movlw	high _buffer_TX
   559  007FD8  202C               	addwfc	main@i+1,w,c
   560  007FDA  6EDA               	movwf	fsr2h,c
   561  007FDC  50DF               	movf	indf2,w,c
   562  007FDE  6EAD               	movwf	4013,c	;volatile
   563  007FE0  4A2B               	infsnz	main@i,f,c
   564  007FE2  2A2C               	incf	main@i+1,f,c
   565  007FE4  D7EB               	goto	l1312
   566  007FE6                     l1322:
   567                           
   568                           ;uart_lm35.c: 83: }
   569                           ;uart_lm35.c: 84: _delay((unsigned long)((100)*(8000000L/4000.0)));
   570  007FE6  0E02               	movlw	2
   571  007FE8  6E28               	movwf	(??_main+1)& (0+255),c
   572  007FEA  0E04               	movlw	4
   573  007FEC  6E27               	movwf	??_main& (0+255),c
   574  007FEE  0EBA               	movlw	186
   575  007FF0                     u1017:
   576  007FF0  2EE8               	decfsz	wreg,f,c
   577  007FF2  D7FE               	bra	u1017
   578  007FF4  2E27               	decfsz	??_main& (0+255),f,c
   579  007FF6  D7FC               	bra	u1017
   580  007FF8  2E28               	decfsz	(??_main+1)& (0+255),f,c
   581  007FFA  D7FA               	bra	u1017
   582  007FFC  D000               	nop2	
   583  007FFE  D75C               	goto	l1294
   584  008000                     __end_of_main:
   585                           	opt stack 0
   586                           tblptru	equ	0xFF8
   587                           tblptrh	equ	0xFF7
   588                           tblptrl	equ	0xFF6
   589                           tablat	equ	0xFF5
   590                           postinc0	equ	0xFEE
   591                           wreg	equ	0xFE8
   592                           postdec1	equ	0xFE5
   593                           fsr1l	equ	0xFE1
   594                           indf2	equ	0xFDF
   595                           fsr2h	equ	0xFDA
   596                           fsr2l	equ	0xFD9
   597                           status	equ	0xFD8
   598                           
   599 ;; *************** function ___fttol *****************
   600 ;; Defined at:
   601 ;;		line 44 in file "D:\mplab\sources\common\fttol.c"
   602 ;; Parameters:    Size  Location     Type
   603 ;;  f1              3    0[COMRAM] float 
   604 ;; Auto vars:     Size  Location     Type
   605 ;;  lval            4   10[COMRAM] unsigned long 
   606 ;;  exp1            1   14[COMRAM] unsigned char 
   607 ;;  sign1           1    9[COMRAM] unsigned char 
   608 ;; Return value:  Size  Location     Type
   609 ;;                  4    0[COMRAM] long 
   610 ;; Registers used:
   611 ;;		wreg, status,2, status,0
   612 ;; Tracked objects:
   613 ;;		On entry : 0/0
   614 ;;		On exit  : 0/0
   615 ;;		Unchanged: 0/0
   616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   617 ;;      Params:         4       0       0       0       0       0       0       0       0
   618 ;;      Locals:         6       0       0       0       0       0       0       0       0
   619 ;;      Temps:          5       0       0       0       0       0       0       0       0
   620 ;;      Totals:        15       0       0       0       0       0       0       0       0
   621 ;;Total ram usage:       15 bytes
   622 ;; Hardware stack levels used:    1
   623 ;; This function calls:
   624 ;;		Nothing
   625 ;; This function is called by:
   626 ;;		_main
   627 ;; This function uses a non-reentrant model
   628 ;;
   629                           
   630                           	psect	text1
   631  007DA0                     __ptext1:
   632                           	opt stack 0
   633  007DA0                     ___fttol:
   634                           	opt stack 30
   635                           
   636                           ;incstack = 0
   637  007DA0  C003  F005         	movff	___fttol@f1+2,??___fttol
   638  007DA4  6A06               	clrf	(??___fttol+1)& (0+255),c
   639  007DA6  6A07               	clrf	(??___fttol+2)& (0+255),c
   640  007DA8  3402               	rlcf	___fttol@f1+1,w,c
   641  007DAA  3605               	rlcf	??___fttol& (0+255),f,c
   642  007DAC  E301               	bnc	u901
   643  007DAE  8006               	bsf	(??___fttol+1)& (0+255),0,c
   644  007DB0                     u901:
   645  007DB0  5005               	movf	??___fttol,w,c
   646  007DB2  6E0F               	movwf	___fttol@exp1,c
   647  007DB4  500F               	movf	___fttol@exp1,w,c
   648  007DB6  A4D8               	btfss	status,2,c
   649  007DB8  D009               	goto	l1234
   650  007DBA  0E00               	movlw	0
   651  007DBC  6E01               	movwf	?___fttol,c
   652  007DBE  0E00               	movlw	0
   653  007DC0  6E02               	movwf	?___fttol+1,c
   654  007DC2  0E00               	movlw	0
   655  007DC4  6E03               	movwf	?___fttol+2,c
   656  007DC6  0E00               	movlw	0
   657  007DC8  6E04               	movwf	?___fttol+3,c
   658  007DCA  0012               	return	
   659  007DCC                     l1234:
   660  007DCC  0E17               	movlw	23
   661  007DCE  6E05               	movwf	??___fttol& (0+255),c
   662  007DD0  C001  F006         	movff	___fttol@f1,??___fttol+1
   663  007DD4  C002  F007         	movff	___fttol@f1+1,??___fttol+2
   664  007DD8  C003  F008         	movff	___fttol@f1+2,??___fttol+3
   665  007DDC  2805               	incf	??___fttol,w,c
   666  007DDE  6E09               	movwf	(??___fttol+4)& (0+255),c
   667  007DE0  D004               	goto	u920
   668  007DE2                     u925:
   669  007DE2  90D8               	bcf	status,0,c
   670  007DE4  3208               	rrcf	??___fttol+3,f,c
   671  007DE6  3207               	rrcf	??___fttol+2,f,c
   672  007DE8  3206               	rrcf	??___fttol+1,f,c
   673  007DEA                     u920:
   674  007DEA  2E09               	decfsz	(??___fttol+4)& (0+255),f,c
   675  007DEC  D7FA               	goto	u925
   676  007DEE  5006               	movf	??___fttol+1,w,c
   677  007DF0  6E0A               	movwf	___fttol@sign1,c
   678  007DF2  8E02               	bsf	___fttol@f1+1,7,c
   679  007DF4  0EFF               	movlw	255
   680  007DF6  1601               	andwf	___fttol@f1,f,c
   681  007DF8  0EFF               	movlw	255
   682  007DFA  1602               	andwf	___fttol@f1+1,f,c
   683  007DFC  0E00               	movlw	0
   684  007DFE  1603               	andwf	___fttol@f1+2,f,c
   685  007E00  5001               	movf	___fttol@f1,w,c
   686  007E02  6E0B               	movwf	___fttol@lval,c
   687  007E04  5002               	movf	___fttol@f1+1,w,c
   688  007E06  6E0C               	movwf	___fttol@lval+1,c
   689  007E08  5003               	movf	___fttol@f1+2,w,c
   690  007E0A  6E0D               	movwf	___fttol@lval+2,c
   691  007E0C  6A0E               	clrf	___fttol@lval+3,c
   692  007E0E  0E8E               	movlw	142
   693  007E10  5E0F               	subwf	___fttol@exp1,f,c
   694  007E12  AE0F               	btfss	___fttol@exp1,7,c
   695  007E14  D016               	goto	l1256
   696  007E16  500F               	movf	___fttol@exp1,w,c
   697  007E18  0A80               	xorlw	128
   698  007E1A  0F8F               	addlw	143
   699  007E1C  B0D8               	btfsc	status,0,c
   700  007E1E  D009               	goto	l1252
   701  007E20  0E00               	movlw	0
   702  007E22  6E01               	movwf	?___fttol,c
   703  007E24  0E00               	movlw	0
   704  007E26  6E02               	movwf	?___fttol+1,c
   705  007E28  0E00               	movlw	0
   706  007E2A  6E03               	movwf	?___fttol+2,c
   707  007E2C  0E00               	movlw	0
   708  007E2E  6E04               	movwf	?___fttol+3,c
   709  007E30  0012               	return	
   710  007E32                     l1252:
   711  007E32  90D8               	bcf	status,0,c
   712  007E34  320E               	rrcf	___fttol@lval+3,f,c
   713  007E36  320D               	rrcf	___fttol@lval+2,f,c
   714  007E38  320C               	rrcf	___fttol@lval+1,f,c
   715  007E3A  320B               	rrcf	___fttol@lval,f,c
   716  007E3C  3E0F               	incfsz	___fttol@exp1,f,c
   717  007E3E  D7F9               	goto	l1252
   718  007E40  D015               	goto	l1266
   719  007E42                     l1256:
   720  007E42  0E17               	movlw	23
   721  007E44  640F               	cpfsgt	___fttol@exp1,c
   722  007E46  D00F               	goto	l1264
   723  007E48  0E00               	movlw	0
   724  007E4A  6E01               	movwf	?___fttol,c
   725  007E4C  0E00               	movlw	0
   726  007E4E  6E02               	movwf	?___fttol+1,c
   727  007E50  0E00               	movlw	0
   728  007E52  6E03               	movwf	?___fttol+2,c
   729  007E54  0E00               	movlw	0
   730  007E56  6E04               	movwf	?___fttol+3,c
   731  007E58  0012               	return	
   732  007E5A                     l1262:
   733  007E5A  90D8               	bcf	status,0,c
   734  007E5C  360B               	rlcf	___fttol@lval,f,c
   735  007E5E  360C               	rlcf	___fttol@lval+1,f,c
   736  007E60  360D               	rlcf	___fttol@lval+2,f,c
   737  007E62  360E               	rlcf	___fttol@lval+3,f,c
   738  007E64  060F               	decf	___fttol@exp1,f,c
   739  007E66                     l1264:
   740  007E66  500F               	movf	___fttol@exp1,w,c
   741  007E68  A4D8               	btfss	status,2,c
   742  007E6A  D7F7               	goto	l1262
   743  007E6C                     l1266:
   744  007E6C  500A               	movf	___fttol@sign1,w,c
   745  007E6E  B4D8               	btfsc	status,2,c
   746  007E70  D008               	goto	l1270
   747  007E72  1E0E               	comf	___fttol@lval+3,f,c
   748  007E74  1E0D               	comf	___fttol@lval+2,f,c
   749  007E76  1E0C               	comf	___fttol@lval+1,f,c
   750  007E78  6C0B               	negf	___fttol@lval,c
   751  007E7A  0E00               	movlw	0
   752  007E7C  220C               	addwfc	___fttol@lval+1,f,c
   753  007E7E  220D               	addwfc	___fttol@lval+2,f,c
   754  007E80  220E               	addwfc	___fttol@lval+3,f,c
   755  007E82                     l1270:
   756  007E82  C00B  F001         	movff	___fttol@lval,?___fttol
   757  007E86  C00C  F002         	movff	___fttol@lval+1,?___fttol+1
   758  007E8A  C00D  F003         	movff	___fttol@lval+2,?___fttol+2
   759  007E8E  C00E  F004         	movff	___fttol@lval+3,?___fttol+3
   760  007E92  0012               	return	
   761  007E94                     __end_of___fttol:
   762                           	opt stack 0
   763                           tblptru	equ	0xFF8
   764                           tblptrh	equ	0xFF7
   765                           tblptrl	equ	0xFF6
   766                           tablat	equ	0xFF5
   767                           postinc0	equ	0xFEE
   768                           wreg	equ	0xFE8
   769                           postdec1	equ	0xFE5
   770                           fsr1l	equ	0xFE1
   771                           indf2	equ	0xFDF
   772                           fsr2h	equ	0xFDA
   773                           fsr2l	equ	0xFD9
   774                           status	equ	0xFD8
   775                           
   776 ;; *************** function ___ftmul *****************
   777 ;; Defined at:
   778 ;;		line 62 in file "D:\mplab\sources\common\ftmul.c"
   779 ;; Parameters:    Size  Location     Type
   780 ;;  f1              3    8[COMRAM] float 
   781 ;;  f2              3   11[COMRAM] float 
   782 ;; Auto vars:     Size  Location     Type
   783 ;;  f3_as_produc    3   18[COMRAM] unsigned um
   784 ;;  sign            1   22[COMRAM] unsigned char 
   785 ;;  cntr            1   21[COMRAM] unsigned char 
   786 ;;  exp             1   17[COMRAM] unsigned char 
   787 ;; Return value:  Size  Location     Type
   788 ;;                  3    8[COMRAM] float 
   789 ;; Registers used:
   790 ;;		wreg, status,2, status,0, cstack
   791 ;; Tracked objects:
   792 ;;		On entry : 0/0
   793 ;;		On exit  : 0/0
   794 ;;		Unchanged: 0/0
   795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   796 ;;      Params:         6       0       0       0       0       0       0       0       0
   797 ;;      Locals:         6       0       0       0       0       0       0       0       0
   798 ;;      Temps:          3       0       0       0       0       0       0       0       0
   799 ;;      Totals:        15       0       0       0       0       0       0       0       0
   800 ;;Total ram usage:       15 bytes
   801 ;; Hardware stack levels used:    1
   802 ;; Hardware stack levels required when called:    1
   803 ;; This function calls:
   804 ;;		___ftpack
   805 ;; This function is called by:
   806 ;;		_main
   807 ;; This function uses a non-reentrant model
   808 ;;
   809                           
   810                           	psect	text2
   811  007CAC                     __ptext2:
   812                           	opt stack 0
   813  007CAC                     ___ftmul:
   814                           	opt stack 29
   815                           
   816                           ;incstack = 0
   817  007CAC  C00B  F00F         	movff	___ftmul@f1+2,??___ftmul
   818  007CB0  6A10               	clrf	(??___ftmul+1)& (0+255),c
   819  007CB2  6A11               	clrf	(??___ftmul+2)& (0+255),c
   820  007CB4  340A               	rlcf	___ftmul@f1+1,w,c
   821  007CB6  360F               	rlcf	??___ftmul& (0+255),f,c
   822  007CB8  E301               	bnc	u711
   823  007CBA  8010               	bsf	(??___ftmul+1)& (0+255),0,c
   824  007CBC                     u711:
   825  007CBC  500F               	movf	??___ftmul,w,c
   826  007CBE  6E12               	movwf	___ftmul@exp,c
   827  007CC0  5012               	movf	___ftmul@exp,w,c
   828  007CC2  A4D8               	btfss	status,2,c
   829  007CC4  D007               	goto	l1094
   830  007CC6  0E00               	movlw	0
   831  007CC8  6E09               	movwf	?___ftmul,c
   832  007CCA  0E00               	movlw	0
   833  007CCC  6E0A               	movwf	?___ftmul+1,c
   834  007CCE  0E00               	movlw	0
   835  007CD0  6E0B               	movwf	?___ftmul+2,c
   836  007CD2  0012               	return	
   837  007CD4                     l1094:
   838  007CD4  C00E  F00F         	movff	___ftmul@f2+2,??___ftmul
   839  007CD8  6A10               	clrf	(??___ftmul+1)& (0+255),c
   840  007CDA  6A11               	clrf	(??___ftmul+2)& (0+255),c
   841  007CDC  340D               	rlcf	___ftmul@f2+1,w,c
   842  007CDE  360F               	rlcf	??___ftmul& (0+255),f,c
   843  007CE0  E301               	bnc	u731
   844  007CE2  8010               	bsf	(??___ftmul+1)& (0+255),0,c
   845  007CE4                     u731:
   846  007CE4  500F               	movf	??___ftmul,w,c
   847  007CE6  6E17               	movwf	___ftmul@sign,c
   848  007CE8  5017               	movf	___ftmul@sign,w,c
   849  007CEA  A4D8               	btfss	status,2,c
   850  007CEC  D007               	goto	l1100
   851  007CEE  0E00               	movlw	0
   852  007CF0  6E09               	movwf	?___ftmul,c
   853  007CF2  0E00               	movlw	0
   854  007CF4  6E0A               	movwf	?___ftmul+1,c
   855  007CF6  0E00               	movlw	0
   856  007CF8  6E0B               	movwf	?___ftmul+2,c
   857  007CFA  0012               	return	
   858  007CFC                     l1100:
   859  007CFC  5017               	movf	___ftmul@sign,w,c
   860  007CFE  0F7B               	addlw	123
   861  007D00  2612               	addwf	___ftmul@exp,f,c
   862  007D02  C00B  F017         	movff	___ftmul@f1+2,___ftmul@sign
   863  007D06  500E               	movf	___ftmul@f2+2,w,c
   864  007D08  1A17               	xorwf	___ftmul@sign,f,c
   865  007D0A  0E80               	movlw	128
   866  007D0C  1617               	andwf	___ftmul@sign,f,c
   867  007D0E  8E0A               	bsf	___ftmul@f1+1,7,c
   868  007D10  8E0D               	bsf	___ftmul@f2+1,7,c
   869  007D12  0EFF               	movlw	255
   870  007D14  160C               	andwf	___ftmul@f2,f,c
   871  007D16  0EFF               	movlw	255
   872  007D18  160D               	andwf	___ftmul@f2+1,f,c
   873  007D1A  0E00               	movlw	0
   874  007D1C  160E               	andwf	___ftmul@f2+2,f,c
   875  007D1E  0E00               	movlw	0
   876  007D20  6E13               	movwf	___ftmul@f3_as_product,c
   877  007D22  0E00               	movlw	0
   878  007D24  6E14               	movwf	___ftmul@f3_as_product+1,c
   879  007D26  0E00               	movlw	0
   880  007D28  6E15               	movwf	___ftmul@f3_as_product+2,c
   881  007D2A  0E07               	movlw	7
   882  007D2C  6E16               	movwf	___ftmul@cntr,c
   883  007D2E                     l1114:
   884  007D2E  A009               	btfss	___ftmul@f1,0,c
   885  007D30  D006               	goto	l1118
   886  007D32  500C               	movf	___ftmul@f2,w,c
   887  007D34  2613               	addwf	___ftmul@f3_as_product,f,c
   888  007D36  500D               	movf	___ftmul@f2+1,w,c
   889  007D38  2214               	addwfc	___ftmul@f3_as_product+1,f,c
   890  007D3A  500E               	movf	___ftmul@f2+2,w,c
   891  007D3C  2215               	addwfc	___ftmul@f3_as_product+2,f,c
   892  007D3E                     l1118:
   893  007D3E  90D8               	bcf	status,0,c
   894  007D40  320B               	rrcf	___ftmul@f1+2,f,c
   895  007D42  320A               	rrcf	___ftmul@f1+1,f,c
   896  007D44  3209               	rrcf	___ftmul@f1,f,c
   897  007D46  90D8               	bcf	status,0,c
   898  007D48  360C               	rlcf	___ftmul@f2,f,c
   899  007D4A  360D               	rlcf	___ftmul@f2+1,f,c
   900  007D4C  360E               	rlcf	___ftmul@f2+2,f,c
   901  007D4E  2E16               	decfsz	___ftmul@cntr,f,c
   902  007D50  D7EE               	goto	l1114
   903  007D52  0E09               	movlw	9
   904  007D54  6E16               	movwf	___ftmul@cntr,c
   905  007D56                     l1124:
   906  007D56  A009               	btfss	___ftmul@f1,0,c
   907  007D58  D006               	goto	l1128
   908  007D5A  500C               	movf	___ftmul@f2,w,c
   909  007D5C  2613               	addwf	___ftmul@f3_as_product,f,c
   910  007D5E  500D               	movf	___ftmul@f2+1,w,c
   911  007D60  2214               	addwfc	___ftmul@f3_as_product+1,f,c
   912  007D62  500E               	movf	___ftmul@f2+2,w,c
   913  007D64  2215               	addwfc	___ftmul@f3_as_product+2,f,c
   914  007D66                     l1128:
   915  007D66  90D8               	bcf	status,0,c
   916  007D68  320B               	rrcf	___ftmul@f1+2,f,c
   917  007D6A  320A               	rrcf	___ftmul@f1+1,f,c
   918  007D6C  3209               	rrcf	___ftmul@f1,f,c
   919  007D6E  90D8               	bcf	status,0,c
   920  007D70  3215               	rrcf	___ftmul@f3_as_product+2,f,c
   921  007D72  3214               	rrcf	___ftmul@f3_as_product+1,f,c
   922  007D74  3213               	rrcf	___ftmul@f3_as_product,f,c
   923  007D76  2E16               	decfsz	___ftmul@cntr,f,c
   924  007D78  D7EE               	goto	l1124
   925  007D7A  C013  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
   926  007D7E  C014  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
   927  007D82  C015  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
   928  007D86  C012  F004         	movff	___ftmul@exp,___ftpack@exp
   929  007D8A  C017  F005         	movff	___ftmul@sign,___ftpack@sign
   930  007D8E  EC8C  F03D         	call	___ftpack	;wreg free
   931  007D92  C001  F009         	movff	?___ftpack,?___ftmul
   932  007D96  C002  F00A         	movff	?___ftpack+1,?___ftmul+1
   933  007D9A  C003  F00B         	movff	?___ftpack+2,?___ftmul+2
   934  007D9E  0012               	return	
   935  007DA0                     __end_of___ftmul:
   936                           	opt stack 0
   937                           tblptru	equ	0xFF8
   938                           tblptrh	equ	0xFF7
   939                           tblptrl	equ	0xFF6
   940                           tablat	equ	0xFF5
   941                           postinc0	equ	0xFEE
   942                           wreg	equ	0xFE8
   943                           postdec1	equ	0xFE5
   944                           fsr1l	equ	0xFE1
   945                           indf2	equ	0xFDF
   946                           fsr2h	equ	0xFDA
   947                           fsr2l	equ	0xFD9
   948                           status	equ	0xFD8
   949                           
   950 ;; *************** function ___ftdiv *****************
   951 ;; Defined at:
   952 ;;		line 54 in file "D:\mplab\sources\common\ftdiv.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;  f1              3   23[COMRAM] float 
   955 ;;  f2              3   26[COMRAM] float 
   956 ;; Auto vars:     Size  Location     Type
   957 ;;  f3              3   33[COMRAM] float 
   958 ;;  sign            1   37[COMRAM] unsigned char 
   959 ;;  exp             1   36[COMRAM] unsigned char 
   960 ;;  cntr            1   32[COMRAM] unsigned char 
   961 ;; Return value:  Size  Location     Type
   962 ;;                  3   23[COMRAM] float 
   963 ;; Registers used:
   964 ;;		wreg, status,2, status,0, cstack
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   970 ;;      Params:         6       0       0       0       0       0       0       0       0
   971 ;;      Locals:         6       0       0       0       0       0       0       0       0
   972 ;;      Temps:          3       0       0       0       0       0       0       0       0
   973 ;;      Totals:        15       0       0       0       0       0       0       0       0
   974 ;;Total ram usage:       15 bytes
   975 ;; Hardware stack levels used:    1
   976 ;; Hardware stack levels required when called:    1
   977 ;; This function calls:
   978 ;;		___ftpack
   979 ;; This function is called by:
   980 ;;		_main
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           	psect	text3
   985  007BC6                     __ptext3:
   986                           	opt stack 0
   987  007BC6                     ___ftdiv:
   988                           	opt stack 29
   989                           
   990                           ;incstack = 0
   991  007BC6  C01A  F01E         	movff	___ftdiv@f1+2,??___ftdiv
   992  007BCA  6A1F               	clrf	(??___ftdiv+1)& (0+255),c
   993  007BCC  6A20               	clrf	(??___ftdiv+2)& (0+255),c
   994  007BCE  3419               	rlcf	___ftdiv@f1+1,w,c
   995  007BD0  361E               	rlcf	??___ftdiv& (0+255),f,c
   996  007BD2  E301               	bnc	u661
   997  007BD4  801F               	bsf	(??___ftdiv+1)& (0+255),0,c
   998  007BD6                     u661:
   999  007BD6  501E               	movf	??___ftdiv,w,c
  1000  007BD8  6E25               	movwf	___ftdiv@exp,c
  1001  007BDA  5025               	movf	___ftdiv@exp,w,c
  1002  007BDC  A4D8               	btfss	status,2,c
  1003  007BDE  D007               	goto	l1048
  1004  007BE0  0E00               	movlw	0
  1005  007BE2  6E18               	movwf	?___ftdiv,c
  1006  007BE4  0E00               	movlw	0
  1007  007BE6  6E19               	movwf	?___ftdiv+1,c
  1008  007BE8  0E00               	movlw	0
  1009  007BEA  6E1A               	movwf	?___ftdiv+2,c
  1010  007BEC  0012               	return	
  1011  007BEE                     l1048:
  1012  007BEE  C01D  F01E         	movff	___ftdiv@f2+2,??___ftdiv
  1013  007BF2  6A1F               	clrf	(??___ftdiv+1)& (0+255),c
  1014  007BF4  6A20               	clrf	(??___ftdiv+2)& (0+255),c
  1015  007BF6  341C               	rlcf	___ftdiv@f2+1,w,c
  1016  007BF8  361E               	rlcf	??___ftdiv& (0+255),f,c
  1017  007BFA  E301               	bnc	u681
  1018  007BFC  801F               	bsf	(??___ftdiv+1)& (0+255),0,c
  1019  007BFE                     u681:
  1020  007BFE  501E               	movf	??___ftdiv,w,c
  1021  007C00  6E26               	movwf	___ftdiv@sign,c
  1022  007C02  5026               	movf	___ftdiv@sign,w,c
  1023  007C04  A4D8               	btfss	status,2,c
  1024  007C06  D007               	goto	l1054
  1025  007C08  0E00               	movlw	0
  1026  007C0A  6E18               	movwf	?___ftdiv,c
  1027  007C0C  0E00               	movlw	0
  1028  007C0E  6E19               	movwf	?___ftdiv+1,c
  1029  007C10  0E00               	movlw	0
  1030  007C12  6E1A               	movwf	?___ftdiv+2,c
  1031  007C14  0012               	return	
  1032  007C16                     l1054:
  1033  007C16  0E00               	movlw	0
  1034  007C18  6E22               	movwf	___ftdiv@f3,c
  1035  007C1A  0E00               	movlw	0
  1036  007C1C  6E23               	movwf	___ftdiv@f3+1,c
  1037  007C1E  0E00               	movlw	0
  1038  007C20  6E24               	movwf	___ftdiv@f3+2,c
  1039  007C22  5026               	movf	___ftdiv@sign,w,c
  1040  007C24  0F89               	addlw	137
  1041  007C26  5E25               	subwf	___ftdiv@exp,f,c
  1042  007C28  C01A  F026         	movff	___ftdiv@f1+2,___ftdiv@sign
  1043  007C2C  501D               	movf	___ftdiv@f2+2,w,c
  1044  007C2E  1A26               	xorwf	___ftdiv@sign,f,c
  1045  007C30  0E80               	movlw	128
  1046  007C32  1626               	andwf	___ftdiv@sign,f,c
  1047  007C34  8E19               	bsf	___ftdiv@f1+1,7,c
  1048  007C36  0EFF               	movlw	255
  1049  007C38  1618               	andwf	___ftdiv@f1,f,c
  1050  007C3A  0EFF               	movlw	255
  1051  007C3C  1619               	andwf	___ftdiv@f1+1,f,c
  1052  007C3E  0E00               	movlw	0
  1053  007C40  161A               	andwf	___ftdiv@f1+2,f,c
  1054  007C42  8E1C               	bsf	___ftdiv@f2+1,7,c
  1055  007C44  0EFF               	movlw	255
  1056  007C46  161B               	andwf	___ftdiv@f2,f,c
  1057  007C48  0EFF               	movlw	255
  1058  007C4A  161C               	andwf	___ftdiv@f2+1,f,c
  1059  007C4C  0E00               	movlw	0
  1060  007C4E  161D               	andwf	___ftdiv@f2+2,f,c
  1061  007C50  0E18               	movlw	24
  1062  007C52  6E21               	movwf	___ftdiv@cntr,c
  1063  007C54                     l1074:
  1064  007C54  90D8               	bcf	status,0,c
  1065  007C56  3622               	rlcf	___ftdiv@f3,f,c
  1066  007C58  3623               	rlcf	___ftdiv@f3+1,f,c
  1067  007C5A  3624               	rlcf	___ftdiv@f3+2,f,c
  1068  007C5C  501B               	movf	___ftdiv@f2,w,c
  1069  007C5E  5C18               	subwf	___ftdiv@f1,w,c
  1070  007C60  501C               	movf	___ftdiv@f2+1,w,c
  1071  007C62  5819               	subwfb	___ftdiv@f1+1,w,c
  1072  007C64  501D               	movf	___ftdiv@f2+2,w,c
  1073  007C66  581A               	subwfb	___ftdiv@f1+2,w,c
  1074  007C68  A0D8               	btfss	status,0,c
  1075  007C6A  D007               	goto	l349
  1076  007C6C  501B               	movf	___ftdiv@f2,w,c
  1077  007C6E  5E18               	subwf	___ftdiv@f1,f,c
  1078  007C70  501C               	movf	___ftdiv@f2+1,w,c
  1079  007C72  5A19               	subwfb	___ftdiv@f1+1,f,c
  1080  007C74  501D               	movf	___ftdiv@f2+2,w,c
  1081  007C76  5A1A               	subwfb	___ftdiv@f1+2,f,c
  1082  007C78  8022               	bsf	___ftdiv@f3,0,c
  1083  007C7A                     l349:
  1084  007C7A  90D8               	bcf	status,0,c
  1085  007C7C  3618               	rlcf	___ftdiv@f1,f,c
  1086  007C7E  3619               	rlcf	___ftdiv@f1+1,f,c
  1087  007C80  361A               	rlcf	___ftdiv@f1+2,f,c
  1088  007C82  2E21               	decfsz	___ftdiv@cntr,f,c
  1089  007C84  D7E7               	goto	l1074
  1090  007C86  C022  F001         	movff	___ftdiv@f3,___ftpack@arg
  1091  007C8A  C023  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  1092  007C8E  C024  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  1093  007C92  C025  F004         	movff	___ftdiv@exp,___ftpack@exp
  1094  007C96  C026  F005         	movff	___ftdiv@sign,___ftpack@sign
  1095  007C9A  EC8C  F03D         	call	___ftpack	;wreg free
  1096  007C9E  C001  F018         	movff	?___ftpack,?___ftdiv
  1097  007CA2  C002  F019         	movff	?___ftpack+1,?___ftdiv+1
  1098  007CA6  C003  F01A         	movff	?___ftpack+2,?___ftdiv+2
  1099  007CAA  0012               	return	
  1100  007CAC                     __end_of___ftdiv:
  1101                           	opt stack 0
  1102                           tblptru	equ	0xFF8
  1103                           tblptrh	equ	0xFF7
  1104                           tblptrl	equ	0xFF6
  1105                           tablat	equ	0xFF5
  1106                           postinc0	equ	0xFEE
  1107                           wreg	equ	0xFE8
  1108                           postdec1	equ	0xFE5
  1109                           fsr1l	equ	0xFE1
  1110                           indf2	equ	0xFDF
  1111                           fsr2h	equ	0xFDA
  1112                           fsr2l	equ	0xFD9
  1113                           status	equ	0xFD8
  1114                           
  1115 ;; *************** function ___awtoft *****************
  1116 ;; Defined at:
  1117 ;;		line 32 in file "D:\mplab\sources\common\awtoft.c"
  1118 ;; Parameters:    Size  Location     Type
  1119 ;;  c               2    8[COMRAM] int 
  1120 ;; Auto vars:     Size  Location     Type
  1121 ;;  sign            1   11[COMRAM] unsigned char 
  1122 ;; Return value:  Size  Location     Type
  1123 ;;                  3    8[COMRAM] float 
  1124 ;; Registers used:
  1125 ;;		wreg, status,2, status,0, cstack
  1126 ;; Tracked objects:
  1127 ;;		On entry : 0/0
  1128 ;;		On exit  : 0/0
  1129 ;;		Unchanged: 0/0
  1130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1131 ;;      Params:         3       0       0       0       0       0       0       0       0
  1132 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1133 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1134 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1135 ;;Total ram usage:        4 bytes
  1136 ;; Hardware stack levels used:    1
  1137 ;; Hardware stack levels required when called:    1
  1138 ;; This function calls:
  1139 ;;		___ftpack
  1140 ;; This function is called by:
  1141 ;;		_main
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145                           	psect	text4
  1146  007972                     __ptext4:
  1147                           	opt stack 0
  1148  007972                     ___awtoft:
  1149                           	opt stack 29
  1150                           
  1151                           ;incstack = 0
  1152  007972  0E00               	movlw	0
  1153  007974  6E0C               	movwf	___awtoft@sign,c
  1154  007976  AE0A               	btfss	___awtoft@c+1,7,c
  1155  007978  D006               	goto	l1224
  1156  00797A  6C09               	negf	___awtoft@c,c
  1157  00797C  1E0A               	comf	___awtoft@c+1,f,c
  1158  00797E  B0D8               	btfsc	status,0,c
  1159  007980  2A0A               	incf	___awtoft@c+1,f,c
  1160  007982  0E01               	movlw	1
  1161  007984  6E0C               	movwf	___awtoft@sign,c
  1162  007986                     l1224:
  1163  007986  C009  F001         	movff	___awtoft@c,___ftpack@arg
  1164  00798A  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  1165  00798E  6A03               	clrf	___ftpack@arg+2,c
  1166  007990  0E8E               	movlw	142
  1167  007992  6E04               	movwf	___ftpack@exp,c
  1168  007994  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  1169  007998  EC8C  F03D         	call	___ftpack	;wreg free
  1170  00799C  C001  F009         	movff	?___ftpack,?___awtoft
  1171  0079A0  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  1172  0079A4  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  1173  0079A8  0012               	return	
  1174  0079AA                     __end_of___awtoft:
  1175                           	opt stack 0
  1176                           tblptru	equ	0xFF8
  1177                           tblptrh	equ	0xFF7
  1178                           tblptrl	equ	0xFF6
  1179                           tablat	equ	0xFF5
  1180                           postinc0	equ	0xFEE
  1181                           wreg	equ	0xFE8
  1182                           postdec1	equ	0xFE5
  1183                           fsr1l	equ	0xFE1
  1184                           indf2	equ	0xFDF
  1185                           fsr2h	equ	0xFDA
  1186                           fsr2l	equ	0xFD9
  1187                           status	equ	0xFD8
  1188                           
  1189 ;; *************** function ___ftpack *****************
  1190 ;; Defined at:
  1191 ;;		line 62 in file "D:\mplab\sources\common\float.c"
  1192 ;; Parameters:    Size  Location     Type
  1193 ;;  arg             3    0[COMRAM] unsigned um
  1194 ;;  exp             1    3[COMRAM] unsigned char 
  1195 ;;  sign            1    4[COMRAM] unsigned char 
  1196 ;; Auto vars:     Size  Location     Type
  1197 ;;		None
  1198 ;; Return value:  Size  Location     Type
  1199 ;;                  3    0[COMRAM] float 
  1200 ;; Registers used:
  1201 ;;		wreg, status,2, status,0
  1202 ;; Tracked objects:
  1203 ;;		On entry : 0/0
  1204 ;;		On exit  : 0/0
  1205 ;;		Unchanged: 0/0
  1206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1207 ;;      Params:         5       0       0       0       0       0       0       0       0
  1208 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1209 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1210 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1211 ;;Total ram usage:        8 bytes
  1212 ;; Hardware stack levels used:    1
  1213 ;; This function calls:
  1214 ;;		Nothing
  1215 ;; This function is called by:
  1216 ;;		___awtoft
  1217 ;;		___ftdiv
  1218 ;;		___ftmul
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221                           
  1222                           	psect	text5
  1223  007B18                     __ptext5:
  1224                           	opt stack 0
  1225  007B18                     ___ftpack:
  1226                           	opt stack 29
  1227                           
  1228                           ;incstack = 0
  1229  007B18  5004               	movf	___ftpack@exp,w,c
  1230  007B1A  B4D8               	btfsc	status,2,c
  1231  007B1C  D005               	goto	l998
  1232  007B1E  5001               	movf	___ftpack@arg,w,c
  1233  007B20  1002               	iorwf	___ftpack@arg+1,w,c
  1234  007B22  1003               	iorwf	___ftpack@arg+2,w,c
  1235  007B24  A4D8               	btfss	status,2,c
  1236  007B26  D00C               	goto	l1004
  1237  007B28                     l998:
  1238  007B28  0E00               	movlw	0
  1239  007B2A  6E01               	movwf	?___ftpack,c
  1240  007B2C  0E00               	movlw	0
  1241  007B2E  6E02               	movwf	?___ftpack+1,c
  1242  007B30  0E00               	movlw	0
  1243  007B32  6E03               	movwf	?___ftpack+2,c
  1244  007B34  0012               	return	
  1245  007B36                     l1002:
  1246  007B36  2A04               	incf	___ftpack@exp,f,c
  1247  007B38  90D8               	bcf	status,0,c
  1248  007B3A  3203               	rrcf	___ftpack@arg+2,f,c
  1249  007B3C  3202               	rrcf	___ftpack@arg+1,f,c
  1250  007B3E  3201               	rrcf	___ftpack@arg,f,c
  1251  007B40                     l1004:
  1252  007B40  0E00               	movlw	0
  1253  007B42  1401               	andwf	___ftpack@arg,w,c
  1254  007B44  6E06               	movwf	??___ftpack& (0+255),c
  1255  007B46  0E00               	movlw	0
  1256  007B48  1402               	andwf	___ftpack@arg+1,w,c
  1257  007B4A  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1258  007B4C  0EFE               	movlw	254
  1259  007B4E  1403               	andwf	___ftpack@arg+2,w,c
  1260  007B50  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1261  007B52  5006               	movf	??___ftpack,w,c
  1262  007B54  1007               	iorwf	??___ftpack+1,w,c
  1263  007B56  1008               	iorwf	??___ftpack+2,w,c
  1264  007B58  B4D8               	btfsc	status,2,c
  1265  007B5A  D00C               	goto	l1010
  1266  007B5C  D7EC               	goto	l1002
  1267  007B5E                     l1006:
  1268  007B5E  2A04               	incf	___ftpack@exp,f,c
  1269  007B60  0E01               	movlw	1
  1270  007B62  2601               	addwf	___ftpack@arg,f,c
  1271  007B64  0E00               	movlw	0
  1272  007B66  2202               	addwfc	___ftpack@arg+1,f,c
  1273  007B68  0E00               	movlw	0
  1274  007B6A  2203               	addwfc	___ftpack@arg+2,f,c
  1275  007B6C  90D8               	bcf	status,0,c
  1276  007B6E  3203               	rrcf	___ftpack@arg+2,f,c
  1277  007B70  3202               	rrcf	___ftpack@arg+1,f,c
  1278  007B72  3201               	rrcf	___ftpack@arg,f,c
  1279  007B74                     l1010:
  1280  007B74  0E00               	movlw	0
  1281  007B76  1401               	andwf	___ftpack@arg,w,c
  1282  007B78  6E06               	movwf	??___ftpack& (0+255),c
  1283  007B7A  0E00               	movlw	0
  1284  007B7C  1402               	andwf	___ftpack@arg+1,w,c
  1285  007B7E  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1286  007B80  0EFF               	movlw	255
  1287  007B82  1403               	andwf	___ftpack@arg+2,w,c
  1288  007B84  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1289  007B86  5006               	movf	??___ftpack,w,c
  1290  007B88  1007               	iorwf	??___ftpack+1,w,c
  1291  007B8A  1008               	iorwf	??___ftpack+2,w,c
  1292  007B8C  B4D8               	btfsc	status,2,c
  1293  007B8E  D006               	goto	l1014
  1294  007B90  D7E6               	goto	l1006
  1295  007B92                     l1012:
  1296  007B92  0604               	decf	___ftpack@exp,f,c
  1297  007B94  90D8               	bcf	status,0,c
  1298  007B96  3601               	rlcf	___ftpack@arg,f,c
  1299  007B98  3602               	rlcf	___ftpack@arg+1,f,c
  1300  007B9A  3603               	rlcf	___ftpack@arg+2,f,c
  1301  007B9C                     l1014:
  1302  007B9C  BE02               	btfsc	___ftpack@arg+1,7,c
  1303  007B9E  D003               	goto	l291
  1304  007BA0  0E02               	movlw	2
  1305  007BA2  6004               	cpfslt	___ftpack@exp,c
  1306  007BA4  D7F6               	goto	l1012
  1307  007BA6                     l291:
  1308  007BA6  A004               	btfss	___ftpack@exp,0,c
  1309  007BA8  9E02               	bcf	___ftpack@arg+1,7,c
  1310  007BAA  90D8               	bcf	status,0,c
  1311  007BAC  3204               	rrcf	___ftpack@exp,f,c
  1312  007BAE  5004               	movf	___ftpack@exp,w,c
  1313  007BB0  1203               	iorwf	___ftpack@arg+2,f,c
  1314  007BB2  5005               	movf	___ftpack@sign,w,c
  1315  007BB4  A4D8               	btfss	status,2,c
  1316  007BB6  8E03               	bsf	___ftpack@arg+2,7,c
  1317  007BB8  C001  F001         	movff	___ftpack@arg,?___ftpack
  1318  007BBC  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  1319  007BC0  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  1320  007BC4  0012               	return	
  1321  007BC6                     __end_of___ftpack:
  1322                           	opt stack 0
  1323                           tblptru	equ	0xFF8
  1324                           tblptrh	equ	0xFF7
  1325                           tblptrl	equ	0xFF6
  1326                           tablat	equ	0xFF5
  1327                           postinc0	equ	0xFEE
  1328                           wreg	equ	0xFE8
  1329                           postdec1	equ	0xFE5
  1330                           fsr1l	equ	0xFE1
  1331                           indf2	equ	0xFDF
  1332                           fsr2h	equ	0xFDA
  1333                           fsr2l	equ	0xFD9
  1334                           status	equ	0xFD8
  1335                           
  1336 ;; *************** function ___awmod *****************
  1337 ;; Defined at:
  1338 ;;		line 8 in file "D:\mplab\sources\common\awmod.c"
  1339 ;; Parameters:    Size  Location     Type
  1340 ;;  dividend        2    0[COMRAM] int 
  1341 ;;  divisor         2    2[COMRAM] int 
  1342 ;; Auto vars:     Size  Location     Type
  1343 ;;  sign            1    5[COMRAM] unsigned char 
  1344 ;;  counter         1    4[COMRAM] unsigned char 
  1345 ;; Return value:  Size  Location     Type
  1346 ;;                  2    0[COMRAM] int 
  1347 ;; Registers used:
  1348 ;;		wreg, status,2, status,0
  1349 ;; Tracked objects:
  1350 ;;		On entry : 0/0
  1351 ;;		On exit  : 0/0
  1352 ;;		Unchanged: 0/0
  1353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1354 ;;      Params:         4       0       0       0       0       0       0       0       0
  1355 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1356 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1357 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1358 ;;Total ram usage:        6 bytes
  1359 ;; Hardware stack levels used:    1
  1360 ;; This function calls:
  1361 ;;		Nothing
  1362 ;; This function is called by:
  1363 ;;		_main
  1364 ;; This function uses a non-reentrant model
  1365 ;;
  1366                           
  1367                           	psect	text6
  1368  0079AA                     __ptext6:
  1369                           	opt stack 0
  1370  0079AA                     ___awmod:
  1371                           	opt stack 30
  1372                           
  1373                           ;incstack = 0
  1374  0079AA  0E00               	movlw	0
  1375  0079AC  6E06               	movwf	___awmod@sign,c
  1376  0079AE  AE02               	btfss	___awmod@dividend+1,7,c
  1377  0079B0  D006               	goto	l1188
  1378  0079B2  6C01               	negf	___awmod@dividend,c
  1379  0079B4  1E02               	comf	___awmod@dividend+1,f,c
  1380  0079B6  B0D8               	btfsc	status,0,c
  1381  0079B8  2A02               	incf	___awmod@dividend+1,f,c
  1382  0079BA  0E01               	movlw	1
  1383  0079BC  6E06               	movwf	___awmod@sign,c
  1384  0079BE                     l1188:
  1385  0079BE  AE04               	btfss	___awmod@divisor+1,7,c
  1386  0079C0  D004               	goto	l1192
  1387  0079C2  6C03               	negf	___awmod@divisor,c
  1388  0079C4  1E04               	comf	___awmod@divisor+1,f,c
  1389  0079C6  B0D8               	btfsc	status,0,c
  1390  0079C8  2A04               	incf	___awmod@divisor+1,f,c
  1391  0079CA                     l1192:
  1392  0079CA  5003               	movf	___awmod@divisor,w,c
  1393  0079CC  1004               	iorwf	___awmod@divisor+1,w,c
  1394  0079CE  B4D8               	btfsc	status,2,c
  1395  0079D0  D018               	goto	l1208
  1396  0079D2  0E01               	movlw	1
  1397  0079D4  6E05               	movwf	___awmod@counter,c
  1398  0079D6  D004               	goto	l1198
  1399  0079D8                     l1196:
  1400  0079D8  90D8               	bcf	status,0,c
  1401  0079DA  3603               	rlcf	___awmod@divisor,f,c
  1402  0079DC  3604               	rlcf	___awmod@divisor+1,f,c
  1403  0079DE  2A05               	incf	___awmod@counter,f,c
  1404  0079E0                     l1198:
  1405  0079E0  AE04               	btfss	___awmod@divisor+1,7,c
  1406  0079E2  D7FA               	goto	l1196
  1407  0079E4                     l1200:
  1408  0079E4  5003               	movf	___awmod@divisor,w,c
  1409  0079E6  5C01               	subwf	___awmod@dividend,w,c
  1410  0079E8  5004               	movf	___awmod@divisor+1,w,c
  1411  0079EA  5802               	subwfb	___awmod@dividend+1,w,c
  1412  0079EC  A0D8               	btfss	status,0,c
  1413  0079EE  D004               	goto	l1204
  1414  0079F0  5003               	movf	___awmod@divisor,w,c
  1415  0079F2  5E01               	subwf	___awmod@dividend,f,c
  1416  0079F4  5004               	movf	___awmod@divisor+1,w,c
  1417  0079F6  5A02               	subwfb	___awmod@dividend+1,f,c
  1418  0079F8                     l1204:
  1419  0079F8  90D8               	bcf	status,0,c
  1420  0079FA  3204               	rrcf	___awmod@divisor+1,f,c
  1421  0079FC  3203               	rrcf	___awmod@divisor,f,c
  1422  0079FE  2E05               	decfsz	___awmod@counter,f,c
  1423  007A00  D7F1               	goto	l1200
  1424  007A02                     l1208:
  1425  007A02  5006               	movf	___awmod@sign,w,c
  1426  007A04  B4D8               	btfsc	status,2,c
  1427  007A06  D004               	goto	l1212
  1428  007A08  6C01               	negf	___awmod@dividend,c
  1429  007A0A  1E02               	comf	___awmod@dividend+1,f,c
  1430  007A0C  B0D8               	btfsc	status,0,c
  1431  007A0E  2A02               	incf	___awmod@dividend+1,f,c
  1432  007A10                     l1212:
  1433  007A10  C001  F001         	movff	___awmod@dividend,?___awmod
  1434  007A14  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1435  007A18  0012               	return	
  1436  007A1A                     __end_of___awmod:
  1437                           	opt stack 0
  1438                           tblptru	equ	0xFF8
  1439                           tblptrh	equ	0xFF7
  1440                           tblptrl	equ	0xFF6
  1441                           tablat	equ	0xFF5
  1442                           postinc0	equ	0xFEE
  1443                           wreg	equ	0xFE8
  1444                           postdec1	equ	0xFE5
  1445                           fsr1l	equ	0xFE1
  1446                           indf2	equ	0xFDF
  1447                           fsr2h	equ	0xFDA
  1448                           fsr2l	equ	0xFD9
  1449                           status	equ	0xFD8
  1450                           
  1451 ;; *************** function ___awdiv *****************
  1452 ;; Defined at:
  1453 ;;		line 8 in file "D:\mplab\sources\common\awdiv.c"
  1454 ;; Parameters:    Size  Location     Type
  1455 ;;  dividend        2    6[COMRAM] int 
  1456 ;;  divisor         2    8[COMRAM] int 
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;  quotient        2   12[COMRAM] int 
  1459 ;;  sign            1   11[COMRAM] unsigned char 
  1460 ;;  counter         1   10[COMRAM] unsigned char 
  1461 ;; Return value:  Size  Location     Type
  1462 ;;                  2    6[COMRAM] int 
  1463 ;; Registers used:
  1464 ;;		wreg, status,2, status,0
  1465 ;; Tracked objects:
  1466 ;;		On entry : 0/0
  1467 ;;		On exit  : 0/0
  1468 ;;		Unchanged: 0/0
  1469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1470 ;;      Params:         4       0       0       0       0       0       0       0       0
  1471 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1472 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1473 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1474 ;;Total ram usage:        8 bytes
  1475 ;; Hardware stack levels used:    1
  1476 ;; This function calls:
  1477 ;;		Nothing
  1478 ;; This function is called by:
  1479 ;;		_main
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482                           
  1483                           	psect	text7
  1484  007A94                     __ptext7:
  1485                           	opt stack 0
  1486  007A94                     ___awdiv:
  1487                           	opt stack 30
  1488                           
  1489                           ;incstack = 0
  1490  007A94  0E00               	movlw	0
  1491  007A96  6E0C               	movwf	___awdiv@sign,c
  1492  007A98  AE0A               	btfss	___awdiv@divisor+1,7,c
  1493  007A9A  D006               	goto	l1144
  1494  007A9C  6C09               	negf	___awdiv@divisor,c
  1495  007A9E  1E0A               	comf	___awdiv@divisor+1,f,c
  1496  007AA0  B0D8               	btfsc	status,0,c
  1497  007AA2  2A0A               	incf	___awdiv@divisor+1,f,c
  1498  007AA4  0E01               	movlw	1
  1499  007AA6  6E0C               	movwf	___awdiv@sign,c
  1500  007AA8                     l1144:
  1501  007AA8  AE08               	btfss	___awdiv@dividend+1,7,c
  1502  007AAA  D006               	goto	l1150
  1503  007AAC  6C07               	negf	___awdiv@dividend,c
  1504  007AAE  1E08               	comf	___awdiv@dividend+1,f,c
  1505  007AB0  B0D8               	btfsc	status,0,c
  1506  007AB2  2A08               	incf	___awdiv@dividend+1,f,c
  1507  007AB4  0E01               	movlw	1
  1508  007AB6  1A0C               	xorwf	___awdiv@sign,f,c
  1509  007AB8                     l1150:
  1510  007AB8  0E00               	movlw	0
  1511  007ABA  6E0E               	movwf	___awdiv@quotient+1,c
  1512  007ABC  0E00               	movlw	0
  1513  007ABE  6E0D               	movwf	___awdiv@quotient,c
  1514  007AC0  5009               	movf	___awdiv@divisor,w,c
  1515  007AC2  100A               	iorwf	___awdiv@divisor+1,w,c
  1516  007AC4  B4D8               	btfsc	status,2,c
  1517  007AC6  D01C               	goto	l1172
  1518  007AC8  0E01               	movlw	1
  1519  007ACA  6E0B               	movwf	___awdiv@counter,c
  1520  007ACC  D004               	goto	l1158
  1521  007ACE                     l1156:
  1522  007ACE  90D8               	bcf	status,0,c
  1523  007AD0  3609               	rlcf	___awdiv@divisor,f,c
  1524  007AD2  360A               	rlcf	___awdiv@divisor+1,f,c
  1525  007AD4  2A0B               	incf	___awdiv@counter,f,c
  1526  007AD6                     l1158:
  1527  007AD6  AE0A               	btfss	___awdiv@divisor+1,7,c
  1528  007AD8  D7FA               	goto	l1156
  1529  007ADA                     l1160:
  1530  007ADA  90D8               	bcf	status,0,c
  1531  007ADC  360D               	rlcf	___awdiv@quotient,f,c
  1532  007ADE  360E               	rlcf	___awdiv@quotient+1,f,c
  1533  007AE0  5009               	movf	___awdiv@divisor,w,c
  1534  007AE2  5C07               	subwf	___awdiv@dividend,w,c
  1535  007AE4  500A               	movf	___awdiv@divisor+1,w,c
  1536  007AE6  5808               	subwfb	___awdiv@dividend+1,w,c
  1537  007AE8  A0D8               	btfss	status,0,c
  1538  007AEA  D005               	goto	l1168
  1539  007AEC  5009               	movf	___awdiv@divisor,w,c
  1540  007AEE  5E07               	subwf	___awdiv@dividend,f,c
  1541  007AF0  500A               	movf	___awdiv@divisor+1,w,c
  1542  007AF2  5A08               	subwfb	___awdiv@dividend+1,f,c
  1543  007AF4  800D               	bsf	___awdiv@quotient,0,c
  1544  007AF6                     l1168:
  1545  007AF6  90D8               	bcf	status,0,c
  1546  007AF8  320A               	rrcf	___awdiv@divisor+1,f,c
  1547  007AFA  3209               	rrcf	___awdiv@divisor,f,c
  1548  007AFC  2E0B               	decfsz	___awdiv@counter,f,c
  1549  007AFE  D7ED               	goto	l1160
  1550  007B00                     l1172:
  1551  007B00  500C               	movf	___awdiv@sign,w,c
  1552  007B02  B4D8               	btfsc	status,2,c
  1553  007B04  D004               	goto	l1176
  1554  007B06  6C0D               	negf	___awdiv@quotient,c
  1555  007B08  1E0E               	comf	___awdiv@quotient+1,f,c
  1556  007B0A  B0D8               	btfsc	status,0,c
  1557  007B0C  2A0E               	incf	___awdiv@quotient+1,f,c
  1558  007B0E                     l1176:
  1559  007B0E  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  1560  007B12  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  1561  007B16  0012               	return	
  1562  007B18                     __end_of___awdiv:
  1563                           	opt stack 0
  1564                           tblptru	equ	0xFF8
  1565                           tblptrh	equ	0xFF7
  1566                           tblptrl	equ	0xFF6
  1567                           tablat	equ	0xFF5
  1568                           postinc0	equ	0xFEE
  1569                           wreg	equ	0xFE8
  1570                           postdec1	equ	0xFE5
  1571                           fsr1l	equ	0xFE1
  1572                           indf2	equ	0xFDF
  1573                           fsr2h	equ	0xFDA
  1574                           fsr2l	equ	0xFD9
  1575                           status	equ	0xFD8
  1576                           
  1577 ;; *************** function _ADC_Read *****************
  1578 ;; Defined at:
  1579 ;;		line 13 in file "adc_header.c"
  1580 ;; Parameters:    Size  Location     Type
  1581 ;;  channel         2    0[COMRAM] int 
  1582 ;; Auto vars:     Size  Location     Type
  1583 ;;  digital         2    6[COMRAM] int 
  1584 ;; Return value:  Size  Location     Type
  1585 ;;                  2    0[COMRAM] int 
  1586 ;; Registers used:
  1587 ;;		wreg, status,2, status,0
  1588 ;; Tracked objects:
  1589 ;;		On entry : 0/0
  1590 ;;		On exit  : 0/0
  1591 ;;		Unchanged: 0/0
  1592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1593 ;;      Params:         2       0       0       0       0       0       0       0       0
  1594 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1595 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1596 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1597 ;;Total ram usage:        8 bytes
  1598 ;; Hardware stack levels used:    1
  1599 ;; This function calls:
  1600 ;;		Nothing
  1601 ;; This function is called by:
  1602 ;;		_main
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           
  1606                           	psect	text8
  1607  007A1A                     __ptext8:
  1608                           	opt stack 0
  1609  007A1A                     _ADC_Read:
  1610                           	opt stack 30
  1611                           
  1612                           ;adc_header.c: 15: int digital;
  1613                           ;adc_header.c: 18: ADCON0 =(ADCON0 & 0b11000011)|((channel<<2) & 0b00111100);
  1614                           
  1615                           ;incstack = 0
  1616  007A1A  C001  F003         	movff	ADC_Read@channel,??_ADC_Read
  1617  007A1E  90D8               	bcf	status,0,c
  1618  007A20  3603               	rlcf	??_ADC_Read,f,c
  1619  007A22  90D8               	bcf	status,0,c
  1620  007A24  3603               	rlcf	??_ADC_Read,f,c
  1621  007A26  0E3C               	movlw	60
  1622  007A28  1603               	andwf	??_ADC_Read,f,c
  1623  007A2A  50C2               	movf	4034,w,c	;volatile
  1624  007A2C  0BC3               	andlw	195
  1625  007A2E  1003               	iorwf	??_ADC_Read,w,c
  1626  007A30  6EC2               	movwf	4034,c	;volatile
  1627                           
  1628                           ;adc_header.c: 20: ADCON0 |= ((1<<ADON)|(1<<GO));
  1629  007A32  A2C2               	btfss	4034,1,c	;volatile
  1630  007A34  D003               	goto	u590
  1631  007A36  6A03               	clrf	??_ADC_Read& (0+255),c
  1632  007A38  2A03               	incf	??_ADC_Read& (0+255),f,c
  1633  007A3A  D001               	goto	u608
  1634  007A3C                     u590:
  1635  007A3C  6A03               	clrf	??_ADC_Read& (0+255),c
  1636  007A3E                     u608:
  1637  007A3E  0E01               	movlw	1
  1638  007A40  6E04               	movwf	(??_ADC_Read+1)& (0+255),c
  1639  007A42  2A03               	incf	??_ADC_Read,f,c
  1640  007A44  D002               	goto	u614
  1641  007A46                     u615:
  1642  007A46  90D8               	bcf	status,0,c
  1643  007A48  3604               	rlcf	??_ADC_Read+1,f,c
  1644  007A4A                     u614:
  1645  007A4A  2E03               	decfsz	??_ADC_Read,f,c
  1646  007A4C  D7FC               	goto	u615
  1647  007A4E  A0C2               	btfss	4034,0,c	;volatile
  1648  007A50  D003               	goto	u620
  1649  007A52  6A05               	clrf	(??_ADC_Read+2)& (0+255),c
  1650  007A54  2A05               	incf	(??_ADC_Read+2)& (0+255),f,c
  1651  007A56  D001               	goto	u638
  1652  007A58                     u620:
  1653  007A58  6A05               	clrf	(??_ADC_Read+2)& (0+255),c
  1654  007A5A                     u638:
  1655  007A5A  0E01               	movlw	1
  1656  007A5C  6E06               	movwf	(??_ADC_Read+3)& (0+255),c
  1657  007A5E  2A05               	incf	??_ADC_Read+2,f,c
  1658  007A60  D002               	goto	u644
  1659  007A62                     u645:
  1660  007A62  90D8               	bcf	status,0,c
  1661  007A64  3606               	rlcf	??_ADC_Read+3,f,c
  1662  007A66                     u644:
  1663  007A66  2E05               	decfsz	??_ADC_Read+2,f,c
  1664  007A68  D7FC               	goto	u645
  1665  007A6A  5006               	movf	??_ADC_Read+3,w,c
  1666  007A6C  1004               	iorwf	??_ADC_Read+1,w,c
  1667  007A6E  12C2               	iorwf	4034,f,c	;volatile
  1668  007A70                     l63:
  1669  007A70  B2C2               	btfsc	4034,1,c	;volatile
  1670  007A72  D7FE               	goto	l63
  1671                           
  1672                           ;adc_header.c: 25: digital = (ADRESH*256) | (ADRESL);
  1673  007A74  50C3               	movf	4035,w,c	;volatile
  1674  007A76  CFC4 F003          	movff	4036,??_ADC_Read	;volatile
  1675  007A7A  6A04               	clrf	(??_ADC_Read+1)& (0+255),c
  1676  007A7C  C003  F004         	movff	??_ADC_Read,??_ADC_Read+1
  1677  007A80  6A03               	clrf	??_ADC_Read,c
  1678  007A82  1003               	iorwf	??_ADC_Read,w,c
  1679  007A84  6E07               	movwf	ADC_Read@digital,c
  1680  007A86  5004               	movf	??_ADC_Read+1,w,c
  1681  007A88  6E08               	movwf	ADC_Read@digital+1,c
  1682                           
  1683                           ;adc_header.c: 26: return(digital);
  1684  007A8A  C007  F001         	movff	ADC_Read@digital,?_ADC_Read
  1685  007A8E  C008  F002         	movff	ADC_Read@digital+1,?_ADC_Read+1
  1686  007A92  0012               	return	
  1687  007A94                     __end_of_ADC_Read:
  1688                           	opt stack 0
  1689                           tblptru	equ	0xFF8
  1690                           tblptrh	equ	0xFF7
  1691                           tblptrl	equ	0xFF6
  1692                           tablat	equ	0xFF5
  1693                           postinc0	equ	0xFEE
  1694                           wreg	equ	0xFE8
  1695                           postdec1	equ	0xFE5
  1696                           fsr1l	equ	0xFE1
  1697                           indf2	equ	0xFDF
  1698                           fsr2h	equ	0xFDA
  1699                           fsr2l	equ	0xFD9
  1700                           status	equ	0xFD8
  1701                           
  1702 ;; *************** function _ADC_Init *****************
  1703 ;; Defined at:
  1704 ;;		line 4 in file "adc_header.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;		None
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;		None
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  1    wreg      void 
  1711 ;; Registers used:
  1712 ;;		wreg, status,2
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1718 ;;      Params:         0       0       0       0       0       0       0       0       0
  1719 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1720 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1721 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1722 ;;Total ram usage:        0 bytes
  1723 ;; Hardware stack levels used:    1
  1724 ;; This function calls:
  1725 ;;		Nothing
  1726 ;; This function is called by:
  1727 ;;		_main
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730                           
  1731                           	psect	text9
  1732  007938                     __ptext9:
  1733                           	opt stack 0
  1734  007938                     _ADC_Init:
  1735                           	opt stack 30
  1736                           
  1737                           ;adc_header.c: 6: TRISA = 0xFF;
  1738                           
  1739                           ;incstack = 0
  1740  007938  6892               	setf	3986,c	;volatile
  1741                           
  1742                           ;adc_header.c: 7: ADCON1 = 0x0E;
  1743  00793A  0E0E               	movlw	14
  1744  00793C  6EC1               	movwf	4033,c	;volatile
  1745                           
  1746                           ;adc_header.c: 8: ADCON2 = 0x92;
  1747  00793E  0E92               	movlw	146
  1748  007940  6EC0               	movwf	4032,c	;volatile
  1749                           
  1750                           ;adc_header.c: 9: ADRESH=0;
  1751  007942  0E00               	movlw	0
  1752  007944  6EC4               	movwf	4036,c	;volatile
  1753                           
  1754                           ;adc_header.c: 10: ADRESL=0;
  1755  007946  0E00               	movlw	0
  1756  007948  6EC3               	movwf	4035,c	;volatile
  1757  00794A  0012               	return		;funcret
  1758  00794C                     __end_of_ADC_Init:
  1759                           	opt stack 0
  1760  0000                     tblptru	equ	0xFF8
  1761                           tblptrh	equ	0xFF7
  1762                           tblptrl	equ	0xFF6
  1763                           tablat	equ	0xFF5
  1764                           postinc0	equ	0xFEE
  1765                           wreg	equ	0xFE8
  1766                           postdec1	equ	0xFE5
  1767                           fsr1l	equ	0xFE1
  1768                           indf2	equ	0xFDF
  1769                           fsr2h	equ	0xFDA
  1770                           fsr2l	equ	0xFD9
  1771                           status	equ	0xFD8
  1772                           tblptru	equ	0xFF8
  1773                           tblptrh	equ	0xFF7
  1774                           tblptrl	equ	0xFF6
  1775                           tablat	equ	0xFF5
  1776                           postinc0	equ	0xFEE
  1777                           wreg	equ	0xFE8
  1778                           postdec1	equ	0xFE5
  1779                           fsr1l	equ	0xFE1
  1780                           indf2	equ	0xFDF
  1781                           fsr2h	equ	0xFDA
  1782                           fsr2l	equ	0xFD9
  1783                           status	equ	0xFD8
  1784                           
  1785                           	psect	rparam
  1786  0000                     tblptru	equ	0xFF8
  1787                           tblptrh	equ	0xFF7
  1788                           tblptrl	equ	0xFF6
  1789                           tablat	equ	0xFF5
  1790                           postinc0	equ	0xFEE
  1791                           wreg	equ	0xFE8
  1792                           postdec1	equ	0xFE5
  1793                           fsr1l	equ	0xFE1
  1794                           indf2	equ	0xFDF
  1795                           fsr2h	equ	0xFDA
  1796                           fsr2l	equ	0xFD9
  1797                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        18
    BSS         0
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     44      68
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___ftdiv
    ___ftmul->___ftpack
    ___ftdiv->___ftmul
    ___awtoft->___ftpack
    ___awdiv->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    6546
                                             38 COMRAM     6     6      0
                           _ADC_Init
                           _ADC_Read
                            ___awdiv
                            ___awmod
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     295
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    1810
                                              8 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    1764
                                             23 COMRAM    15     9      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    1472
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1338
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     554
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     472
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             8     6      2      88
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   ___awdiv
     ___awmod (ARG)
   ___awmod
   ___awtoft
     ___ftpack
   ___ftdiv
     ___ftmul (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___ftmul
     ___ftpack
   ___fttol

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2C      44       1       71.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      44      20        0.0%
DATA                 0      0      44       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Feb 23 12:26:14 2022

                     l34 7FCC                       l63 7A70                       _GO 007E11  
           ___awdiv@sign 000C              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
                    l291 7BA6                      l349 7C7A                      l998 7B28  
           __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000                      u620 7A58  
                    u614 7A4A                      u615 7A46                      u711 7CBC  
                    u608 7A3E                      u731 7CE4                      u644 7A66  
                    u645 7A62                      u661 7BD6                      u901 7DB0  
                    u638 7A5A                      u590 7A3C                      u920 7DEA  
                    u681 7BFE                      u925 7DE2             __CFG_BOR$OFF 000000  
           ___awmod@sign 0006                      wreg 000FE8             __CFG_LVP$OFF 000000  
           ___ftdiv@cntr 0021             ___ftdiv@sign 0026             __CFG_WDT$OFF 000000  
                   l1010 7B74                     l1002 7B36                     l1012 7B92  
                   l1004 7B40                     l1100 7CFC                     l1014 7B9C  
                   l1006 7B5E                     l1200 79E4                     l1114 7D2E  
                   l1212 7A10                     l1204 79F8                     l1124 7D56  
                   l1150 7AB8                     l1054 7C16                     l1118 7D3E  
                   l1160 7ADA                     l1144 7AA8                     l1208 7A02  
                   l1224 7986                     l1048 7BEE                     l1128 7D66  
                   l1312 7FBC                     l1074 7C54                     l1234 7DCC  
                   l1322 7FE6                     l1156 7ACE                     l1172 7B00  
                   l1252 7E32                     l1158 7AD6                     l1094 7CD4  
                   l1270 7E82                     l1262 7E5A                     l1176 7B0E  
                   l1168 7AF6                     l1192 79CA                     l1264 7E66  
                   l1256 7E42                     l1266 7E6C                     l1196 79D8  
                   l1188 79BE                     l1198 79E0                     l1294 7EB8  
                   _ADON 007E10                     u1017 7FF0             __CFG_PWRT$ON 000000  
                   _lm35 0044                     _main 7E94             ___ftpack@arg 0001  
           ___ftpack@exp 0004                     _temp 003F                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9         __end_of_ADC_Init 794C  
       __end_of_ADC_Read 7A94                     start 0000            __CFG_IESO$OFF 000000  
           ___ftmul@cntr 0016             ___param_bank 000000             ___ftmul@sign 0017  
           ___fttol@exp1 000F             ___fttol@lval 000B            __CFG_PLLDIV$1 000000  
         __CFG_CCP2MX$ON 000000                    ?_main 0001          __end_of___awdiv 7B18  
        __end_of___awmod 7A1A          __end_of___ftdiv 7CAC          __end_of___ftmul 7DA0  
        ___awdiv@divisor 0009          __end_of___fttol 7E94          ___awdiv@counter 000B  
                  _SPBRG 000FAF            __CFG_USBDIV$1 000000                    _TRISA 000F92  
                  _TXREG 000FAD            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000            ___awtoft@sign 000C  
          ___ftpack@sign 0005                    main@i 002B                    tablat 000FF5  
                  status 000FD8           __CFG_ICPRT$OFF 000000           __CFG_MCLRE$OFF 000000  
        __initialization 794C             __end_of_main 8000                   ??_main 0027  
          ___fttol@sign1 000A            __activetblptr 000000                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   _ADRESH 000FC4  
                 _ADRESL 000FC3         ___awdiv@dividend 0007         __end_of___awtoft 79AA  
       __end_of___ftpack 7BC6           __CFG_XINST$OFF 000000                ??___awdiv 000B  
         __CFG_STVREN$ON 000000                ??___awmod 0005                ??___ftdiv 001E  
              ??___ftmul 000F                ??___fttol 0005          ADC_Read@channel 0001  
        ADC_Read@digital 0007         ___awdiv@quotient 000D          ___awmod@divisor 0003  
        ___awmod@counter 0005    ___ftmul@f3_as_product 0013             __pdataCOMRAM 002D  
              ?_ADC_Init 0001                ?_ADC_Read 0001                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 796C          __CFG_PBADEN$OFF 000000            ___rparam_used 000001  
             ___ftdiv@f1 0018               ___ftdiv@f2 001B               ___ftdiv@f3 0022  
             ___awtoft@c 0009               ___ftmul@f1 0009               ___ftmul@f2 000C  
             ___fttol@f1 0001           __pcstackCOMRAM 0001               ??_ADC_Init 0001  
             ??_ADC_Read 0003               __pnvCOMRAM 003F                ?___awtoft 0009  
              ?___ftpack 0001          __CFG_VREGEN$OFF 000000                  __Hparam 0000  
                __Lparam 0000                  ___awdiv 7A94                  ___awmod 79AA  
                ___ftdiv 7BC6                  ___ftmul 7CAC                  ___fttol 7DA0  
                __pcinit 794C               ??___awtoft 000C               ??___ftpack 0006  
                __ramtop 0800                  __ptext0 7E94                  __ptext1 7DA0  
                __ptext2 7CAC                  __ptext3 7BC6                  __ptext4 7972  
                __ptext5 7B18                  __ptext6 79AA                  __ptext7 7A94  
                __ptext8 7A1A                  __ptext9 7938         ___awmod@dividend 0001  
   end_of_initialization 796C                _RCSTAbits 000FAB                  postdec1 000FE5  
                postinc0 000FEE                _TRISCbits 000F94        __size_of_ADC_Init 0014  
      __size_of_ADC_Read 007A              ___ftdiv@exp 0025                _TXSTAbits 000FAC  
            ___ftmul@exp 0012              _BAUDCONbits 000FB8            __pidataCOMRAM 7926  
    start_initialization 794C         __CFG_LPT1OSC$OFF 000000        __size_of___awtoft 0038  
      __size_of___ftpack 00AE                 ?___awdiv 0007                 ?___awmod 0001  
               ?___ftdiv 0018                 ?___ftmul 0009                 ?___fttol 0001  
              _buffer_TX 002D                 _ADC_Init 7938                 _ADC_Read 7A1A  
       __CFG_WDTPS$32768 000000                _value_adc 0042               _ADCON0bits 000FC2  
              copy_data0 7960                 __Hrparam 0000                 __Lrparam 0000  
       __size_of___awdiv 0084         __size_of___awmod 0070         __size_of___ftdiv 00E6  
       __size_of___ftmul 00F4         __size_of___fttol 00F4                 ___awtoft 7972  
               ___ftpack 7B18    __CFG_FOSC$INTOSCIO_EC 000000                 _main$899 0029  
          __size_of_main 016C    __CFG_CPUDIV$OSC1_PLL2 000000               _OSCCONbits 000FD3  
