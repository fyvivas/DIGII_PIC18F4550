

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Sep 15 12:39:54 2021

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21  0000                     
    22                           ; Version 1.41
    23                           ; Generated 25/01/2017 GMT
    24                           ; 
    25                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F4550 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     
    57                           	psect	idataCOMRAM
    58  000A0A                     __pidataCOMRAM:
    59                           	opt stack 0
    60                           
    61                           ;initializer for _keypad
    62  000A0A  37                 	db	55
    63  000A0B  38                 	db	56
    64  000A0C  39                 	db	57
    65  000A0D  2F                 	db	47
    66  000A0E  34                 	db	52
    67  000A0F  35                 	db	53
    68  000A10  36                 	db	54
    69  000A11  2A                 	db	42
    70  000A12  31                 	db	49
    71  000A13  32                 	db	50
    72  000A14  33                 	db	51
    73  000A15  2D                 	db	45
    74  000A16  20                 	db	32
    75  000A17  30                 	db	48
    76  000A18  3D                 	db	61
    77  000A19  2B                 	db	43
    78                           
    79                           ;initializer for keypad_getkey@F3814
    80  000A1A  31                 	db	49
    81  000A1B  32                 	db	50
    82  000A1C  33                 	db	51
    83  000A1D  41                 	db	65
    84  000A1E  34                 	db	52
    85  000A1F  35                 	db	53
    86  000A20  36                 	db	54
    87  000A21  42                 	db	66
    88  000A22  37                 	db	55
    89  000A23  38                 	db	56
    90  000A24  39                 	db	57
    91  000A25  43                 	db	67
    92  000A26  2A                 	db	42
    93  000A27  30                 	db	48
    94  000A28  23                 	db	35
    95  000A29  44                 	db	68
    96                           
    97                           ;initializer for _var
    98  000A2A  30                 	db	48
    99                           
   100                           ;initializer for _key
   101  000A2B  30                 	db	48
   102  0000                     _TXREG	set	4013
   103  0000                     _SPBRG	set	4015
   104  0000                     _RCSTAbits	set	4011
   105  0000                     _BAUDCONbits	set	4024
   106  0000                     _TXSTAbits	set	4012
   107  0000                     _TRISCbits	set	3988
   108  0000                     _OSCCONbits	set	4051
   109  0000                     _PORTDbits	set	3971
   110  0000                     _LATDbits	set	3980
   111  0000                     _PORTD	set	3971
   112  0000                     _LATD	set	3980
   113  0000                     _INTCON2bits	set	4081
   114  0000                     _TRISD	set	3989
   115  0000                     _TRISB	set	3987
   116  0000                     _TRISC	set	3988
   117  0000                     _LATB	set	3978
   118  0000                     _LATC2	set	31834
   119  0000                     _LATC1	set	31833
   120  0000                     _LATC0	set	31832
   121                           
   122                           	psect	smallconst
   123  000800                     __psmallconst:
   124                           	opt stack 0
   125  000800  00                 	db	0
   126  000801                     STR_1:
   127  000801  4B                 	db	75	;'K'
   128  000802  45                 	db	69	;'E'
   129  000803  59                 	db	89	;'Y'
   130  000804  3A                 	db	58	;':'
   131  000805  20                 	db	32
   132  000806  70                 	db	112	;'p'
   133  000807  61                 	db	97	;'a'
   134  000808  73                 	db	115	;'s'
   135  000809  73                 	db	115	;'s'
   136  00080A  77                 	db	119	;'w'
   137  00080B  6F                 	db	111	;'o'
   138  00080C  72                 	db	114	;'r'
   139  00080D  64                 	db	100	;'d'
   140  00080E  00                 	db	0
   141  00080F                     STR_2:
   142  00080F  4B                 	db	75	;'K'
   143  000810  45                 	db	69	;'E'
   144  000811  59                 	db	89	;'Y'
   145  000812  3A                 	db	58	;':'
   146  000813  20                 	db	32
   147  000814  00                 	db	0
   148  000815                     STR_3:
   149  000815  20                 	db	32
   150  000816  54                 	db	84	;'T'
   151  000817  45                 	db	69	;'E'
   152  000818  00                 	db	0
   153                           
   154                           ; #config settings
   155  000819  00                 	db	0	; dummy byte at the end
   156  0000                     
   157                           	psect	cinit
   158  0009DA                     __pcinit:
   159                           	opt stack 0
   160  0009DA                     start_initialization:
   161                           	opt stack 0
   162  0009DA                     __initialization:
   163                           	opt stack 0
   164                           
   165                           ; Initialize objects allocated to COMRAM (34 bytes)
   166                           ; load TBLPTR registers with __pidataCOMRAM
   167  0009DA  0E0A               	movlw	low __pidataCOMRAM
   168  0009DC  6EF6               	movwf	tblptrl,c
   169  0009DE  0E0A               	movlw	high __pidataCOMRAM
   170  0009E0  6EF7               	movwf	tblptrh,c
   171  0009E2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   172  0009E4  6EF8               	movwf	tblptru,c
   173  0009E6  EE00  F001         	lfsr	0,__pdataCOMRAM
   174  0009EA  EE10 F022          	lfsr	1,34
   175  0009EE                     copy_data0:
   176  0009EE  0009               	tblrd		*+
   177  0009F0  CFF5 FFEE          	movff	tablat,postinc0
   178  0009F4  50E5               	movf	postdec1,w,c
   179  0009F6  50E1               	movf	fsr1l,w,c
   180  0009F8  E1FA               	bnz	copy_data0
   181                           
   182                           ; Clear objects allocated to COMRAM (3 bytes)
   183  0009FA  6A36               	clrf	(__pbssCOMRAM+2)& (0+255),c
   184  0009FC  6A35               	clrf	(__pbssCOMRAM+1)& (0+255),c
   185  0009FE  6A34               	clrf	__pbssCOMRAM& (0+255),c
   186  000A00                     end_of_initialization:
   187                           	opt stack 0
   188  000A00                     __end_of__initialization:
   189                           	opt stack 0
   190  000A00  0E00               	movlw	low (__Lmediumconst shr (0+16))
   191  000A02  6EF8               	movwf	tblptru,c
   192  000A04  0100               	movlb	0
   193  000A06  EF0D  F004         	goto	_main	;jump to C main() function
   194                           tblptru	equ	0xFF8
   195                           tblptrh	equ	0xFF7
   196                           tblptrl	equ	0xFF6
   197                           tablat	equ	0xFF5
   198                           postinc0	equ	0xFEE
   199                           postdec1	equ	0xFE5
   200                           fsr1l	equ	0xFE1
   201                           
   202                           	psect	bssCOMRAM
   203  000034                     __pbssCOMRAM:
   204                           	opt stack 0
   205  000034                     _temp_col:
   206                           	opt stack 0
   207  000034                     	ds	1
   208  000035                     _rowloc:
   209                           	opt stack 0
   210  000035                     	ds	1
   211  000036                     _col_loc:
   212                           	opt stack 0
   213  000036                     	ds	1
   214                           tblptru	equ	0xFF8
   215                           tblptrh	equ	0xFF7
   216                           tblptrl	equ	0xFF6
   217                           tablat	equ	0xFF5
   218                           postinc0	equ	0xFEE
   219                           postdec1	equ	0xFE5
   220                           fsr1l	equ	0xFE1
   221                           
   222                           	psect	dataCOMRAM
   223  000001                     __pdataCOMRAM:
   224                           	opt stack 0
   225  000001                     _keypad:
   226                           	opt stack 0
   227  000001                     	ds	16
   228  000011                     keypad_getkey@F3814:
   229                           	opt stack 0
   230  000011                     	ds	16
   231  000021                     _var:
   232                           	opt stack 0
   233  000021                     	ds	1
   234  000022                     _key:
   235                           	opt stack 0
   236  000022                     	ds	1
   237                           tblptru	equ	0xFF8
   238                           tblptrh	equ	0xFF7
   239                           tblptrl	equ	0xFF6
   240                           tablat	equ	0xFF5
   241                           postinc0	equ	0xFEE
   242                           postdec1	equ	0xFE5
   243                           fsr1l	equ	0xFE1
   244                           
   245                           	psect	cstackCOMRAM
   246  000023                     __pcstackCOMRAM:
   247                           	opt stack 0
   248  000023                     MSdelay@val:
   249                           	opt stack 0
   250                           
   251                           ; 2 bytes @ 0x0
   252  000023                     	ds	2
   253  000025                     MSdelay@i:
   254                           	opt stack 0
   255                           
   256                           ; 2 bytes @ 0x2
   257  000025                     	ds	2
   258  000027                     MSdelay@j:
   259                           	opt stack 0
   260                           
   261                           ; 2 bytes @ 0x4
   262  000027                     	ds	2
   263  000029                     LCD_Command@cmd:
   264                           	opt stack 0
   265  000029                     LCD_Char@char_data:
   266                           	opt stack 0
   267                           
   268                           ; 1 bytes @ 0x6
   269  000029                     	ds	1
   270  00002A                     LCD_String@str:
   271                           	opt stack 0
   272                           
   273                           ; 3 bytes @ 0x7
   274  00002A                     	ds	3
   275  00002D                     LCD_String_xy@pos:
   276                           	opt stack 0
   277                           
   278                           ; 1 bytes @ 0xA
   279  00002D                     	ds	1
   280  00002E                     LCD_String_xy@str:
   281                           	opt stack 0
   282                           
   283                           ; 2 bytes @ 0xB
   284  00002E                     	ds	2
   285  000030                     LCD_String_xy@row:
   286                           	opt stack 0
   287                           
   288                           ; 1 bytes @ 0xD
   289  000030                     	ds	1
   290  000031                     ??_main:
   291                           
   292                           ; 1 bytes @ 0xE
   293  000031                     	ds	3
   294                           tblptru	equ	0xFF8
   295                           tblptrh	equ	0xFF7
   296                           tblptrl	equ	0xFF6
   297                           tablat	equ	0xFF5
   298                           postinc0	equ	0xFEE
   299                           postdec1	equ	0xFE5
   300                           fsr1l	equ	0xFE1
   301                           
   302 ;;
   303 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   304 ;;
   305 ;; *************** function _main *****************
   306 ;; Defined at:
   307 ;;		line 14 in file "main.c"
   308 ;; Parameters:    Size  Location     Type
   309 ;;		None
   310 ;; Auto vars:     Size  Location     Type
   311 ;;		None
   312 ;; Return value:  Size  Location     Type
   313 ;;                  1    wreg      void 
   314 ;; Registers used:
   315 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   316 ;; Tracked objects:
   317 ;;		On entry : 0/0
   318 ;;		On exit  : 0/0
   319 ;;		Unchanged: 0/0
   320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   321 ;;      Params:         0       0       0       0       0       0       0       0       0
   322 ;;      Locals:         0       0       0       0       0       0       0       0       0
   323 ;;      Temps:          3       0       0       0       0       0       0       0       0
   324 ;;      Totals:         3       0       0       0       0       0       0       0       0
   325 ;;Total ram usage:        3 bytes
   326 ;; Hardware stack levels required when called:    4
   327 ;; This function calls:
   328 ;;		_LCD_Init
   329 ;;		_LCD_String
   330 ;;		_LCD_String_xy
   331 ;;		_keypad_init
   332 ;; This function is called by:
   333 ;;		Startup code after reset
   334 ;; This function uses a non-reentrant model
   335 ;;
   336                           
   337                           	psect	text0
   338  00081A                     __ptext0:
   339                           	opt stack 0
   340  00081A                     _main:
   341                           	opt stack 27
   342                           
   343                           ;main.c: 17: OSCCONbits.IRCF = 0b111;
   344                           
   345                           ;incstack = 0
   346  00081A  88D3               	bsf	4051,4,c	;volatile
   347  00081C  8AD3               	bsf	4051,5,c	;volatile
   348  00081E  8CD3               	bsf	4051,6,c	;volatile
   349                           
   350                           ;main.c: 18: OSCCONbits.SCS = 0b10;
   351  000820  50D3               	movf	4051,w,c	;volatile
   352  000822  0BFC               	andlw	-4
   353  000824  0902               	iorlw	2
   354  000826  6ED3               	movwf	4051,c	;volatile
   355                           
   356                           ;main.c: 29: LCD_Init();
   357  000828  EC95  F004         	call	_LCD_Init	;wreg free
   358                           
   359                           ;main.c: 30: LCD_String_xy(1,0,"KEY: password");
   360  00082C  0E00               	movlw	0
   361  00082E  6E2D               	movwf	LCD_String_xy@pos,c
   362  000830  0E01               	movlw	low STR_1
   363  000832  6E2E               	movwf	LCD_String_xy@str,c
   364  000834  0E08               	movlw	high STR_1
   365  000836  6E2F               	movwf	LCD_String_xy@str+1,c
   366  000838  0E01               	movlw	1
   367  00083A  EC62  F004         	call	_LCD_String_xy
   368                           
   369                           ;main.c: 31: keypad_init();
   370  00083E  EC34  F005         	call	_keypad_init	;wreg free
   371                           
   372                           ;main.c: 34: TRISCbits.RC6 = 0;
   373  000842  9C94               	bcf	3988,6,c	;volatile
   374                           
   375                           ;main.c: 36: TXSTAbits.TX9 = 0;
   376  000844  9CAC               	bcf	4012,6,c	;volatile
   377                           
   378                           ;main.c: 37: TXSTAbits.TXEN = 1;
   379  000846  8AAC               	bsf	4012,5,c	;volatile
   380                           
   381                           ;main.c: 38: TXSTAbits.SYNC = 0;
   382  000848  98AC               	bcf	4012,4,c	;volatile
   383                           
   384                           ;main.c: 39: TXSTAbits.BRGH = 0;
   385  00084A  94AC               	bcf	4012,2,c	;volatile
   386                           
   387                           ;main.c: 40: BAUDCONbits.BRG16 = 0;
   388  00084C  96B8               	bcf	4024,3,c	;volatile
   389                           
   390                           ;main.c: 41: RCSTAbits.SPEN = 1;
   391  00084E  8EAB               	bsf	4011,7,c	;volatile
   392                           
   393                           ;main.c: 43: SPBRG = (unsigned char) (((8000000L / 9600) / 64) - 1);
   394  000850  0E0C               	movlw	12
   395  000852  6EAF               	movwf	4015,c	;volatile
   396  000854                     l282:
   397  000854  A2AC               	btfss	4012,1,c	;volatile
   398  000856  D7FE               	goto	l282
   399                           
   400                           ;main.c: 47: }
   401                           ;main.c: 49: TXREG = 'f';
   402  000858  0E66               	movlw	102
   403  00085A  6EAD               	movwf	4013,c	;volatile
   404  00085C                     l285:
   405                           
   406                           ;main.c: 60: if (key) {
   407  00085C  5022               	movf	_key,w,c
   408  00085E  B4D8               	btfsc	status,2,c
   409  000860  D020               	goto	l287
   410                           
   411                           ;main.c: 61: LCD_String_xy(2,0,"KEY: ");
   412  000862  0E00               	movlw	0
   413  000864  6E2D               	movwf	LCD_String_xy@pos,c
   414  000866  0E0F               	movlw	low STR_2
   415  000868  6E2E               	movwf	LCD_String_xy@str,c
   416  00086A  0E08               	movlw	high STR_2
   417  00086C  6E2F               	movwf	LCD_String_xy@str+1,c
   418  00086E  0E02               	movlw	2
   419  000870  EC62  F004         	call	_LCD_String_xy
   420                           
   421                           ;main.c: 62: LCD_String((char)key);
   422  000874  5022               	movf	_key,w,c
   423  000876  6E31               	movwf	??_main& (0+255),c
   424  000878  6A32               	clrf	(??_main+1)& (0+255),c
   425  00087A  6A33               	clrf	(??_main+2)& (0+255),c
   426  00087C  C031  F02A         	movff	??_main,LCD_String@str
   427  000880  C032  F02B         	movff	??_main+1,LCD_String@str+1
   428  000884  C033  F02C         	movff	??_main+2,LCD_String@str+2
   429  000888  ECB5  F004         	call	_LCD_String	;wreg free
   430                           
   431                           ;main.c: 63: LCD_String(" TE");
   432  00088C  0E15               	movlw	low STR_3
   433  00088E  6E2A               	movwf	LCD_String@str,c
   434  000890  0E08               	movlw	high STR_3
   435  000892  6E2B               	movwf	LCD_String@str+1,c
   436  000894  502A               	movf	LCD_String@str,w,c
   437  000896  102B               	iorwf	LCD_String@str+1,w,c
   438  000898  A4D8               	btfss	status,2,c
   439  00089A  0E00               	movlw	low (__mediumconst shr (0+16))
   440  00089C  6E2C               	movwf	LCD_String@str+2,c
   441  00089E  ECB5  F004         	call	_LCD_String	;wreg free
   442  0008A2                     l287:
   443  0008A2  A2AC               	btfss	4012,1,c	;volatile
   444  0008A4  D7FE               	goto	l287
   445                           
   446                           ;main.c: 67: }
   447                           ;main.c: 69: TXREG = key;
   448  0008A6  C022  FFAD         	movff	_key,4013	;volatile
   449                           
   450                           ;main.c: 70: _delay((unsigned long)((100)*(8000000L/4000.0)));
   451  0008AA  0E02               	movlw	2
   452  0008AC  6E32               	movwf	(??_main+1)& (0+255),c
   453  0008AE  0E04               	movlw	4
   454  0008B0  6E31               	movwf	??_main& (0+255),c
   455  0008B2  0EBA               	movlw	186
   456  0008B4                     u947:
   457  0008B4  2EE8               	decfsz	wreg,f,c
   458  0008B6  D7FE               	bra	u947
   459  0008B8  2E31               	decfsz	??_main& (0+255),f,c
   460  0008BA  D7FC               	bra	u947
   461  0008BC  2E32               	decfsz	(??_main+1)& (0+255),f,c
   462  0008BE  D7FA               	bra	u947
   463  0008C0  D000               	nop2	
   464  0008C2  D7CC               	goto	l285
   465  0008C4                     __end_of_main:
   466                           	opt stack 0
   467                           tblptru	equ	0xFF8
   468                           tblptrh	equ	0xFF7
   469                           tblptrl	equ	0xFF6
   470                           tablat	equ	0xFF5
   471                           postinc0	equ	0xFEE
   472                           wreg	equ	0xFE8
   473                           postdec1	equ	0xFE5
   474                           fsr1l	equ	0xFE1
   475                           status	equ	0xFD8
   476                           
   477 ;; *************** function _keypad_init *****************
   478 ;; Defined at:
   479 ;;		line 5 in file "keypad.c"
   480 ;; Parameters:    Size  Location     Type
   481 ;;		None
   482 ;; Auto vars:     Size  Location     Type
   483 ;;		None
   484 ;; Return value:  Size  Location     Type
   485 ;;                  1    wreg      void 
   486 ;; Registers used:
   487 ;;		wreg, status,2, status,0
   488 ;; Tracked objects:
   489 ;;		On entry : 0/0
   490 ;;		On exit  : 0/0
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   493 ;;      Params:         0       0       0       0       0       0       0       0       0
   494 ;;      Locals:         0       0       0       0       0       0       0       0       0
   495 ;;      Temps:          0       0       0       0       0       0       0       0       0
   496 ;;      Totals:         0       0       0       0       0       0       0       0       0
   497 ;;Total ram usage:        0 bytes
   498 ;; Hardware stack levels used:    1
   499 ;; This function calls:
   500 ;;		Nothing
   501 ;; This function is called by:
   502 ;;		_main
   503 ;; This function uses a non-reentrant model
   504 ;;
   505                           
   506                           	psect	text1
   507  000A68                     __ptext1:
   508                           	opt stack 0
   509  000A68                     _keypad_init:
   510                           	opt stack 30
   511                           
   512                           ;keypad.c: 7: TRISD &= ~(1<<0) & ~(1<<1) & ~(1<<2) & ~(1<<3);
   513                           
   514                           ;incstack = 0
   515  000A68  0EF0               	movlw	240
   516  000A6A  1695               	andwf	3989,f,c	;volatile
   517                           
   518                           ;keypad.c: 8: TRISD |= (1<<4) | (1<<5) | (1<<6) | (1<<7);
   519  000A6C  0EF0               	movlw	240
   520  000A6E  1295               	iorwf	3989,f,c	;volatile
   521                           
   522                           ;keypad.c: 9: INTCON2bits.RBPU = 0;
   523  000A70  9EF1               	bcf	intcon2,7,c	;volatile
   524  000A72  0012               	return		;funcret
   525  000A74                     __end_of_keypad_init:
   526                           	opt stack 0
   527                           tblptru	equ	0xFF8
   528                           tblptrh	equ	0xFF7
   529                           tblptrl	equ	0xFF6
   530                           tablat	equ	0xFF5
   531                           intcon2	equ	0xFF1
   532                           postinc0	equ	0xFEE
   533                           wreg	equ	0xFE8
   534                           postdec1	equ	0xFE5
   535                           fsr1l	equ	0xFE1
   536                           status	equ	0xFD8
   537                           
   538 ;; *************** function _LCD_String_xy *****************
   539 ;; Defined at:
   540 ;;		line 57 in file "LCD_20x4_C_file.c"
   541 ;; Parameters:    Size  Location     Type
   542 ;;  row             1    wreg     unsigned char 
   543 ;;  pos             1   10[COMRAM] unsigned char 
   544 ;;  str             2   11[COMRAM] PTR const unsigned char 
   545 ;;		 -> STR_2(6), STR_1(14), 
   546 ;; Auto vars:     Size  Location     Type
   547 ;;  row             1   13[COMRAM] unsigned char 
   548 ;; Return value:  Size  Location     Type
   549 ;;                  1    wreg      void 
   550 ;; Registers used:
   551 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   552 ;; Tracked objects:
   553 ;;		On entry : 0/0
   554 ;;		On exit  : 0/0
   555 ;;		Unchanged: 0/0
   556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   557 ;;      Params:         3       0       0       0       0       0       0       0       0
   558 ;;      Locals:         1       0       0       0       0       0       0       0       0
   559 ;;      Temps:          0       0       0       0       0       0       0       0       0
   560 ;;      Totals:         4       0       0       0       0       0       0       0       0
   561 ;;Total ram usage:        4 bytes
   562 ;; Hardware stack levels used:    1
   563 ;; Hardware stack levels required when called:    3
   564 ;; This function calls:
   565 ;;		_LCD_Command
   566 ;;		_LCD_String
   567 ;; This function is called by:
   568 ;;		_main
   569 ;; This function uses a non-reentrant model
   570 ;;
   571                           
   572                           	psect	text2
   573  0008C4                     __ptext2:
   574                           	opt stack 0
   575  0008C4                     _LCD_String_xy:
   576                           	opt stack 27
   577                           
   578                           ;incstack = 0
   579                           ;LCD_String_xy@row stored from wreg
   580  0008C4  6E30               	movwf	LCD_String_xy@row,c
   581                           
   582                           ;LCD_20x4_C_file.c: 59: if (row == 1)
   583  0008C6  0430               	decf	LCD_String_xy@row,w,c
   584  0008C8  A4D8               	btfss	status,2,c
   585  0008CA  D006               	goto	l1300
   586                           
   587                           ;LCD_20x4_C_file.c: 60: LCD_Command((pos & 0x0F)|0x80);
   588  0008CC  502D               	movf	LCD_String_xy@pos,w,c
   589  0008CE  0B0F               	andlw	15
   590  0008D0  0980               	iorlw	128
   591  0008D2  EC25  F005         	call	_LCD_Command
   592  0008D6  D01D               	goto	l1312
   593  0008D8                     l1300:
   594                           
   595                           ;LCD_20x4_C_file.c: 61: else if (row == 2)
   596  0008D8  0E02               	movlw	2
   597  0008DA  1830               	xorwf	LCD_String_xy@row,w,c
   598  0008DC  A4D8               	btfss	status,2,c
   599  0008DE  D006               	goto	l1304
   600                           
   601                           ;LCD_20x4_C_file.c: 62: LCD_Command((pos & 0x0F)|0xC0);
   602  0008E0  502D               	movf	LCD_String_xy@pos,w,c
   603  0008E2  0B0F               	andlw	15
   604  0008E4  09C0               	iorlw	192
   605  0008E6  EC25  F005         	call	_LCD_Command
   606  0008EA  D013               	goto	l1312
   607  0008EC                     l1304:
   608                           
   609                           ;LCD_20x4_C_file.c: 63: else if (row == 3)
   610  0008EC  0E03               	movlw	3
   611  0008EE  1830               	xorwf	LCD_String_xy@row,w,c
   612  0008F0  A4D8               	btfss	status,2,c
   613  0008F2  D006               	goto	l1308
   614                           
   615                           ;LCD_20x4_C_file.c: 64: LCD_Command((pos & 0x0F)|0x94);
   616  0008F4  502D               	movf	LCD_String_xy@pos,w,c
   617  0008F6  0B0F               	andlw	15
   618  0008F8  0994               	iorlw	148
   619  0008FA  EC25  F005         	call	_LCD_Command
   620  0008FE  D009               	goto	l1312
   621  000900                     l1308:
   622                           
   623                           ;LCD_20x4_C_file.c: 65: else if (row == 4)
   624  000900  0E04               	movlw	4
   625  000902  1830               	xorwf	LCD_String_xy@row,w,c
   626  000904  A4D8               	btfss	status,2,c
   627  000906  D005               	goto	l1312
   628                           
   629                           ;LCD_20x4_C_file.c: 66: LCD_Command((pos & 0x0F)|0xD4);
   630  000908  502D               	movf	LCD_String_xy@pos,w,c
   631  00090A  0B0F               	andlw	15
   632  00090C  09D4               	iorlw	212
   633  00090E  EC25  F005         	call	_LCD_Command
   634  000912                     l1312:
   635                           
   636                           ;LCD_20x4_C_file.c: 67: LCD_String(str);
   637  000912  C02E  F02A         	movff	LCD_String_xy@str,LCD_String@str
   638  000916  C02F  F02B         	movff	LCD_String_xy@str+1,LCD_String@str+1
   639  00091A  502A               	movf	LCD_String@str,w,c
   640  00091C  102B               	iorwf	LCD_String@str+1,w,c
   641  00091E  A4D8               	btfss	status,2,c
   642  000920  0E00               	movlw	low (__mediumconst shr (0+16))
   643  000922  6E2C               	movwf	LCD_String@str+2,c
   644  000924  ECB5  F004         	call	_LCD_String	;wreg free
   645  000928  0012               	return		;funcret
   646  00092A                     __end_of_LCD_String_xy:
   647                           	opt stack 0
   648                           tblptru	equ	0xFF8
   649                           tblptrh	equ	0xFF7
   650                           tblptrl	equ	0xFF6
   651                           tablat	equ	0xFF5
   652                           intcon2	equ	0xFF1
   653                           postinc0	equ	0xFEE
   654                           wreg	equ	0xFE8
   655                           postdec1	equ	0xFE5
   656                           fsr1l	equ	0xFE1
   657                           status	equ	0xFD8
   658                           
   659 ;; *************** function _LCD_String *****************
   660 ;; Defined at:
   661 ;;		line 47 in file "LCD_20x4_C_file.c"
   662 ;; Parameters:    Size  Location     Type
   663 ;;  str             3    7[COMRAM] PTR const unsigned char 
   664 ;;		 -> STR_3(4), ROM(32767), STR_2(6), STR_1(14), 
   665 ;; Auto vars:     Size  Location     Type
   666 ;;  i               2    0        int 
   667 ;; Return value:  Size  Location     Type
   668 ;;                  1    wreg      void 
   669 ;; Registers used:
   670 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   671 ;; Tracked objects:
   672 ;;		On entry : 0/0
   673 ;;		On exit  : 0/0
   674 ;;		Unchanged: 0/0
   675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   676 ;;      Params:         3       0       0       0       0       0       0       0       0
   677 ;;      Locals:         0       0       0       0       0       0       0       0       0
   678 ;;      Temps:          0       0       0       0       0       0       0       0       0
   679 ;;      Totals:         3       0       0       0       0       0       0       0       0
   680 ;;Total ram usage:        3 bytes
   681 ;; Hardware stack levels used:    1
   682 ;; Hardware stack levels required when called:    2
   683 ;; This function calls:
   684 ;;		_LCD_Char
   685 ;; This function is called by:
   686 ;;		_LCD_String_xy
   687 ;;		_main
   688 ;; This function uses a non-reentrant model
   689 ;;
   690                           
   691                           	psect	text3
   692  00096A                     __ptext3:
   693                           	opt stack 0
   694  00096A                     _LCD_String:
   695                           	opt stack 27
   696                           
   697                           ;LCD_20x4_C_file.c: 49: int i;
   698                           ;LCD_20x4_C_file.c: 50: while((*str)!=0)
   699                           
   700                           ;incstack = 0
   701  00096A  D010               	goto	l1278
   702  00096C                     l1274:
   703                           
   704                           ;LCD_20x4_C_file.c: 51: {
   705                           ;LCD_20x4_C_file.c: 52: LCD_Char (*str);
   706  00096C  C02A  FFF6         	movff	LCD_String@str,tblptrl
   707  000970  C02B  FFF7         	movff	LCD_String@str+1,tblptrh
   708  000974  C02C  FFF8         	movff	LCD_String@str+2,tblptru
   709  000978  0008               	tblrd		*
   710  00097A  50F5               	movf	tablat,w,c
   711  00097C  EC16  F005         	call	_LCD_Char
   712                           
   713                           ;LCD_20x4_C_file.c: 53: str++;
   714  000980  0E01               	movlw	1
   715  000982  262A               	addwf	LCD_String@str,f,c
   716  000984  0E00               	movlw	0
   717  000986  222B               	addwfc	LCD_String@str+1,f,c
   718  000988  0E00               	movlw	0
   719  00098A  222C               	addwfc	LCD_String@str+2,f,c
   720  00098C                     l1278:
   721  00098C  C02A  FFF6         	movff	LCD_String@str,tblptrl
   722  000990  C02B  FFF7         	movff	LCD_String@str+1,tblptrh
   723  000994  C02C  FFF8         	movff	LCD_String@str+2,tblptru
   724  000998  0008               	tblrd		*
   725  00099A  50F5               	movf	tablat,w,c
   726  00099C  0900               	iorlw	0
   727  00099E  B4D8               	btfsc	status,2,c
   728  0009A0  0012               	return	
   729  0009A2  D7E4               	goto	l1274
   730  0009A4                     __end_of_LCD_String:
   731                           	opt stack 0
   732                           tblptru	equ	0xFF8
   733                           tblptrh	equ	0xFF7
   734                           tblptrl	equ	0xFF6
   735                           tablat	equ	0xFF5
   736                           intcon2	equ	0xFF1
   737                           postinc0	equ	0xFEE
   738                           wreg	equ	0xFE8
   739                           postdec1	equ	0xFE5
   740                           fsr1l	equ	0xFE1
   741                           status	equ	0xFD8
   742                           
   743 ;; *************** function _LCD_Char *****************
   744 ;; Defined at:
   745 ;;		line 22 in file "LCD_20x4_C_file.c"
   746 ;; Parameters:    Size  Location     Type
   747 ;;  char_data       1    wreg     unsigned char 
   748 ;; Auto vars:     Size  Location     Type
   749 ;;  char_data       1    6[COMRAM] unsigned char 
   750 ;; Return value:  Size  Location     Type
   751 ;;                  1    wreg      void 
   752 ;; Registers used:
   753 ;;		wreg, status,2, status,0, cstack
   754 ;; Tracked objects:
   755 ;;		On entry : 0/0
   756 ;;		On exit  : 0/0
   757 ;;		Unchanged: 0/0
   758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   759 ;;      Params:         0       0       0       0       0       0       0       0       0
   760 ;;      Locals:         1       0       0       0       0       0       0       0       0
   761 ;;      Temps:          0       0       0       0       0       0       0       0       0
   762 ;;      Totals:         1       0       0       0       0       0       0       0       0
   763 ;;Total ram usage:        1 bytes
   764 ;; Hardware stack levels used:    1
   765 ;; Hardware stack levels required when called:    1
   766 ;; This function calls:
   767 ;;		_MSdelay
   768 ;; This function is called by:
   769 ;;		_LCD_String
   770 ;; This function uses a non-reentrant model
   771 ;;
   772                           
   773                           	psect	text4
   774  000A2C                     __ptext4:
   775                           	opt stack 0
   776  000A2C                     _LCD_Char:
   777                           	opt stack 27
   778                           
   779                           ;incstack = 0
   780                           ;LCD_Char@char_data stored from wreg
   781  000A2C  6E29               	movwf	LCD_Char@char_data,c
   782                           
   783                           ;LCD_20x4_C_file.c: 24: LATB = char_data;
   784  000A2E  C029  FF8A         	movff	LCD_Char@char_data,3978	;volatile
   785                           
   786                           ;LCD_20x4_C_file.c: 25: LATC0 = 1;
   787  000A32  808B               	bsf	3979,0,c	;volatile
   788                           
   789                           ;LCD_20x4_C_file.c: 26: LATC1 = 0;
   790  000A34  928B               	bcf	3979,1,c	;volatile
   791                           
   792                           ;LCD_20x4_C_file.c: 27: LATC2 = 1;
   793  000A36  848B               	bsf	3979,2,c	;volatile
   794                           
   795                           ;LCD_20x4_C_file.c: 28: __nop();
   796  000A38  F000               	nop	
   797                           
   798                           ;LCD_20x4_C_file.c: 29: LATC2 = 0;
   799  000A3A  948B               	bcf	3979,2,c	;volatile
   800                           
   801                           ;LCD_20x4_C_file.c: 30: MSdelay(3);
   802  000A3C  0E00               	movlw	0
   803  000A3E  6E24               	movwf	MSdelay@val+1,c
   804  000A40  0E03               	movlw	3
   805  000A42  6E23               	movwf	MSdelay@val,c
   806  000A44  ECD2  F004         	call	_MSdelay	;wreg free
   807  000A48  0012               	return		;funcret
   808  000A4A                     __end_of_LCD_Char:
   809                           	opt stack 0
   810                           tblptru	equ	0xFF8
   811                           tblptrh	equ	0xFF7
   812                           tblptrl	equ	0xFF6
   813                           tablat	equ	0xFF5
   814                           intcon2	equ	0xFF1
   815                           postinc0	equ	0xFEE
   816                           wreg	equ	0xFE8
   817                           postdec1	equ	0xFE5
   818                           fsr1l	equ	0xFE1
   819                           status	equ	0xFD8
   820                           
   821 ;; *************** function _LCD_Init *****************
   822 ;; Defined at:
   823 ;;		line 33 in file "LCD_20x4_C_file.c"
   824 ;; Parameters:    Size  Location     Type
   825 ;;		None
   826 ;; Auto vars:     Size  Location     Type
   827 ;;		None
   828 ;; Return value:  Size  Location     Type
   829 ;;                  1    wreg      void 
   830 ;; Registers used:
   831 ;;		wreg, status,2, status,0, cstack
   832 ;; Tracked objects:
   833 ;;		On entry : 0/0
   834 ;;		On exit  : 0/0
   835 ;;		Unchanged: 0/0
   836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   837 ;;      Params:         0       0       0       0       0       0       0       0       0
   838 ;;      Locals:         0       0       0       0       0       0       0       0       0
   839 ;;      Temps:          0       0       0       0       0       0       0       0       0
   840 ;;      Totals:         0       0       0       0       0       0       0       0       0
   841 ;;Total ram usage:        0 bytes
   842 ;; Hardware stack levels used:    1
   843 ;; Hardware stack levels required when called:    2
   844 ;; This function calls:
   845 ;;		_LCD_Command
   846 ;;		_MSdelay
   847 ;; This function is called by:
   848 ;;		_main
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852                           	psect	text5
   853  00092A                     __ptext5:
   854                           	opt stack 0
   855  00092A                     _LCD_Init:
   856                           	opt stack 28
   857                           
   858                           ;LCD_20x4_C_file.c: 35: TRISC = 0;
   859                           
   860                           ;incstack = 0
   861  00092A  0E00               	movlw	0
   862  00092C  6E94               	movwf	3988,c	;volatile
   863                           
   864                           ;LCD_20x4_C_file.c: 36: TRISB = 0;
   865  00092E  0E00               	movlw	0
   866  000930  6E93               	movwf	3987,c	;volatile
   867                           
   868                           ;LCD_20x4_C_file.c: 38: MSdelay(20);
   869  000932  0E00               	movlw	0
   870  000934  6E24               	movwf	MSdelay@val+1,c
   871  000936  0E14               	movlw	20
   872  000938  6E23               	movwf	MSdelay@val,c
   873  00093A  ECD2  F004         	call	_MSdelay	;wreg free
   874                           
   875                           ;LCD_20x4_C_file.c: 39: LCD_Command (0x38);
   876  00093E  0E38               	movlw	56
   877  000940  EC25  F005         	call	_LCD_Command
   878                           
   879                           ;LCD_20x4_C_file.c: 40: LCD_Command (0x0C);
   880  000944  0E0C               	movlw	12
   881  000946  EC25  F005         	call	_LCD_Command
   882                           
   883                           ;LCD_20x4_C_file.c: 41: LCD_Command (0x06);
   884  00094A  0E06               	movlw	6
   885  00094C  EC25  F005         	call	_LCD_Command
   886                           
   887                           ;LCD_20x4_C_file.c: 42: LCD_Command (0x01);
   888  000950  0E01               	movlw	1
   889  000952  EC25  F005         	call	_LCD_Command
   890                           
   891                           ;LCD_20x4_C_file.c: 43: MSdelay(3);
   892  000956  0E00               	movlw	0
   893  000958  6E24               	movwf	MSdelay@val+1,c
   894  00095A  0E03               	movlw	3
   895  00095C  6E23               	movwf	MSdelay@val,c
   896  00095E  ECD2  F004         	call	_MSdelay	;wreg free
   897                           
   898                           ;LCD_20x4_C_file.c: 44: LCD_Command (0x80);
   899  000962  0E80               	movlw	128
   900  000964  EC25  F005         	call	_LCD_Command
   901  000968  0012               	return		;funcret
   902  00096A                     __end_of_LCD_Init:
   903                           	opt stack 0
   904                           tblptru	equ	0xFF8
   905                           tblptrh	equ	0xFF7
   906                           tblptrl	equ	0xFF6
   907                           tablat	equ	0xFF5
   908                           intcon2	equ	0xFF1
   909                           postinc0	equ	0xFEE
   910                           wreg	equ	0xFE8
   911                           postdec1	equ	0xFE5
   912                           fsr1l	equ	0xFE1
   913                           status	equ	0xFD8
   914                           
   915 ;; *************** function _LCD_Command *****************
   916 ;; Defined at:
   917 ;;		line 11 in file "LCD_20x4_C_file.c"
   918 ;; Parameters:    Size  Location     Type
   919 ;;  cmd             1    wreg     unsigned char 
   920 ;; Auto vars:     Size  Location     Type
   921 ;;  cmd             1    6[COMRAM] unsigned char 
   922 ;; Return value:  Size  Location     Type
   923 ;;                  1    wreg      void 
   924 ;; Registers used:
   925 ;;		wreg, status,2, status,0, cstack
   926 ;; Tracked objects:
   927 ;;		On entry : 0/0
   928 ;;		On exit  : 0/0
   929 ;;		Unchanged: 0/0
   930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   931 ;;      Params:         0       0       0       0       0       0       0       0       0
   932 ;;      Locals:         1       0       0       0       0       0       0       0       0
   933 ;;      Temps:          0       0       0       0       0       0       0       0       0
   934 ;;      Totals:         1       0       0       0       0       0       0       0       0
   935 ;;Total ram usage:        1 bytes
   936 ;; Hardware stack levels used:    1
   937 ;; Hardware stack levels required when called:    1
   938 ;; This function calls:
   939 ;;		_MSdelay
   940 ;; This function is called by:
   941 ;;		_LCD_Init
   942 ;;		_LCD_String_xy
   943 ;;		_LCD_Clear
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947                           	psect	text6
   948  000A4A                     __ptext6:
   949                           	opt stack 0
   950  000A4A                     _LCD_Command:
   951                           	opt stack 28
   952                           
   953                           ;incstack = 0
   954                           ;LCD_Command@cmd stored from wreg
   955  000A4A  6E29               	movwf	LCD_Command@cmd,c
   956                           
   957                           ;LCD_20x4_C_file.c: 13: LATB = cmd;
   958  000A4C  C029  FF8A         	movff	LCD_Command@cmd,3978	;volatile
   959                           
   960                           ;LCD_20x4_C_file.c: 14: LATC0 = 0;
   961  000A50  908B               	bcf	3979,0,c	;volatile
   962                           
   963                           ;LCD_20x4_C_file.c: 15: LATC1 = 0;
   964  000A52  928B               	bcf	3979,1,c	;volatile
   965                           
   966                           ;LCD_20x4_C_file.c: 16: LATC2 = 1;
   967  000A54  848B               	bsf	3979,2,c	;volatile
   968                           
   969                           ;LCD_20x4_C_file.c: 17: __nop();
   970  000A56  F000               	nop	
   971                           
   972                           ;LCD_20x4_C_file.c: 18: LATC2 = 0;
   973  000A58  948B               	bcf	3979,2,c	;volatile
   974                           
   975                           ;LCD_20x4_C_file.c: 19: MSdelay(3);
   976  000A5A  0E00               	movlw	0
   977  000A5C  6E24               	movwf	MSdelay@val+1,c
   978  000A5E  0E03               	movlw	3
   979  000A60  6E23               	movwf	MSdelay@val,c
   980  000A62  ECD2  F004         	call	_MSdelay	;wreg free
   981  000A66  0012               	return		;funcret
   982  000A68                     __end_of_LCD_Command:
   983                           	opt stack 0
   984                           tblptru	equ	0xFF8
   985                           tblptrh	equ	0xFF7
   986                           tblptrl	equ	0xFF6
   987                           tablat	equ	0xFF5
   988                           intcon2	equ	0xFF1
   989                           postinc0	equ	0xFEE
   990                           wreg	equ	0xFE8
   991                           postdec1	equ	0xFE5
   992                           fsr1l	equ	0xFE1
   993                           status	equ	0xFD8
   994                           
   995 ;; *************** function _MSdelay *****************
   996 ;; Defined at:
   997 ;;		line 78 in file "LCD_20x4_C_file.c"
   998 ;; Parameters:    Size  Location     Type
   999 ;;  val             2    0[COMRAM] unsigned int 
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;  j               2    4[COMRAM] unsigned int 
  1002 ;;  i               2    2[COMRAM] unsigned int 
  1003 ;; Return value:  Size  Location     Type
  1004 ;;                  1    wreg      void 
  1005 ;; Registers used:
  1006 ;;		wreg, status,2, status,0
  1007 ;; Tracked objects:
  1008 ;;		On entry : 0/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1012 ;;      Params:         2       0       0       0       0       0       0       0       0
  1013 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1014 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1015 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1016 ;;Total ram usage:        6 bytes
  1017 ;; Hardware stack levels used:    1
  1018 ;; This function calls:
  1019 ;;		Nothing
  1020 ;; This function is called by:
  1021 ;;		_LCD_Command
  1022 ;;		_LCD_Char
  1023 ;;		_LCD_Init
  1024 ;;		_LCD_Clear
  1025 ;;		_keyfind
  1026 ;; This function uses a non-reentrant model
  1027 ;;
  1028                           
  1029                           	psect	text7
  1030  0009A4                     __ptext7:
  1031                           	opt stack 0
  1032  0009A4                     _MSdelay:
  1033                           	opt stack 27
  1034                           
  1035                           ;LCD_20x4_C_file.c: 80: unsigned int i,j;
  1036                           ;LCD_20x4_C_file.c: 81: for(i=0;i<val;i++)
  1037                           
  1038                           ;incstack = 0
  1039  0009A4  0E00               	movlw	0
  1040  0009A6  6E26               	movwf	MSdelay@i+1,c
  1041  0009A8  0E00               	movlw	0
  1042  0009AA  6E25               	movwf	MSdelay@i,c
  1043  0009AC  D00F               	goto	l1242
  1044  0009AE                     l1230:
  1045                           
  1046                           ;LCD_20x4_C_file.c: 82: for(j=0;j<165;j++);
  1047  0009AE  0E00               	movlw	0
  1048  0009B0  6E28               	movwf	MSdelay@j+1,c
  1049  0009B2  0E00               	movlw	0
  1050  0009B4  6E27               	movwf	MSdelay@j,c
  1051  0009B6                     l1232:
  1052  0009B6  5028               	movf	MSdelay@j+1,w,c
  1053  0009B8  E107               	bnz	l1240
  1054  0009BA  0EA5               	movlw	165
  1055  0009BC  5C27               	subwf	MSdelay@j,w,c
  1056  0009BE  B0D8               	btfsc	status,0,c
  1057  0009C0  D003               	goto	l1240
  1058  0009C2  4A27               	infsnz	MSdelay@j,f,c
  1059  0009C4  2A28               	incf	MSdelay@j+1,f,c
  1060  0009C6  D7F7               	goto	l1232
  1061  0009C8                     l1240:
  1062  0009C8  4A25               	infsnz	MSdelay@i,f,c
  1063  0009CA  2A26               	incf	MSdelay@i+1,f,c
  1064  0009CC                     l1242:
  1065  0009CC  5023               	movf	MSdelay@val,w,c
  1066  0009CE  5C25               	subwf	MSdelay@i,w,c
  1067  0009D0  5024               	movf	MSdelay@val+1,w,c
  1068  0009D2  5826               	subwfb	MSdelay@i+1,w,c
  1069  0009D4  B0D8               	btfsc	status,0,c
  1070  0009D6  0012               	return	
  1071  0009D8  D7EA               	goto	l1230
  1072  0009DA                     __end_of_MSdelay:
  1073                           	opt stack 0
  1074                           tblptru	equ	0xFF8
  1075                           tblptrh	equ	0xFF7
  1076                           tblptrl	equ	0xFF6
  1077                           tablat	equ	0xFF5
  1078                           intcon2	equ	0xFF1
  1079                           postinc0	equ	0xFEE
  1080                           wreg	equ	0xFE8
  1081                           postdec1	equ	0xFE5
  1082                           fsr1l	equ	0xFE1
  1083                           status	equ	0xFD8
  1084                           tblptru	equ	0xFF8
  1085                           tblptrh	equ	0xFF7
  1086                           tblptrl	equ	0xFF6
  1087                           tablat	equ	0xFF5
  1088                           intcon2	equ	0xFF1
  1089                           postinc0	equ	0xFEE
  1090                           wreg	equ	0xFE8
  1091                           postdec1	equ	0xFE5
  1092                           fsr1l	equ	0xFE1
  1093                           status	equ	0xFD8
  1094                           
  1095                           	psect	rparam
  1096  0000                     tblptru	equ	0xFF8
  1097                           tblptrh	equ	0xFF7
  1098                           tblptrl	equ	0xFF6
  1099                           tablat	equ	0xFF5
  1100                           intcon2	equ	0xFF1
  1101                           postinc0	equ	0xFEE
  1102                           wreg	equ	0xFE8
  1103                           postdec1	equ	0xFE5
  1104                           fsr1l	equ	0xFE1
  1105                           status	equ	0xFD8


Data Sizes:
    Strings     24
    Constant    0
    Data        34
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     17      54
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCD_String_xy@str	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[6]), STR_1(CODE[14]), 

    LCD_String@str	PTR const unsigned char  size(3) Largest target is 32767
		 -> STR_3(CODE[4]), ROM(CODE[32767]), STR_2(CODE[6]), STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->_LCD_String_xy
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    4356
                                             14 COMRAM     3     3      0
                           _LCD_Init
                         _LCD_String
                      _LCD_String_xy
                        _keypad_init
 ---------------------------------------------------------------------------------
 (1) _keypad_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        4     1      3    2071
                                             10 COMRAM     4     1      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           5     2      3     927
                                              7 COMRAM     3     0      3
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             1     1      0     690
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0    1358
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          1     1      0     690
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (4) _MSdelay                                              6     4      2     668
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_String
     _LCD_Char
       _MSdelay
   _LCD_String_xy
     _LCD_Command
       _MSdelay
     _LCD_String
       _LCD_Char
         _MSdelay
   _keypad_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     11      36       1       56.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      36      20        0.0%
DATA                 0      0      36       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Sep 15 12:39:54 2021

           ?_LCD_Command 0023              __CFG_BORV$3 000000              ?_LCD_String 002A  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000                      l282 0854                      l285 085C  
                    l287 08A2             __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000  
                    u947 08B4             __CFG_BOR$OFF 000000                      _key 0022  
                    _var 0021                      wreg 000FE8             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     l1300 08D8                     l1230 09AE  
                   l1240 09C8                     l1232 09B6                     l1304 08EC  
                   l1312 0912                     l1242 09CC                     l1308 0900  
                   l1274 096C                     l1278 098C                     STR_1 0801  
                   STR_2 080F                     STR_3 0815                     _LATB 000F8A  
                   _LATD 000F8C             __CFG_PWRT$ON 000000                     _main 081A  
                   fsr1l 000FE1                     start 0000          __end_of_MSdelay 09DA  
          __CFG_IESO$OFF 000000            _LCD_String_xy 08C4             ___param_bank 000000  
       __end_of_LCD_Char 0A4A         __end_of_LCD_Init 096A            __CFG_PLLDIV$1 000000  
         __CFG_CCP2MX$ON 000000                    ?_main 0023                    _LATC0 007C58  
                  _LATC1 007C59                    _LATC2 007C5A                    _SPBRG 000FAF  
                  _PORTD 000F83            __CFG_USBDIV$1 000000                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TXREG 000FAD  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000             ?_keypad_init 0023                    tablat 000FF5  
                  status 000FD8      __size_of_LCD_String 003A           __CFG_ICPRT$OFF 000000  
         ?_LCD_String_xy 002D           __CFG_MCLRE$OFF 000000          __initialization 09DA  
           __end_of_main 08C4                   ??_main 0031            __activetblptr 000002  
       LCD_String_xy@pos 002D         LCD_String_xy@row 0030         LCD_String_xy@str 002E  
              ??_MSdelay 0025           __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000  
                 _keypad 0001                   _rowloc 0035     __size_of_LCD_Command 001E  
           __pdataCOMRAM 0001             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                ?_LCD_Char 0023  
             __accesstop 0060  __end_of__initialization 0A00                ?_LCD_Init 0023  
        __CFG_PBADEN$OFF 000000          ??_LCD_String_xy 0030            ___rparam_used 000001  
         __pcstackCOMRAM 0023             ??_LCD_String 002D     __size_of_keypad_init 000C  
             ??_LCD_Char 0029               ??_LCD_Init 002A       __end_of_LCD_String 09A4  
                _MSdelay 09A4          __CFG_VREGEN$OFF 000000            LCD_String@str 002A  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0800  
                __pcinit 09DA                  __ramtop 0800                  __ptext0 081A  
                __ptext1 0A68                  __ptext2 08C4                  __ptext3 096A  
                __ptext4 0A2C                  __ptext5 092A                  __ptext6 0A4A  
                __ptext7 09A4                  _col_loc 0036     end_of_initialization 0A00  
         LCD_Command@cmd 0029            __Lmediumconst 0000                _RCSTAbits 000FAB  
                postdec1 000FE5                  postinc0 000FEE                _PORTDbits 000F83  
              _TRISCbits 000F94                _TXSTAbits 000FAC        __size_of_LCD_Char 001E  
      __size_of_LCD_Init 0040            ??_LCD_Command 0029        LCD_Char@char_data 0029  
            _BAUDCONbits 000FB8            __pidataCOMRAM 0A0A       keypad_getkey@F3814 0011  
    start_initialization 09DA    __end_of_LCD_String_xy 092A         __CFG_LPT1OSC$OFF 000000  
    __end_of_LCD_Command 0A68              __pbssCOMRAM 0034            ??_keypad_init 0023  
               ?_MSdelay 0023              __smallconst 0800                 MSdelay@i 0025  
               MSdelay@j 0027                 _LCD_Char 0A2C                 _LCD_Init 092A  
               _LATDbits 000F8C      __end_of_keypad_init 0A74         __CFG_WDTPS$32768 000000  
            _LCD_Command 0A4A              _INTCON2bits 000FF1                copy_data0 09EE  
       __size_of_MSdelay 0036                 __Hrparam 0000                 __Lrparam 0000  
  __CFG_FOSC$INTOSCIO_EC 000000              _keypad_init 0A68            __size_of_main 00AA  
             MSdelay@val 0023                 _temp_col 0034               _LCD_String 096A  
  __CFG_CPUDIV$OSC1_PLL2 000000               _OSCCONbits 000FD3   __size_of_LCD_String_xy 0066  
