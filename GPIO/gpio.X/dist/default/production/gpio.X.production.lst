

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Feb 16 12:35:24 2022

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16  0000                     
    17                           ; Version 1.41
    18                           ; Generated 25/01/2017 GMT
    19                           ; 
    20                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     
    52                           	psect	idataCOMRAM
    53  007AB1                     __pidataCOMRAM:
    54                           	opt stack 0
    55                           
    56                           ;initializer for _velocidad
    57  007AB1  0001               	dw	1
    58  007AB3  0000               	dw	0
    59                           
    60                           ;initializer for _efecto
    61  007AB5  01                 	db	1
    62  0000                     _PORTBbits	set	3969
    63  0000                     _INTCON2bits	set	4081
    64  0000                     _TRISBbits	set	3987
    65  0000                     _LATD	set	3980
    66  0000                     _TRISD	set	3989
    67                           
    68                           ; #config settings
    69  0000                     
    70                           	psect	cinit
    71  007AB6                     __pcinit:
    72                           	opt stack 0
    73  007AB6                     start_initialization:
    74                           	opt stack 0
    75  007AB6                     __initialization:
    76                           	opt stack 0
    77                           
    78                           ; Initialize objects allocated to COMRAM (5 bytes)
    79                           ; load TBLPTR registers with __pidataCOMRAM
    80  007AB6  0EB1               	movlw	low __pidataCOMRAM
    81  007AB8  6EF6               	movwf	tblptrl,c
    82  007ABA  0E7A               	movlw	high __pidataCOMRAM
    83  007ABC  6EF7               	movwf	tblptrh,c
    84  007ABE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    85  007AC0  6EF8               	movwf	tblptru,c
    86  007AC2  EE00  F00B         	lfsr	0,__pdataCOMRAM
    87  007AC6  EE10 F005          	lfsr	1,5
    88  007ACA                     copy_data0:
    89  007ACA  0009               	tblrd		*+
    90  007ACC  CFF5 FFEE          	movff	tablat,postinc0
    91  007AD0  50E5               	movf	postdec1,w,c
    92  007AD2  50E1               	movf	fsr1l,w,c
    93  007AD4  E1FA               	bnz	copy_data0
    94  007AD6                     end_of_initialization:
    95                           	opt stack 0
    96  007AD6                     __end_of__initialization:
    97                           	opt stack 0
    98  007AD6  0E00               	movlw	low (__Lmediumconst shr (0+16))
    99  007AD8  6EF8               	movwf	tblptru,c
   100  007ADA  0100               	movlb	0
   101  007ADC  EF70  F03D         	goto	_main	;jump to C main() function
   102                           tblptru	equ	0xFF8
   103                           tblptrh	equ	0xFF7
   104                           tblptrl	equ	0xFF6
   105                           tablat	equ	0xFF5
   106                           postinc0	equ	0xFEE
   107                           postdec1	equ	0xFE5
   108                           fsr1l	equ	0xFE1
   109                           
   110                           	psect	dataCOMRAM
   111  00000B                     __pdataCOMRAM:
   112                           	opt stack 0
   113  00000B                     _velocidad:
   114                           	opt stack 0
   115  00000B                     	ds	4
   116  00000F                     _efecto:
   117                           	opt stack 0
   118  00000F                     	ds	1
   119                           tblptru	equ	0xFF8
   120                           tblptrh	equ	0xFF7
   121                           tblptrl	equ	0xFF6
   122                           tablat	equ	0xFF5
   123                           postinc0	equ	0xFEE
   124                           postdec1	equ	0xFE5
   125                           fsr1l	equ	0xFE1
   126                           
   127                           	psect	cstackCOMRAM
   128  000001                     __pcstackCOMRAM:
   129                           	opt stack 0
   130  000001                     ??_secuencial_Efecto1:
   131  000001                     ??_secuencial_Efecto2:
   132  000001                     ??_secuencial_Efecto3:
   133  000001                     ??_secuencial_Efecto4:
   134  000001                     
   135                           ; 2 bytes @ 0x0
   136  000001                     	ds	2
   137  000003                     secuencial_Efecto1@i:
   138                           	opt stack 0
   139  000003                     secuencial_Efecto3@i:
   140                           	opt stack 0
   141                           
   142                           ; 2 bytes @ 0x2
   143  000003                     	ds	1
   144  000004                     secuencial_Efecto4@i:
   145                           	opt stack 0
   146                           
   147                           ; 2 bytes @ 0x3
   148  000004                     	ds	1
   149  000005                     secuencial_Efecto2@j:
   150                           	opt stack 0
   151                           
   152                           ; 2 bytes @ 0x4
   153  000005                     	ds	1
   154  000006                     secuencial_Efecto4@m:
   155                           	opt stack 0
   156                           
   157                           ; 2 bytes @ 0x5
   158  000006                     	ds	1
   159  000007                     secuencial_Efecto2@i:
   160                           	opt stack 0
   161                           
   162                           ; 2 bytes @ 0x6
   163  000007                     	ds	1
   164  000008                     secuencial_Efecto4@n:
   165                           	opt stack 0
   166                           
   167                           ; 2 bytes @ 0x7
   168  000008                     	ds	2
   169  00000A                     ??_main:
   170                           
   171                           ; 1 bytes @ 0x9
   172  00000A                     	ds	1
   173                           tblptru	equ	0xFF8
   174                           tblptrh	equ	0xFF7
   175                           tblptrl	equ	0xFF6
   176                           tablat	equ	0xFF5
   177                           postinc0	equ	0xFEE
   178                           postdec1	equ	0xFE5
   179                           fsr1l	equ	0xFE1
   180                           
   181 ;;
   182 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   183 ;;
   184 ;; *************** function _main *****************
   185 ;; Defined at:
   186 ;;		line 33 in file "secuencia_main.c"
   187 ;; Parameters:    Size  Location     Type
   188 ;;		None
   189 ;; Auto vars:     Size  Location     Type
   190 ;;		None
   191 ;; Return value:  Size  Location     Type
   192 ;;                  2   26[None  ] int 
   193 ;; Registers used:
   194 ;;		wreg, status,2, status,0, cstack
   195 ;; Tracked objects:
   196 ;;		On entry : 0/0
   197 ;;		On exit  : 0/0
   198 ;;		Unchanged: 0/0
   199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   200 ;;      Params:         0       0       0       0       0       0       0       0       0
   201 ;;      Locals:         0       0       0       0       0       0       0       0       0
   202 ;;      Temps:          1       0       0       0       0       0       0       0       0
   203 ;;      Totals:         1       0       0       0       0       0       0       0       0
   204 ;;Total ram usage:        1 bytes
   205 ;; Hardware stack levels required when called:    1
   206 ;; This function calls:
   207 ;;		_secuencial_Efecto1
   208 ;;		_secuencial_Efecto2
   209 ;;		_secuencial_Efecto3
   210 ;;		_secuencial_Efecto4
   211 ;; This function is called by:
   212 ;;		Startup code after reset
   213 ;; This function uses a non-reentrant model
   214 ;;
   215                           
   216                           	psect	text0
   217  007AE0                     __ptext0:
   218                           	opt stack 0
   219  007AE0                     _main:
   220                           	opt stack 30
   221                           
   222                           ;secuencia_main.c: 34: TRISD = 0;
   223                           
   224                           ;incstack = 0
   225  007AE0  0E00               	movlw	0
   226  007AE2  6E95               	movwf	3989,c	;volatile
   227                           
   228                           ;secuencia_main.c: 35: LATD = 0;
   229  007AE4  0E00               	movlw	0
   230  007AE6  6E8C               	movwf	3980,c	;volatile
   231                           
   232                           ;secuencia_main.c: 36: TRISBbits.TRISB7 = 1;
   233  007AE8  8E93               	bsf	3987,7,c	;volatile
   234                           
   235                           ;secuencia_main.c: 37: TRISBbits.TRISB6 = 0;
   236  007AEA  9C93               	bcf	3987,6,c	;volatile
   237                           
   238                           ;secuencia_main.c: 38: INTCON2bits.RBPU = 0;
   239  007AEC  9EF1               	bcf	intcon2,7,c	;volatile
   240  007AEE                     l854:
   241                           
   242                           ;secuencia_main.c: 41: if (!PORTBbits.RB7) {
   243  007AEE  BE81               	btfsc	3969,7,c	;volatile
   244  007AF0  D01B               	goto	l872
   245                           
   246                           ;secuencia_main.c: 42: _delay((unsigned long)((50)*(8000000/4000.0)));
   247  007AF2  0E82               	movlw	130
   248  007AF4  6E0A               	movwf	??_main& (0+255),c
   249  007AF6  0EDE               	movlw	222
   250  007AF8                     u417:
   251  007AF8  2EE8               	decfsz	wreg,f,c
   252  007AFA  D7FE               	bra	u417
   253  007AFC  2E0A               	decfsz	??_main& (0+255),f,c
   254  007AFE  D7FC               	bra	u417
   255                           
   256                           ;secuencia_main.c: 43: if(++efecto==5){efecto=1;}
   257  007B00  2A0F               	incf	_efecto,f,c
   258  007B02  0E05               	movlw	5
   259  007B04  180F               	xorwf	_efecto,w,c
   260  007B06  A4D8               	btfss	status,2,c
   261  007B08  D00F               	goto	l872
   262  007B0A  0E01               	movlw	1
   263  007B0C  6E0F               	movwf	_efecto,c
   264                           
   265                           ;secuencia_main.c: 44: }
   266                           ;secuencia_main.c: 46: switch (efecto) {
   267  007B0E  D00C               	goto	l872
   268  007B10                     l862:
   269  007B10  ECA2  F03D         	call	_secuencial_Efecto1	;wreg free
   270                           
   271                           ;secuencia_main.c: 48: break;
   272  007B14  D7EC               	goto	l854
   273  007B16                     l864:
   274  007B16  ECB2  F03E         	call	_secuencial_Efecto2	;wreg free
   275                           
   276                           ;secuencia_main.c: 50: break;
   277  007B1A  D7E9               	goto	l854
   278  007B1C                     l866:
   279  007B1C  EC2A  F03E         	call	_secuencial_Efecto3	;wreg free
   280                           
   281                           ;secuencia_main.c: 52: break;
   282  007B20  D7E6               	goto	l854
   283  007B22                     l868:
   284  007B22  EC4C  F03F         	call	_secuencial_Efecto4	;wreg free
   285                           
   286                           ;secuencia_main.c: 55: }
   287                           
   288                           ;secuencia_main.c: 54: break;
   289  007B26  D7E3               	goto	l854
   290  007B28                     l872:
   291  007B28  500F               	movf	_efecto,w,c
   292                           
   293                           ; Switch size 1, requested type "space"
   294                           ; Number of cases is 4, Range of values is 1 to 4
   295                           ; switch strategies available:
   296                           ; Name         Instructions Cycles
   297                           ; simple_byte           13     7 (average)
   298                           ;	Chosen strategy is simple_byte
   299  007B2A  0A01               	xorlw	1	; case 1
   300  007B2C  B4D8               	btfsc	status,2,c
   301  007B2E  D7F0               	goto	l862
   302  007B30  0A03               	xorlw	3	; case 2
   303  007B32  B4D8               	btfsc	status,2,c
   304  007B34  D7F0               	goto	l864
   305  007B36  0A01               	xorlw	1	; case 3
   306  007B38  B4D8               	btfsc	status,2,c
   307  007B3A  D7F0               	goto	l866
   308  007B3C  0A07               	xorlw	7	; case 4
   309  007B3E  B4D8               	btfsc	status,2,c
   310  007B40  D7F0               	goto	l868
   311  007B42  D7D5               	goto	l854
   312  007B44                     __end_of_main:
   313                           	opt stack 0
   314                           tblptru	equ	0xFF8
   315                           tblptrh	equ	0xFF7
   316                           tblptrl	equ	0xFF6
   317                           tablat	equ	0xFF5
   318                           intcon2	equ	0xFF1
   319                           postinc0	equ	0xFEE
   320                           wreg	equ	0xFE8
   321                           postdec1	equ	0xFE5
   322                           fsr1l	equ	0xFE1
   323                           status	equ	0xFD8
   324                           
   325 ;; *************** function _secuencial_Efecto4 *****************
   326 ;; Defined at:
   327 ;;		line 105 in file "secuencia_main.c"
   328 ;; Parameters:    Size  Location     Type
   329 ;;		None
   330 ;; Auto vars:     Size  Location     Type
   331 ;;  i               2    3[COMRAM] int 
   332 ;;  n               2    7[COMRAM] volatile unsigned int 
   333 ;;  m               2    5[COMRAM] volatile unsigned int 
   334 ;; Return value:  Size  Location     Type
   335 ;;                  1    wreg      void 
   336 ;; Registers used:
   337 ;;		wreg, status,2, status,0
   338 ;; Tracked objects:
   339 ;;		On entry : 0/0
   340 ;;		On exit  : 0/0
   341 ;;		Unchanged: 0/0
   342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   343 ;;      Params:         0       0       0       0       0       0       0       0       0
   344 ;;      Locals:         6       0       0       0       0       0       0       0       0
   345 ;;      Temps:          3       0       0       0       0       0       0       0       0
   346 ;;      Totals:         9       0       0       0       0       0       0       0       0
   347 ;;Total ram usage:        9 bytes
   348 ;; Hardware stack levels used:    1
   349 ;; This function calls:
   350 ;;		Nothing
   351 ;; This function is called by:
   352 ;;		_main
   353 ;; This function uses a non-reentrant model
   354 ;;
   355                           
   356                           	psect	text1
   357  007E98                     __ptext1:
   358                           	opt stack 0
   359  007E98                     _secuencial_Efecto4:
   360                           	opt stack 30
   361                           
   362                           ;secuencia_main.c: 106: volatile unsigned int m=0,n=0;
   363                           
   364                           ;incstack = 0
   365  007E98  0E00               	movlw	0
   366  007E9A  6E07               	movwf	secuencial_Efecto4@m+1,c	;volatile
   367  007E9C  0E00               	movlw	0
   368  007E9E  6E06               	movwf	secuencial_Efecto4@m,c	;volatile
   369  007EA0  0E00               	movlw	0
   370  007EA2  6E09               	movwf	secuencial_Efecto4@n+1,c	;volatile
   371  007EA4  0E00               	movlw	0
   372  007EA6  6E08               	movwf	secuencial_Efecto4@n,c	;volatile
   373                           
   374                           ;secuencia_main.c: 107: for (int i = 0; i < 5; i++) {
   375  007EA8  0E00               	movlw	0
   376  007EAA  6E05               	movwf	secuencial_Efecto4@i+1,c
   377  007EAC  0E00               	movlw	0
   378  007EAE  6E04               	movwf	secuencial_Efecto4@i,c
   379  007EB0  BE05               	btfsc	secuencial_Efecto4@i+1,7,c
   380  007EB2  D008               	goto	l818
   381  007EB4  5005               	movf	secuencial_Efecto4@i+1,w,c
   382  007EB6  E105               	bnz	u290
   383  007EB8  0E05               	movlw	5
   384  007EBA  5C04               	subwf	secuencial_Efecto4@i,w,c
   385  007EBC  B0D8               	btfsc	status,0,c
   386  007EBE  0012               	return	
   387  007EC0  D001               	goto	l818
   388  007EC2                     u290:
   389  007EC2  0012               	return	
   390  007EC4                     l818:
   391                           
   392                           ;secuencia_main.c: 108: LATD = m+n;
   393  007EC4  5006               	movf	secuencial_Efecto4@m,w,c	;volatile
   394  007EC6  2408               	addwf	secuencial_Efecto4@n,w,c	;volatile
   395  007EC8  6E8C               	movwf	3980,c	;volatile
   396                           
   397                           ;secuencia_main.c: 109: m += (1 << i) & 0x0f;
   398  007ECA  C004  F001         	movff	secuencial_Efecto4@i,??_secuencial_Efecto4
   399  007ECE  0E01               	movlw	1
   400  007ED0  6E02               	movwf	(??_secuencial_Efecto4+1)& (0+255),c
   401  007ED2  0E00               	movlw	0
   402  007ED4  6E03               	movwf	(??_secuencial_Efecto4+2)& (0+255),c
   403  007ED6  2A01               	incf	??_secuencial_Efecto4,f,c
   404  007ED8  D003               	goto	u304
   405  007EDA                     u305:
   406  007EDA  90D8               	bcf	status,0,c
   407  007EDC  3602               	rlcf	??_secuencial_Efecto4+1,f,c
   408  007EDE  3603               	rlcf	??_secuencial_Efecto4+2,f,c
   409  007EE0                     u304:
   410  007EE0  2E01               	decfsz	??_secuencial_Efecto4,f,c
   411  007EE2  D7FB               	goto	u305
   412  007EE4  0E0F               	movlw	15
   413  007EE6  1602               	andwf	??_secuencial_Efecto4+1,f,c
   414  007EE8  0E00               	movlw	0
   415  007EEA  1603               	andwf	??_secuencial_Efecto4+2,f,c
   416  007EEC  5002               	movf	??_secuencial_Efecto4+1,w,c
   417  007EEE  2606               	addwf	secuencial_Efecto4@m,f,c	;volatile
   418  007EF0  5003               	movf	??_secuencial_Efecto4+2,w,c
   419  007EF2  2207               	addwfc	secuencial_Efecto4@m+1,f,c	;volatile
   420                           
   421                           ;secuencia_main.c: 110: n += (1 << (7-i)) & 0xf0;
   422  007EF4  5004               	movf	secuencial_Efecto4@i,w,c
   423  007EF6  0800               	sublw	0
   424  007EF8  6E01               	movwf	??_secuencial_Efecto4& (0+255),c
   425  007EFA  0E07               	movlw	7
   426  007EFC  2601               	addwf	??_secuencial_Efecto4,f,c
   427  007EFE  0E01               	movlw	1
   428  007F00  6E02               	movwf	(??_secuencial_Efecto4+1)& (0+255),c
   429  007F02  0E00               	movlw	0
   430  007F04  6E03               	movwf	(??_secuencial_Efecto4+2)& (0+255),c
   431  007F06  2A01               	incf	??_secuencial_Efecto4,f,c
   432  007F08  D003               	goto	u314
   433  007F0A                     u315:
   434  007F0A  90D8               	bcf	status,0,c
   435  007F0C  3602               	rlcf	??_secuencial_Efecto4+1,f,c
   436  007F0E  3603               	rlcf	??_secuencial_Efecto4+2,f,c
   437  007F10                     u314:
   438  007F10  2E01               	decfsz	??_secuencial_Efecto4,f,c
   439  007F12  D7FB               	goto	u315
   440  007F14  0EF0               	movlw	240
   441  007F16  1602               	andwf	??_secuencial_Efecto4+1,f,c
   442  007F18  0E00               	movlw	0
   443  007F1A  1603               	andwf	??_secuencial_Efecto4+2,f,c
   444  007F1C  5002               	movf	??_secuencial_Efecto4+1,w,c
   445  007F1E  2608               	addwf	secuencial_Efecto4@n,f,c	;volatile
   446  007F20  5003               	movf	??_secuencial_Efecto4+2,w,c
   447  007F22  2209               	addwfc	secuencial_Efecto4@n+1,f,c	;volatile
   448                           
   449                           ;secuencia_main.c: 111: if(velocidad==1){_delay((unsigned long)((50)*(8000000/4000.0)));
      +                          }
   450  007F24  040B               	decf	_velocidad,w,c
   451  007F26  100C               	iorwf	_velocidad+1,w,c
   452  007F28  100D               	iorwf	_velocidad+2,w,c
   453  007F2A  100E               	iorwf	_velocidad+3,w,c
   454  007F2C  A4D8               	btfss	status,2,c
   455  007F2E  D008               	goto	l822
   456  007F30  0E82               	movlw	130
   457  007F32  6E01               	movwf	??_secuencial_Efecto4& (0+255),c
   458  007F34  0EDE               	movlw	222
   459  007F36                     u427:
   460  007F36  2EE8               	decfsz	wreg,f,c
   461  007F38  D7FE               	bra	u427
   462  007F3A  2E01               	decfsz	??_secuencial_Efecto4& (0+255),f,c
   463  007F3C  D7FC               	bra	u427
   464  007F3E  D03A               	goto	l834
   465  007F40                     l822:
   466                           
   467                           ;secuencia_main.c: 112: else if(velocidad==2){_delay((unsigned long)((100)*(8000000/4000
      +                          .0)));}
   468  007F40  0E02               	movlw	2
   469  007F42  180B               	xorwf	_velocidad,w,c
   470  007F44  100C               	iorwf	_velocidad+1,w,c
   471  007F46  100D               	iorwf	_velocidad+2,w,c
   472  007F48  100E               	iorwf	_velocidad+3,w,c
   473  007F4A  A4D8               	btfss	status,2,c
   474  007F4C  D00D               	goto	l826
   475  007F4E  0E02               	movlw	2
   476  007F50  6E02               	movwf	(??_secuencial_Efecto4+1)& (0+255),c
   477  007F52  0E04               	movlw	4
   478  007F54  6E01               	movwf	??_secuencial_Efecto4& (0+255),c
   479  007F56  0EBA               	movlw	186
   480  007F58                     u437:
   481  007F58  2EE8               	decfsz	wreg,f,c
   482  007F5A  D7FE               	bra	u437
   483  007F5C  2E01               	decfsz	??_secuencial_Efecto4& (0+255),f,c
   484  007F5E  D7FC               	bra	u437
   485  007F60  2E02               	decfsz	(??_secuencial_Efecto4+1)& (0+255),f,c
   486  007F62  D7FA               	bra	u437
   487  007F64  D000               	nop2	
   488  007F66  D026               	goto	l834
   489  007F68                     l826:
   490                           
   491                           ;secuencia_main.c: 113: else if(velocidad==3){_delay((unsigned long)((200)*(8000000/4000
      +                          .0)));}
   492  007F68  0E03               	movlw	3
   493  007F6A  180B               	xorwf	_velocidad,w,c
   494  007F6C  100C               	iorwf	_velocidad+1,w,c
   495  007F6E  100D               	iorwf	_velocidad+2,w,c
   496  007F70  100E               	iorwf	_velocidad+3,w,c
   497  007F72  A4D8               	btfss	status,2,c
   498  007F74  D00C               	goto	l830
   499  007F76  0E03               	movlw	3
   500  007F78  6E02               	movwf	(??_secuencial_Efecto4+1)& (0+255),c
   501  007F7A  0E08               	movlw	8
   502  007F7C  6E01               	movwf	??_secuencial_Efecto4& (0+255),c
   503  007F7E  0E77               	movlw	119
   504  007F80                     u447:
   505  007F80  2EE8               	decfsz	wreg,f,c
   506  007F82  D7FE               	bra	u447
   507  007F84  2E01               	decfsz	??_secuencial_Efecto4& (0+255),f,c
   508  007F86  D7FC               	bra	u447
   509  007F88  2E02               	decfsz	(??_secuencial_Efecto4+1)& (0+255),f,c
   510  007F8A  D7FA               	bra	u447
   511  007F8C  D012               	goto	L1
   512  007F8E                     l830:
   513                           
   514                           ;secuencia_main.c: 114: else if(velocidad==4){_delay((unsigned long)((400)*(8000000/4000
      +                          .0)));}
   515  007F8E  0E04               	movlw	4
   516  007F90  180B               	xorwf	_velocidad,w,c
   517  007F92  100C               	iorwf	_velocidad+1,w,c
   518  007F94  100D               	iorwf	_velocidad+2,w,c
   519  007F96  100E               	iorwf	_velocidad+3,w,c
   520  007F98  A4D8               	btfss	status,2,c
   521  007F9A  D00C               	goto	l834
   522  007F9C  0E05               	movlw	5
   523  007F9E  6E02               	movwf	(??_secuencial_Efecto4+1)& (0+255),c
   524  007FA0  0E0F               	movlw	15
   525  007FA2  6E01               	movwf	??_secuencial_Efecto4& (0+255),c
   526  007FA4  0EF1               	movlw	241
   527  007FA6                     u457:
   528  007FA6  2EE8               	decfsz	wreg,f,c
   529  007FA8  D7FE               	bra	u457
   530  007FAA  2E01               	decfsz	??_secuencial_Efecto4& (0+255),f,c
   531  007FAC  D7FC               	bra	u457
   532  007FAE  2E02               	decfsz	(??_secuencial_Efecto4+1)& (0+255),f,c
   533  007FB0  D7FA               	bra	u457
   534  007FB2                     L1:
   535  007FB2  F000               	nop	
   536  007FB4                     l834:
   537                           
   538                           ;secuencia_main.c: 116: if (!PORTBbits.RB6) {
   539  007FB4  BC81               	btfsc	3969,6,c	;volatile
   540  007FB6  D01C               	goto	l842
   541                           
   542                           ;secuencia_main.c: 117: _delay((unsigned long)((50)*(8000000/4000.0)));
   543  007FB8  0E82               	movlw	130
   544  007FBA  6E01               	movwf	??_secuencial_Efecto4& (0+255),c
   545  007FBC  0EDE               	movlw	222
   546  007FBE                     u467:
   547  007FBE  2EE8               	decfsz	wreg,f,c
   548  007FC0  D7FE               	bra	u467
   549  007FC2  2E01               	decfsz	??_secuencial_Efecto4& (0+255),f,c
   550  007FC4  D7FC               	bra	u467
   551                           
   552                           ;secuencia_main.c: 118: if(++velocidad==5){velocidad=1;}
   553  007FC6  0E01               	movlw	1
   554  007FC8  260B               	addwf	_velocidad,f,c
   555  007FCA  0E00               	movlw	0
   556  007FCC  220C               	addwfc	_velocidad+1,f,c
   557  007FCE  220D               	addwfc	_velocidad+2,f,c
   558  007FD0  220E               	addwfc	_velocidad+3,f,c
   559  007FD2  0E05               	movlw	5
   560  007FD4  180B               	xorwf	_velocidad,w,c
   561  007FD6  100C               	iorwf	_velocidad+1,w,c
   562  007FD8  100D               	iorwf	_velocidad+2,w,c
   563  007FDA  100E               	iorwf	_velocidad+3,w,c
   564  007FDC  A4D8               	btfss	status,2,c
   565  007FDE  D008               	goto	l842
   566  007FE0  0E01               	movlw	1
   567  007FE2  6E0B               	movwf	_velocidad,c
   568  007FE4  0E00               	movlw	0
   569  007FE6  6E0C               	movwf	_velocidad+1,c
   570  007FE8  0E00               	movlw	0
   571  007FEA  6E0D               	movwf	_velocidad+2,c
   572  007FEC  0E00               	movlw	0
   573  007FEE  6E0E               	movwf	_velocidad+3,c
   574  007FF0                     l842:
   575  007FF0  4A04               	infsnz	secuencial_Efecto4@i,f,c
   576  007FF2  2A05               	incf	secuencial_Efecto4@i+1,f,c
   577  007FF4  BE05               	btfsc	secuencial_Efecto4@i+1,7,c
   578  007FF6  D766               	goto	l818
   579  007FF8  5005               	movf	secuencial_Efecto4@i+1,w,c
   580  007FFA  E101               	bnz	l94
   581  007FFC  D75D               	goto	L2
   582  007FFE                     l94:
   583  007FFE  0012               	return		;funcret
   584  008000                     __end_of_secuencial_Efecto4:
   585                           	opt stack 0
   586                           tblptru	equ	0xFF8
   587                           tblptrh	equ	0xFF7
   588                           tblptrl	equ	0xFF6
   589                           tablat	equ	0xFF5
   590                           intcon2	equ	0xFF1
   591                           postinc0	equ	0xFEE
   592                           wreg	equ	0xFE8
   593                           postdec1	equ	0xFE5
   594                           fsr1l	equ	0xFE1
   595                           status	equ	0xFD8
   596                           
   597 ;; *************** function _secuencial_Efecto3 *****************
   598 ;; Defined at:
   599 ;;		line 90 in file "secuencia_main.c"
   600 ;; Parameters:    Size  Location     Type
   601 ;;		None
   602 ;; Auto vars:     Size  Location     Type
   603 ;;  i               2    2[COMRAM] int 
   604 ;; Return value:  Size  Location     Type
   605 ;;                  1    wreg      void 
   606 ;; Registers used:
   607 ;;		wreg, status,2, status,0
   608 ;; Tracked objects:
   609 ;;		On entry : 0/0
   610 ;;		On exit  : 0/0
   611 ;;		Unchanged: 0/0
   612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   613 ;;      Params:         0       0       0       0       0       0       0       0       0
   614 ;;      Locals:         2       0       0       0       0       0       0       0       0
   615 ;;      Temps:          2       0       0       0       0       0       0       0       0
   616 ;;      Totals:         4       0       0       0       0       0       0       0       0
   617 ;;Total ram usage:        4 bytes
   618 ;; Hardware stack levels used:    1
   619 ;; This function calls:
   620 ;;		Nothing
   621 ;; This function is called by:
   622 ;;		_main
   623 ;; This function uses a non-reentrant model
   624 ;;
   625                           
   626                           	psect	text2
   627  007C54                     __ptext2:
   628                           	opt stack 0
   629  007C54                     _secuencial_Efecto3:
   630                           	opt stack 30
   631                           
   632                           ;secuencia_main.c: 91: for (int i = 0; i < 9; i++) {
   633                           
   634                           ;incstack = 0
   635  007C54  0E00               	movlw	0
   636  007C56  6E04               	movwf	secuencial_Efecto3@i+1,c
   637  007C58  0E00               	movlw	0
   638  007C5A  6E03               	movwf	secuencial_Efecto3@i,c
   639  007C5C  BE04               	btfsc	secuencial_Efecto3@i+1,7,c
   640  007C5E  D008               	goto	l784
   641  007C60  5004               	movf	secuencial_Efecto3@i+1,w,c
   642  007C62  E105               	bnz	u200
   643  007C64  0E09               	movlw	9
   644  007C66  5C03               	subwf	secuencial_Efecto3@i,w,c
   645  007C68  B0D8               	btfsc	status,0,c
   646  007C6A  0012               	return	
   647  007C6C  D001               	goto	l784
   648  007C6E                     u200:
   649  007C6E  0012               	return	
   650  007C70                     l784:
   651                           
   652                           ;secuencia_main.c: 92: LATD = (1 << i) - 1;
   653  007C70  C003  F001         	movff	secuencial_Efecto3@i,??_secuencial_Efecto3
   654  007C74  0E01               	movlw	1
   655  007C76  6E02               	movwf	(??_secuencial_Efecto3+1)& (0+255),c
   656  007C78  2A01               	incf	??_secuencial_Efecto3,f,c
   657  007C7A  D002               	goto	u214
   658  007C7C                     u215:
   659  007C7C  90D8               	bcf	status,0,c
   660  007C7E  3602               	rlcf	??_secuencial_Efecto3+1,f,c
   661  007C80                     u214:
   662  007C80  2E01               	decfsz	??_secuencial_Efecto3,f,c
   663  007C82  D7FC               	goto	u215
   664  007C84  0402               	decf	??_secuencial_Efecto3+1,w,c
   665  007C86  6E8C               	movwf	3980,c	;volatile
   666                           
   667                           ;secuencia_main.c: 93: if(velocidad==1){_delay((unsigned long)((50)*(8000000/4000.0)));}
   668  007C88  040B               	decf	_velocidad,w,c
   669  007C8A  100C               	iorwf	_velocidad+1,w,c
   670  007C8C  100D               	iorwf	_velocidad+2,w,c
   671  007C8E  100E               	iorwf	_velocidad+3,w,c
   672  007C90  A4D8               	btfss	status,2,c
   673  007C92  D008               	goto	l788
   674  007C94  0E82               	movlw	130
   675  007C96  6E01               	movwf	??_secuencial_Efecto3& (0+255),c
   676  007C98  0EDE               	movlw	222
   677  007C9A                     u477:
   678  007C9A  2EE8               	decfsz	wreg,f,c
   679  007C9C  D7FE               	bra	u477
   680  007C9E  2E01               	decfsz	??_secuencial_Efecto3& (0+255),f,c
   681  007CA0  D7FC               	bra	u477
   682  007CA2  D03A               	goto	l800
   683  007CA4                     l788:
   684                           
   685                           ;secuencia_main.c: 94: else if(velocidad==2){_delay((unsigned long)((100)*(8000000/4000.
      +                          0)));}
   686  007CA4  0E02               	movlw	2
   687  007CA6  180B               	xorwf	_velocidad,w,c
   688  007CA8  100C               	iorwf	_velocidad+1,w,c
   689  007CAA  100D               	iorwf	_velocidad+2,w,c
   690  007CAC  100E               	iorwf	_velocidad+3,w,c
   691  007CAE  A4D8               	btfss	status,2,c
   692  007CB0  D00D               	goto	l792
   693  007CB2  0E02               	movlw	2
   694  007CB4  6E02               	movwf	(??_secuencial_Efecto3+1)& (0+255),c
   695  007CB6  0E04               	movlw	4
   696  007CB8  6E01               	movwf	??_secuencial_Efecto3& (0+255),c
   697  007CBA  0EBA               	movlw	186
   698  007CBC                     u487:
   699  007CBC  2EE8               	decfsz	wreg,f,c
   700  007CBE  D7FE               	bra	u487
   701  007CC0  2E01               	decfsz	??_secuencial_Efecto3& (0+255),f,c
   702  007CC2  D7FC               	bra	u487
   703  007CC4  2E02               	decfsz	(??_secuencial_Efecto3+1)& (0+255),f,c
   704  007CC6  D7FA               	bra	u487
   705  007CC8  D000               	nop2	
   706  007CCA  D026               	goto	l800
   707  007CCC                     l792:
   708                           
   709                           ;secuencia_main.c: 95: else if(velocidad==3){_delay((unsigned long)((200)*(8000000/4000.
      +                          0)));}
   710  007CCC  0E03               	movlw	3
   711  007CCE  180B               	xorwf	_velocidad,w,c
   712  007CD0  100C               	iorwf	_velocidad+1,w,c
   713  007CD2  100D               	iorwf	_velocidad+2,w,c
   714  007CD4  100E               	iorwf	_velocidad+3,w,c
   715  007CD6  A4D8               	btfss	status,2,c
   716  007CD8  D00C               	goto	l796
   717  007CDA  0E03               	movlw	3
   718  007CDC  6E02               	movwf	(??_secuencial_Efecto3+1)& (0+255),c
   719  007CDE  0E08               	movlw	8
   720  007CE0  6E01               	movwf	??_secuencial_Efecto3& (0+255),c
   721  007CE2  0E77               	movlw	119
   722  007CE4                     u497:
   723  007CE4  2EE8               	decfsz	wreg,f,c
   724  007CE6  D7FE               	bra	u497
   725  007CE8  2E01               	decfsz	??_secuencial_Efecto3& (0+255),f,c
   726  007CEA  D7FC               	bra	u497
   727  007CEC  2E02               	decfsz	(??_secuencial_Efecto3+1)& (0+255),f,c
   728  007CEE  D7FA               	bra	u497
   729  007CF0  D012               	goto	L3
   730  007CF2                     l796:
   731                           
   732                           ;secuencia_main.c: 96: else if(velocidad==4){_delay((unsigned long)((400)*(8000000/4000.
      +                          0)));}
   733  007CF2  0E04               	movlw	4
   734  007CF4  180B               	xorwf	_velocidad,w,c
   735  007CF6  100C               	iorwf	_velocidad+1,w,c
   736  007CF8  100D               	iorwf	_velocidad+2,w,c
   737  007CFA  100E               	iorwf	_velocidad+3,w,c
   738  007CFC  A4D8               	btfss	status,2,c
   739  007CFE  D00C               	goto	l800
   740  007D00  0E05               	movlw	5
   741  007D02  6E02               	movwf	(??_secuencial_Efecto3+1)& (0+255),c
   742  007D04  0E0F               	movlw	15
   743  007D06  6E01               	movwf	??_secuencial_Efecto3& (0+255),c
   744  007D08  0EF1               	movlw	241
   745  007D0A                     u507:
   746  007D0A  2EE8               	decfsz	wreg,f,c
   747  007D0C  D7FE               	bra	u507
   748  007D0E  2E01               	decfsz	??_secuencial_Efecto3& (0+255),f,c
   749  007D10  D7FC               	bra	u507
   750  007D12  2E02               	decfsz	(??_secuencial_Efecto3+1)& (0+255),f,c
   751  007D14  D7FA               	bra	u507
   752  007D16                     L3:
   753  007D16  F000               	nop	
   754  007D18                     l800:
   755                           
   756                           ;secuencia_main.c: 98: if (!PORTBbits.RB6) {
   757  007D18  BC81               	btfsc	3969,6,c	;volatile
   758  007D1A  D01C               	goto	l808
   759                           
   760                           ;secuencia_main.c: 99: _delay((unsigned long)((50)*(8000000/4000.0)));
   761  007D1C  0E82               	movlw	130
   762  007D1E  6E01               	movwf	??_secuencial_Efecto3& (0+255),c
   763  007D20  0EDE               	movlw	222
   764  007D22                     u517:
   765  007D22  2EE8               	decfsz	wreg,f,c
   766  007D24  D7FE               	bra	u517
   767  007D26  2E01               	decfsz	??_secuencial_Efecto3& (0+255),f,c
   768  007D28  D7FC               	bra	u517
   769                           
   770                           ;secuencia_main.c: 100: if(++velocidad==5){velocidad=1;}
   771  007D2A  0E01               	movlw	1
   772  007D2C  260B               	addwf	_velocidad,f,c
   773  007D2E  0E00               	movlw	0
   774  007D30  220C               	addwfc	_velocidad+1,f,c
   775  007D32  220D               	addwfc	_velocidad+2,f,c
   776  007D34  220E               	addwfc	_velocidad+3,f,c
   777  007D36  0E05               	movlw	5
   778  007D38  180B               	xorwf	_velocidad,w,c
   779  007D3A  100C               	iorwf	_velocidad+1,w,c
   780  007D3C  100D               	iorwf	_velocidad+2,w,c
   781  007D3E  100E               	iorwf	_velocidad+3,w,c
   782  007D40  A4D8               	btfss	status,2,c
   783  007D42  D008               	goto	l808
   784  007D44  0E01               	movlw	1
   785  007D46  6E0B               	movwf	_velocidad,c
   786  007D48  0E00               	movlw	0
   787  007D4A  6E0C               	movwf	_velocidad+1,c
   788  007D4C  0E00               	movlw	0
   789  007D4E  6E0D               	movwf	_velocidad+2,c
   790  007D50  0E00               	movlw	0
   791  007D52  6E0E               	movwf	_velocidad+3,c
   792  007D54                     l808:
   793  007D54  4A03               	infsnz	secuencial_Efecto3@i,f,c
   794  007D56  2A04               	incf	secuencial_Efecto3@i+1,f,c
   795  007D58  BE04               	btfsc	secuencial_Efecto3@i+1,7,c
   796  007D5A  D78A               	goto	l784
   797  007D5C  5004               	movf	secuencial_Efecto3@i+1,w,c
   798  007D5E  E101               	bnz	l80
   799  007D60  D781               	goto	L4
   800  007D62                     l80:
   801  007D62  0012               	return		;funcret
   802  007D64                     __end_of_secuencial_Efecto3:
   803                           	opt stack 0
   804                           tblptru	equ	0xFF8
   805                           tblptrh	equ	0xFF7
   806                           tblptrl	equ	0xFF6
   807                           tablat	equ	0xFF5
   808                           intcon2	equ	0xFF1
   809                           postinc0	equ	0xFEE
   810                           wreg	equ	0xFE8
   811                           postdec1	equ	0xFE5
   812                           fsr1l	equ	0xFE1
   813                           status	equ	0xFD8
   814                           
   815 ;; *************** function _secuencial_Efecto2 *****************
   816 ;; Defined at:
   817 ;;		line 75 in file "secuencia_main.c"
   818 ;; Parameters:    Size  Location     Type
   819 ;;		None
   820 ;; Auto vars:     Size  Location     Type
   821 ;;  i               2    6[COMRAM] int 
   822 ;;  j               2    4[COMRAM] int 
   823 ;; Return value:  Size  Location     Type
   824 ;;                  1    wreg      void 
   825 ;; Registers used:
   826 ;;		wreg, status,2, status,0
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   832 ;;      Params:         0       0       0       0       0       0       0       0       0
   833 ;;      Locals:         4       0       0       0       0       0       0       0       0
   834 ;;      Temps:          4       0       0       0       0       0       0       0       0
   835 ;;      Totals:         8       0       0       0       0       0       0       0       0
   836 ;;Total ram usage:        8 bytes
   837 ;; Hardware stack levels used:    1
   838 ;; This function calls:
   839 ;;		Nothing
   840 ;; This function is called by:
   841 ;;		_main
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           	psect	text3
   846  007D64                     __ptext3:
   847                           	opt stack 0
   848  007D64                     _secuencial_Efecto2:
   849                           	opt stack 30
   850                           
   851                           ;secuencia_main.c: 76: for (int i = 0, j = 7; i < 8; i++, j--) {
   852                           
   853                           ;incstack = 0
   854  007D64  0E00               	movlw	0
   855  007D66  6E08               	movwf	secuencial_Efecto2@i+1,c
   856  007D68  0E00               	movlw	0
   857  007D6A  6E07               	movwf	secuencial_Efecto2@i,c
   858  007D6C  0E00               	movlw	0
   859  007D6E  6E06               	movwf	secuencial_Efecto2@j+1,c
   860  007D70  0E07               	movlw	7
   861  007D72  6E05               	movwf	secuencial_Efecto2@j,c
   862  007D74  BE08               	btfsc	secuencial_Efecto2@i+1,7,c
   863  007D76  D008               	goto	l748
   864  007D78  5008               	movf	secuencial_Efecto2@i+1,w,c
   865  007D7A  E105               	bnz	u100
   866  007D7C  0E08               	movlw	8
   867  007D7E  5C07               	subwf	secuencial_Efecto2@i,w,c
   868  007D80  B0D8               	btfsc	status,0,c
   869  007D82  0012               	return	
   870  007D84  D001               	goto	l748
   871  007D86                     u100:
   872  007D86  0012               	return	
   873  007D88                     l748:
   874                           
   875                           ;secuencia_main.c: 77: LATD = (1 << i) + (1 << j);
   876  007D88  C005  F001         	movff	secuencial_Efecto2@j,??_secuencial_Efecto2
   877  007D8C  0E01               	movlw	1
   878  007D8E  6E02               	movwf	(??_secuencial_Efecto2+1)& (0+255),c
   879  007D90  2A01               	incf	??_secuencial_Efecto2,f,c
   880  007D92  D002               	goto	u114
   881  007D94                     u115:
   882  007D94  90D8               	bcf	status,0,c
   883  007D96  3602               	rlcf	??_secuencial_Efecto2+1,f,c
   884  007D98                     u114:
   885  007D98  2E01               	decfsz	??_secuencial_Efecto2,f,c
   886  007D9A  D7FC               	goto	u115
   887  007D9C  C007  F003         	movff	secuencial_Efecto2@i,??_secuencial_Efecto2+2
   888  007DA0  0E01               	movlw	1
   889  007DA2  6E04               	movwf	(??_secuencial_Efecto2+3)& (0+255),c
   890  007DA4  2A03               	incf	??_secuencial_Efecto2+2,f,c
   891  007DA6  D002               	goto	u124
   892  007DA8                     u125:
   893  007DA8  90D8               	bcf	status,0,c
   894  007DAA  3604               	rlcf	??_secuencial_Efecto2+3,f,c
   895  007DAC                     u124:
   896  007DAC  2E03               	decfsz	??_secuencial_Efecto2+2,f,c
   897  007DAE  D7FC               	goto	u125
   898  007DB0  5004               	movf	??_secuencial_Efecto2+3,w,c
   899  007DB2  2402               	addwf	??_secuencial_Efecto2+1,w,c
   900  007DB4  6E8C               	movwf	3980,c	;volatile
   901                           
   902                           ;secuencia_main.c: 78: if(velocidad==1){_delay((unsigned long)((50)*(8000000/4000.0)));}
   903  007DB6  040B               	decf	_velocidad,w,c
   904  007DB8  100C               	iorwf	_velocidad+1,w,c
   905  007DBA  100D               	iorwf	_velocidad+2,w,c
   906  007DBC  100E               	iorwf	_velocidad+3,w,c
   907  007DBE  A4D8               	btfss	status,2,c
   908  007DC0  D008               	goto	l752
   909  007DC2  0E82               	movlw	130
   910  007DC4  6E01               	movwf	??_secuencial_Efecto2& (0+255),c
   911  007DC6  0EDE               	movlw	222
   912  007DC8                     u527:
   913  007DC8  2EE8               	decfsz	wreg,f,c
   914  007DCA  D7FE               	bra	u527
   915  007DCC  2E01               	decfsz	??_secuencial_Efecto2& (0+255),f,c
   916  007DCE  D7FC               	bra	u527
   917  007DD0  D03A               	goto	l764
   918  007DD2                     l752:
   919                           
   920                           ;secuencia_main.c: 79: else if(velocidad==2){_delay((unsigned long)((100)*(8000000/4000.
      +                          0)));}
   921  007DD2  0E02               	movlw	2
   922  007DD4  180B               	xorwf	_velocidad,w,c
   923  007DD6  100C               	iorwf	_velocidad+1,w,c
   924  007DD8  100D               	iorwf	_velocidad+2,w,c
   925  007DDA  100E               	iorwf	_velocidad+3,w,c
   926  007DDC  A4D8               	btfss	status,2,c
   927  007DDE  D00D               	goto	l756
   928  007DE0  0E02               	movlw	2
   929  007DE2  6E02               	movwf	(??_secuencial_Efecto2+1)& (0+255),c
   930  007DE4  0E04               	movlw	4
   931  007DE6  6E01               	movwf	??_secuencial_Efecto2& (0+255),c
   932  007DE8  0EBA               	movlw	186
   933  007DEA                     u537:
   934  007DEA  2EE8               	decfsz	wreg,f,c
   935  007DEC  D7FE               	bra	u537
   936  007DEE  2E01               	decfsz	??_secuencial_Efecto2& (0+255),f,c
   937  007DF0  D7FC               	bra	u537
   938  007DF2  2E02               	decfsz	(??_secuencial_Efecto2+1)& (0+255),f,c
   939  007DF4  D7FA               	bra	u537
   940  007DF6  D000               	nop2	
   941  007DF8  D026               	goto	l764
   942  007DFA                     l756:
   943                           
   944                           ;secuencia_main.c: 80: else if(velocidad==3){_delay((unsigned long)((200)*(8000000/4000.
      +                          0)));}
   945  007DFA  0E03               	movlw	3
   946  007DFC  180B               	xorwf	_velocidad,w,c
   947  007DFE  100C               	iorwf	_velocidad+1,w,c
   948  007E00  100D               	iorwf	_velocidad+2,w,c
   949  007E02  100E               	iorwf	_velocidad+3,w,c
   950  007E04  A4D8               	btfss	status,2,c
   951  007E06  D00C               	goto	l760
   952  007E08  0E03               	movlw	3
   953  007E0A  6E02               	movwf	(??_secuencial_Efecto2+1)& (0+255),c
   954  007E0C  0E08               	movlw	8
   955  007E0E  6E01               	movwf	??_secuencial_Efecto2& (0+255),c
   956  007E10  0E77               	movlw	119
   957  007E12                     u547:
   958  007E12  2EE8               	decfsz	wreg,f,c
   959  007E14  D7FE               	bra	u547
   960  007E16  2E01               	decfsz	??_secuencial_Efecto2& (0+255),f,c
   961  007E18  D7FC               	bra	u547
   962  007E1A  2E02               	decfsz	(??_secuencial_Efecto2+1)& (0+255),f,c
   963  007E1C  D7FA               	bra	u547
   964  007E1E  D012               	goto	L5
   965  007E20                     l760:
   966                           
   967                           ;secuencia_main.c: 81: else if(velocidad==4){_delay((unsigned long)((400)*(8000000/4000.
      +                          0)));}
   968  007E20  0E04               	movlw	4
   969  007E22  180B               	xorwf	_velocidad,w,c
   970  007E24  100C               	iorwf	_velocidad+1,w,c
   971  007E26  100D               	iorwf	_velocidad+2,w,c
   972  007E28  100E               	iorwf	_velocidad+3,w,c
   973  007E2A  A4D8               	btfss	status,2,c
   974  007E2C  D00C               	goto	l764
   975  007E2E  0E05               	movlw	5
   976  007E30  6E02               	movwf	(??_secuencial_Efecto2+1)& (0+255),c
   977  007E32  0E0F               	movlw	15
   978  007E34  6E01               	movwf	??_secuencial_Efecto2& (0+255),c
   979  007E36  0EF1               	movlw	241
   980  007E38                     u557:
   981  007E38  2EE8               	decfsz	wreg,f,c
   982  007E3A  D7FE               	bra	u557
   983  007E3C  2E01               	decfsz	??_secuencial_Efecto2& (0+255),f,c
   984  007E3E  D7FC               	bra	u557
   985  007E40  2E02               	decfsz	(??_secuencial_Efecto2+1)& (0+255),f,c
   986  007E42  D7FA               	bra	u557
   987  007E44                     L5:
   988  007E44  F000               	nop	
   989  007E46                     l764:
   990                           
   991                           ;secuencia_main.c: 83: if (!PORTBbits.RB6) {
   992  007E46  BC81               	btfsc	3969,6,c	;volatile
   993  007E48  D01C               	goto	l772
   994                           
   995                           ;secuencia_main.c: 84: _delay((unsigned long)((50)*(8000000/4000.0)));
   996  007E4A  0E82               	movlw	130
   997  007E4C  6E01               	movwf	??_secuencial_Efecto2& (0+255),c
   998  007E4E  0EDE               	movlw	222
   999  007E50                     u567:
  1000  007E50  2EE8               	decfsz	wreg,f,c
  1001  007E52  D7FE               	bra	u567
  1002  007E54  2E01               	decfsz	??_secuencial_Efecto2& (0+255),f,c
  1003  007E56  D7FC               	bra	u567
  1004                           
  1005                           ;secuencia_main.c: 85: if(++velocidad==5){velocidad=1;}
  1006  007E58  0E01               	movlw	1
  1007  007E5A  260B               	addwf	_velocidad,f,c
  1008  007E5C  0E00               	movlw	0
  1009  007E5E  220C               	addwfc	_velocidad+1,f,c
  1010  007E60  220D               	addwfc	_velocidad+2,f,c
  1011  007E62  220E               	addwfc	_velocidad+3,f,c
  1012  007E64  0E05               	movlw	5
  1013  007E66  180B               	xorwf	_velocidad,w,c
  1014  007E68  100C               	iorwf	_velocidad+1,w,c
  1015  007E6A  100D               	iorwf	_velocidad+2,w,c
  1016  007E6C  100E               	iorwf	_velocidad+3,w,c
  1017  007E6E  A4D8               	btfss	status,2,c
  1018  007E70  D008               	goto	l772
  1019  007E72  0E01               	movlw	1
  1020  007E74  6E0B               	movwf	_velocidad,c
  1021  007E76  0E00               	movlw	0
  1022  007E78  6E0C               	movwf	_velocidad+1,c
  1023  007E7A  0E00               	movlw	0
  1024  007E7C  6E0D               	movwf	_velocidad+2,c
  1025  007E7E  0E00               	movlw	0
  1026  007E80  6E0E               	movwf	_velocidad+3,c
  1027  007E82                     l772:
  1028  007E82  4A07               	infsnz	secuencial_Efecto2@i,f,c
  1029  007E84  2A08               	incf	secuencial_Efecto2@i+1,f,c
  1030  007E86  0605               	decf	secuencial_Efecto2@j,f,c
  1031  007E88  A0D8               	btfss	status,0,c
  1032  007E8A  0606               	decf	secuencial_Efecto2@j+1,f,c
  1033  007E8C  BE08               	btfsc	secuencial_Efecto2@i+1,7,c
  1034  007E8E  D77C               	goto	l748
  1035  007E90  5008               	movf	secuencial_Efecto2@i+1,w,c
  1036  007E92  E101               	bnz	l66
  1037  007E94  D773               	goto	L6
  1038  007E96                     l66:
  1039  007E96  0012               	return		;funcret
  1040  007E98                     __end_of_secuencial_Efecto2:
  1041                           	opt stack 0
  1042                           tblptru	equ	0xFF8
  1043                           tblptrh	equ	0xFF7
  1044                           tblptrl	equ	0xFF6
  1045                           tablat	equ	0xFF5
  1046                           intcon2	equ	0xFF1
  1047                           postinc0	equ	0xFEE
  1048                           wreg	equ	0xFE8
  1049                           postdec1	equ	0xFE5
  1050                           fsr1l	equ	0xFE1
  1051                           status	equ	0xFD8
  1052                           
  1053 ;; *************** function _secuencial_Efecto1 *****************
  1054 ;; Defined at:
  1055 ;;		line 60 in file "secuencia_main.c"
  1056 ;; Parameters:    Size  Location     Type
  1057 ;;		None
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;  i               2    2[COMRAM] int 
  1060 ;; Return value:  Size  Location     Type
  1061 ;;                  1    wreg      void 
  1062 ;; Registers used:
  1063 ;;		wreg, status,2, status,0
  1064 ;; Tracked objects:
  1065 ;;		On entry : 0/0
  1066 ;;		On exit  : 0/0
  1067 ;;		Unchanged: 0/0
  1068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1069 ;;      Params:         0       0       0       0       0       0       0       0       0
  1070 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1071 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1072 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1073 ;;Total ram usage:        4 bytes
  1074 ;; Hardware stack levels used:    1
  1075 ;; This function calls:
  1076 ;;		Nothing
  1077 ;; This function is called by:
  1078 ;;		_main
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082                           	psect	text4
  1083  007B44                     __ptext4:
  1084                           	opt stack 0
  1085  007B44                     _secuencial_Efecto1:
  1086                           	opt stack 30
  1087                           
  1088                           ;secuencia_main.c: 61: for (int i = 0; i < 8; i++) {
  1089                           
  1090                           ;incstack = 0
  1091  007B44  0E00               	movlw	0
  1092  007B46  6E04               	movwf	secuencial_Efecto1@i+1,c
  1093  007B48  0E00               	movlw	0
  1094  007B4A  6E03               	movwf	secuencial_Efecto1@i,c
  1095  007B4C  BE04               	btfsc	secuencial_Efecto1@i+1,7,c
  1096  007B4E  D008               	goto	l714
  1097  007B50  5004               	movf	secuencial_Efecto1@i+1,w,c
  1098  007B52  E105               	bnz	u10
  1099  007B54  0E08               	movlw	8
  1100  007B56  5C03               	subwf	secuencial_Efecto1@i,w,c
  1101  007B58  B0D8               	btfsc	status,0,c
  1102  007B5A  0012               	return	
  1103  007B5C  D001               	goto	l714
  1104  007B5E                     u10:
  1105  007B5E  0012               	return	
  1106  007B60                     l714:
  1107                           
  1108                           ;secuencia_main.c: 62: LATD = 1 << i;
  1109  007B60  C003  F001         	movff	secuencial_Efecto1@i,??_secuencial_Efecto1
  1110  007B64  0E01               	movlw	1
  1111  007B66  6E02               	movwf	(??_secuencial_Efecto1+1)& (0+255),c
  1112  007B68  2A01               	incf	??_secuencial_Efecto1,f,c
  1113  007B6A  D002               	goto	u24
  1114  007B6C                     u25:
  1115  007B6C  90D8               	bcf	status,0,c
  1116  007B6E  3602               	rlcf	??_secuencial_Efecto1+1,f,c
  1117  007B70                     u24:
  1118  007B70  2E01               	decfsz	??_secuencial_Efecto1,f,c
  1119  007B72  D7FC               	goto	u25
  1120  007B74  5002               	movf	??_secuencial_Efecto1+1,w,c
  1121  007B76  6E8C               	movwf	3980,c	;volatile
  1122                           
  1123                           ;secuencia_main.c: 63: if(velocidad==1){_delay((unsigned long)((50)*(8000000/4000.0)));}
  1124  007B78  040B               	decf	_velocidad,w,c
  1125  007B7A  100C               	iorwf	_velocidad+1,w,c
  1126  007B7C  100D               	iorwf	_velocidad+2,w,c
  1127  007B7E  100E               	iorwf	_velocidad+3,w,c
  1128  007B80  A4D8               	btfss	status,2,c
  1129  007B82  D008               	goto	l718
  1130  007B84  0E82               	movlw	130
  1131  007B86  6E01               	movwf	??_secuencial_Efecto1& (0+255),c
  1132  007B88  0EDE               	movlw	222
  1133  007B8A                     u577:
  1134  007B8A  2EE8               	decfsz	wreg,f,c
  1135  007B8C  D7FE               	bra	u577
  1136  007B8E  2E01               	decfsz	??_secuencial_Efecto1& (0+255),f,c
  1137  007B90  D7FC               	bra	u577
  1138  007B92  D03A               	goto	l730
  1139  007B94                     l718:
  1140                           
  1141                           ;secuencia_main.c: 64: else if(velocidad==2){_delay((unsigned long)((100)*(8000000/4000.
      +                          0)));}
  1142  007B94  0E02               	movlw	2
  1143  007B96  180B               	xorwf	_velocidad,w,c
  1144  007B98  100C               	iorwf	_velocidad+1,w,c
  1145  007B9A  100D               	iorwf	_velocidad+2,w,c
  1146  007B9C  100E               	iorwf	_velocidad+3,w,c
  1147  007B9E  A4D8               	btfss	status,2,c
  1148  007BA0  D00D               	goto	l722
  1149  007BA2  0E02               	movlw	2
  1150  007BA4  6E02               	movwf	(??_secuencial_Efecto1+1)& (0+255),c
  1151  007BA6  0E04               	movlw	4
  1152  007BA8  6E01               	movwf	??_secuencial_Efecto1& (0+255),c
  1153  007BAA  0EBA               	movlw	186
  1154  007BAC                     u587:
  1155  007BAC  2EE8               	decfsz	wreg,f,c
  1156  007BAE  D7FE               	bra	u587
  1157  007BB0  2E01               	decfsz	??_secuencial_Efecto1& (0+255),f,c
  1158  007BB2  D7FC               	bra	u587
  1159  007BB4  2E02               	decfsz	(??_secuencial_Efecto1+1)& (0+255),f,c
  1160  007BB6  D7FA               	bra	u587
  1161  007BB8  D000               	nop2	
  1162  007BBA  D026               	goto	l730
  1163  007BBC                     l722:
  1164                           
  1165                           ;secuencia_main.c: 65: else if(velocidad==3){_delay((unsigned long)((200)*(8000000/4000.
      +                          0)));}
  1166  007BBC  0E03               	movlw	3
  1167  007BBE  180B               	xorwf	_velocidad,w,c
  1168  007BC0  100C               	iorwf	_velocidad+1,w,c
  1169  007BC2  100D               	iorwf	_velocidad+2,w,c
  1170  007BC4  100E               	iorwf	_velocidad+3,w,c
  1171  007BC6  A4D8               	btfss	status,2,c
  1172  007BC8  D00C               	goto	l726
  1173  007BCA  0E03               	movlw	3
  1174  007BCC  6E02               	movwf	(??_secuencial_Efecto1+1)& (0+255),c
  1175  007BCE  0E08               	movlw	8
  1176  007BD0  6E01               	movwf	??_secuencial_Efecto1& (0+255),c
  1177  007BD2  0E77               	movlw	119
  1178  007BD4                     u597:
  1179  007BD4  2EE8               	decfsz	wreg,f,c
  1180  007BD6  D7FE               	bra	u597
  1181  007BD8  2E01               	decfsz	??_secuencial_Efecto1& (0+255),f,c
  1182  007BDA  D7FC               	bra	u597
  1183  007BDC  2E02               	decfsz	(??_secuencial_Efecto1+1)& (0+255),f,c
  1184  007BDE  D7FA               	bra	u597
  1185  007BE0  D012               	goto	L7
  1186  007BE2                     l726:
  1187                           
  1188                           ;secuencia_main.c: 66: else if(velocidad==4){_delay((unsigned long)((400)*(8000000/4000.
      +                          0)));}
  1189  007BE2  0E04               	movlw	4
  1190  007BE4  180B               	xorwf	_velocidad,w,c
  1191  007BE6  100C               	iorwf	_velocidad+1,w,c
  1192  007BE8  100D               	iorwf	_velocidad+2,w,c
  1193  007BEA  100E               	iorwf	_velocidad+3,w,c
  1194  007BEC  A4D8               	btfss	status,2,c
  1195  007BEE  D00C               	goto	l730
  1196  007BF0  0E05               	movlw	5
  1197  007BF2  6E02               	movwf	(??_secuencial_Efecto1+1)& (0+255),c
  1198  007BF4  0E0F               	movlw	15
  1199  007BF6  6E01               	movwf	??_secuencial_Efecto1& (0+255),c
  1200  007BF8  0EF1               	movlw	241
  1201  007BFA                     u607:
  1202  007BFA  2EE8               	decfsz	wreg,f,c
  1203  007BFC  D7FE               	bra	u607
  1204  007BFE  2E01               	decfsz	??_secuencial_Efecto1& (0+255),f,c
  1205  007C00  D7FC               	bra	u607
  1206  007C02  2E02               	decfsz	(??_secuencial_Efecto1+1)& (0+255),f,c
  1207  007C04  D7FA               	bra	u607
  1208  007C06                     L7:
  1209  007C06  F000               	nop	
  1210  007C08                     l730:
  1211                           
  1212                           ;secuencia_main.c: 68: if (!PORTBbits.RB6) {
  1213  007C08  BC81               	btfsc	3969,6,c	;volatile
  1214  007C0A  D01C               	goto	l738
  1215                           
  1216                           ;secuencia_main.c: 69: _delay((unsigned long)((50)*(8000000/4000.0)));
  1217  007C0C  0E82               	movlw	130
  1218  007C0E  6E01               	movwf	??_secuencial_Efecto1& (0+255),c
  1219  007C10  0EDE               	movlw	222
  1220  007C12                     u617:
  1221  007C12  2EE8               	decfsz	wreg,f,c
  1222  007C14  D7FE               	bra	u617
  1223  007C16  2E01               	decfsz	??_secuencial_Efecto1& (0+255),f,c
  1224  007C18  D7FC               	bra	u617
  1225                           
  1226                           ;secuencia_main.c: 70: if(++velocidad==5){velocidad=1;}
  1227  007C1A  0E01               	movlw	1
  1228  007C1C  260B               	addwf	_velocidad,f,c
  1229  007C1E  0E00               	movlw	0
  1230  007C20  220C               	addwfc	_velocidad+1,f,c
  1231  007C22  220D               	addwfc	_velocidad+2,f,c
  1232  007C24  220E               	addwfc	_velocidad+3,f,c
  1233  007C26  0E05               	movlw	5
  1234  007C28  180B               	xorwf	_velocidad,w,c
  1235  007C2A  100C               	iorwf	_velocidad+1,w,c
  1236  007C2C  100D               	iorwf	_velocidad+2,w,c
  1237  007C2E  100E               	iorwf	_velocidad+3,w,c
  1238  007C30  A4D8               	btfss	status,2,c
  1239  007C32  D008               	goto	l738
  1240  007C34  0E01               	movlw	1
  1241  007C36  6E0B               	movwf	_velocidad,c
  1242  007C38  0E00               	movlw	0
  1243  007C3A  6E0C               	movwf	_velocidad+1,c
  1244  007C3C  0E00               	movlw	0
  1245  007C3E  6E0D               	movwf	_velocidad+2,c
  1246  007C40  0E00               	movlw	0
  1247  007C42  6E0E               	movwf	_velocidad+3,c
  1248  007C44                     l738:
  1249  007C44  4A03               	infsnz	secuencial_Efecto1@i,f,c
  1250  007C46  2A04               	incf	secuencial_Efecto1@i+1,f,c
  1251  007C48  BE04               	btfsc	secuencial_Efecto1@i+1,7,c
  1252  007C4A  D78A               	goto	l714
  1253  007C4C  5004               	movf	secuencial_Efecto1@i+1,w,c
  1254  007C4E  E101               	bnz	l52
  1255  007C50  D781               	goto	L8
  1256  007C52                     l52:
  1257  007C52  0012               	return		;funcret
  1258  007C54                     __end_of_secuencial_Efecto1:
  1259                           	opt stack 0
  1260  0000                     tblptru	equ	0xFF8
  1261                           tblptrh	equ	0xFF7
  1262                           tblptrl	equ	0xFF6
  1263                           tablat	equ	0xFF5
  1264                           intcon2	equ	0xFF1
  1265                           postinc0	equ	0xFEE
  1266                           wreg	equ	0xFE8
  1267                           postdec1	equ	0xFE5
  1268                           fsr1l	equ	0xFE1
  1269                           status	equ	0xFD8
  1270                           tblptru	equ	0xFF8
  1271                           tblptrh	equ	0xFF7
  1272                           tblptrl	equ	0xFF6
  1273                           tablat	equ	0xFF5
  1274                           intcon2	equ	0xFF1
  1275                           postinc0	equ	0xFEE
  1276                           wreg	equ	0xFE8
  1277                           postdec1	equ	0xFE5
  1278                           fsr1l	equ	0xFE1
  1279                           status	equ	0xFD8
  1280                           
  1281                           	psect	rparam
  1282  0000                     tblptru	equ	0xFF8
  1283                           tblptrh	equ	0xFF7
  1284                           tblptrl	equ	0xFF6
  1285                           tablat	equ	0xFF5
  1286                           intcon2	equ	0xFF1
  1287                           postinc0	equ	0xFEE
  1288                           wreg	equ	0xFE8
  1289                           postdec1	equ	0xFE5
  1290                           fsr1l	equ	0xFE1
  1291                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        5
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      15
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_secuencial_Efecto4

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     240
                                              9 COMRAM     1     1      0
                 _secuencial_Efecto1
                 _secuencial_Efecto2
                 _secuencial_Efecto3
                 _secuencial_Efecto4
 ---------------------------------------------------------------------------------
 (1) _secuencial_Efecto4                                   9     9      0      90
                                              0 COMRAM     9     9      0
 ---------------------------------------------------------------------------------
 (1) _secuencial_Efecto3                                   4     4      0      45
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _secuencial_Efecto2                                   8     8      0      60
                                              0 COMRAM     8     8      0
 ---------------------------------------------------------------------------------
 (1) _secuencial_Efecto1                                   4     4      0      45
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _secuencial_Efecto1
   _secuencial_Efecto2
   _secuencial_Efecto3
   _secuencial_Efecto4

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      A       F       1       15.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       F      20        0.0%
DATA                 0      0       F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Feb 16 12:35:24 2022

                         l52 7C52                           l80 7D62                           l66 7E96  
                         l94 7FFE                           u10 7B5E                           u24 7B70  
                         u25 7B6C                  __CFG_BOR$ON 000000                  __CFG_BORV$3 000000  
               __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000  
               __CFG_CP3$OFF 000000                          l800 7D18                          l722 7BBC  
                        l730 7C08                          l714 7B60                          l726 7BE2  
                        l718 7B94                          l830 7F8E                          l822 7F40  
                        l760 7E20                          l752 7DD2                          l808 7D54  
                        l738 7C44                          l842 7FF0                          l826 7F68  
                        l834 7FB4                          l818 7EC4                          l772 7E82  
                        l756 7DFA                          l764 7E46                          l748 7D88  
                        l862 7B10                          l854 7AEE                          l792 7CCC  
                        l784 7C70                          l864 7B16                          l872 7B28  
                        l866 7B1C                          l796 7CF2                          l788 7CA4  
                        l868 7B22                 __CFG_CPB$OFF 000000                          u100 7D86  
                        u200 7C6E                          u114 7D98                          u115 7D94  
                        u124 7DAC                          u125 7DA8                          u214 7C80  
                        u215 7C7C                          u304 7EE0                          u305 7EDA  
                        u314 7F10                          u315 7F0A                          u417 7AF8  
                        u290 7EC2                 __CFG_CPD$OFF 000000                          u507 7D0A  
                        u427 7F36                          u517 7D22                          u437 7F58  
                        u607 7BFA                          u527 7DC8                          u447 7F80  
                        u617 7C12                          u537 7DEA                          u457 7FA6  
                        u547 7E12                          u467 7FBE                          u557 7E38  
                        u477 7C9A                          u567 7E50                          u487 7CBC  
                        u577 7B8A                          u497 7CE4                          u587 7BAC  
                        u597 7BD4                          wreg 000FE8                 __CFG_LVP$OFF 000000  
               __CFG_WDT$OFF 000000                         _LATD 000F8C                         _main 7AE0  
                       fsr1l 000FE1                         start 0000                __CFG_IESO$OFF 000000  
              __CFG_MCLRE$ON 000000                 ___param_bank 000000               __CFG_CCP2MX$ON 000000  
                      ?_main 0001                        _TRISD 000F95                __CFG_PWRT$OFF 000000  
              __CFG_WRT0$OFF 000000                __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000  
              __CFG_WRT3$OFF 000000               __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000  
             __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000  
              __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000  
             __CFG_EBTRB$OFF 000000                        tablat 000FF5                        status 000FD8  
             __CFG_ICPRT$OFF 000000              __initialization 7AB6                 __end_of_main 7B44  
                     ??_main 000A                __activetblptr 000002               __CFG_XINST$OFF 000000  
             __CFG_STVREN$ON 000000                       _efecto 000F   __end_of_secuencial_Efecto1 7C54  
 __end_of_secuencial_Efecto2 7E98   __end_of_secuencial_Efecto3 7D64   __end_of_secuencial_Efecto4 8000  
               __pdataCOMRAM 000B                       tblptrh 000FF7                       tblptrl 000FF6  
                     tblptru 000FF8                   __accesstop 0060      __end_of__initialization 7AD6  
            __CFG_PBADEN$OFF 000000                ___rparam_used 000001               __pcstackCOMRAM 0001  
        secuencial_Efecto1@i 0003          secuencial_Efecto2@i 0007          secuencial_Efecto2@j 0005  
        secuencial_Efecto3@i 0003          secuencial_Efecto4@i 0004          secuencial_Efecto4@m 0006  
        secuencial_Efecto4@n 0008              __CFG_VREGEN$OFF 000000                      __Hparam 0000  
                    __Lparam 0000                      __pcinit 7AB6                      __ramtop 0800  
                    __ptext0 7AE0                      __ptext1 7E98                      __ptext2 7C54  
                    __ptext3 7D64                      __ptext4 7B44         end_of_initialization 7AD6  
              __Lmediumconst 0000                      postdec1 000FE5                      postinc0 000FEE  
                  _PORTBbits 000F81                    _TRISBbits 000F93           _secuencial_Efecto1 7B44  
         _secuencial_Efecto2 7D64           _secuencial_Efecto3 7C54           _secuencial_Efecto4 7E98  
        ?_secuencial_Efecto1 0001          ?_secuencial_Efecto2 0001          ?_secuencial_Efecto3 0001  
        ?_secuencial_Efecto4 0001                __pidataCOMRAM 7AB1         ??_secuencial_Efecto1 0001  
       ??_secuencial_Efecto2 0001         ??_secuencial_Efecto3 0001         ??_secuencial_Efecto4 0001  
        start_initialization 7AB6             __CFG_LPT1OSC$OFF 000000             __CFG_WDTPS$32768 000000  
                  _velocidad 000B                  _INTCON2bits 000FF1                    copy_data0 7ACA  
                   __Hrparam 0000                     __Lrparam 0000                __size_of_main 0064  
__size_of_secuencial_Efecto1 0110  __size_of_secuencial_Efecto2 0134  __size_of_secuencial_Efecto3 0110  
__size_of_secuencial_Efecto4 0168          __CFG_FOSC$INTOSC_EC 000000  
