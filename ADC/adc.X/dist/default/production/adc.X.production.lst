

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Sep 17 12:18:04 2021

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18  0000                     
    19                           ; Version 1.41
    20                           ; Generated 25/01/2017 GMT
    21                           ; 
    22                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F4550 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     _LATD	set	3980
    54  0000                     _ADRESL	set	4035
    55  0000                     _ADRESH	set	4036
    56  0000                     _ADCON2bits	set	4032
    57  0000                     _ADCON0bits	set	4034
    58  0000                     _ADCON1bits	set	4033
    59  0000                     _OSCCONbits	set	4051
    60  0000                     _TRISA	set	3986
    61  0000                     _TRISD	set	3989
    62                           
    63                           ; #config settings
    64  0000                     
    65                           	psect	cinit
    66  007A48                     __pcinit:
    67                           	opt stack 0
    68  007A48                     start_initialization:
    69                           	opt stack 0
    70  007A48                     __initialization:
    71                           	opt stack 0
    72                           
    73                           ; Clear objects allocated to COMRAM (7 bytes)
    74  007A48  EE00  F029         	lfsr	0,__pbssCOMRAM
    75  007A4C  0E07               	movlw	7
    76  007A4E                     clear_0:
    77  007A4E  6AEE               	clrf	postinc0,c
    78  007A50  06E8               	decf	wreg,f,c
    79  007A52  E1FD               	bnz	clear_0
    80  007A54                     end_of_initialization:
    81                           	opt stack 0
    82  007A54                     __end_of__initialization:
    83                           	opt stack 0
    84  007A54  0100               	movlb	0
    85  007A56  EF77  F03F         	goto	_main	;jump to C main() function
    86                           postinc0	equ	0xFEE
    87                           wreg	equ	0xFE8
    88                           
    89                           	psect	bssCOMRAM
    90  000029                     __pbssCOMRAM:
    91                           	opt stack 0
    92  000029                     _temp:
    93                           	opt stack 0
    94  000029                     	ds	3
    95  00002C                     _value_adc:
    96                           	opt stack 0
    97  00002C                     	ds	2
    98  00002E                     _lm35:
    99                           	opt stack 0
   100  00002E                     	ds	1
   101  00002F                     _counter_digito:
   102                           	opt stack 0
   103  00002F                     	ds	1
   104                           postinc0	equ	0xFEE
   105                           wreg	equ	0xFE8
   106                           
   107                           	psect	cstackCOMRAM
   108  000001                     __pcstackCOMRAM:
   109                           	opt stack 0
   110  000001                     ?___awdiv:
   111                           	opt stack 0
   112  000001                     ?___awmod:
   113                           	opt stack 0
   114  000001                     ?___ftpack:
   115                           	opt stack 0
   116  000001                     ?___fttol:
   117                           	opt stack 0
   118  000001                     ___awdiv@dividend:
   119                           	opt stack 0
   120  000001                     ___awmod@dividend:
   121                           	opt stack 0
   122  000001                     ___ftpack@arg:
   123                           	opt stack 0
   124  000001                     ___fttol@f1:
   125                           	opt stack 0
   126                           
   127                           ; 3 bytes @ 0x0
   128  000001                     	ds	2
   129  000003                     ___awdiv@divisor:
   130                           	opt stack 0
   131  000003                     ___awmod@divisor:
   132                           	opt stack 0
   133                           
   134                           ; 2 bytes @ 0x2
   135  000003                     	ds	1
   136  000004                     ___ftpack@exp:
   137                           	opt stack 0
   138                           
   139                           ; 1 bytes @ 0x3
   140  000004                     	ds	1
   141  000005                     ??___fttol:
   142  000005                     ___awdiv@counter:
   143                           	opt stack 0
   144  000005                     ___awmod@counter:
   145                           	opt stack 0
   146  000005                     ___ftpack@sign:
   147                           	opt stack 0
   148                           
   149                           ; 1 bytes @ 0x4
   150  000005                     	ds	1
   151  000006                     ??___ftpack:
   152  000006                     ___awdiv@sign:
   153                           	opt stack 0
   154  000006                     ___awmod@sign:
   155                           	opt stack 0
   156                           
   157                           ; 1 bytes @ 0x5
   158  000006                     	ds	1
   159  000007                     ___awdiv@quotient:
   160                           	opt stack 0
   161                           
   162                           ; 2 bytes @ 0x6
   163  000007                     	ds	2
   164  000009                     ?___ftmul:
   165                           	opt stack 0
   166  000009                     ?___lwtoft:
   167                           	opt stack 0
   168  000009                     ___lwtoft@c:
   169                           	opt stack 0
   170  000009                     ___ftmul@f1:
   171                           	opt stack 0
   172                           
   173                           ; 3 bytes @ 0x8
   174  000009                     	ds	1
   175  00000A                     ___fttol@sign1:
   176                           	opt stack 0
   177                           
   178                           ; 1 bytes @ 0x9
   179  00000A                     	ds	1
   180  00000B                     ___fttol@lval:
   181                           	opt stack 0
   182                           
   183                           ; 4 bytes @ 0xA
   184  00000B                     	ds	1
   185  00000C                     ___ftmul@f2:
   186                           	opt stack 0
   187                           
   188                           ; 3 bytes @ 0xB
   189  00000C                     	ds	3
   190  00000F                     ??___ftmul:
   191  00000F                     ___fttol@exp1:
   192                           	opt stack 0
   193                           
   194                           ; 1 bytes @ 0xE
   195  00000F                     	ds	3
   196  000012                     ___ftmul@exp:
   197                           	opt stack 0
   198                           
   199                           ; 1 bytes @ 0x11
   200  000012                     	ds	1
   201  000013                     ___ftmul@f3_as_product:
   202                           	opt stack 0
   203                           
   204                           ; 3 bytes @ 0x12
   205  000013                     	ds	3
   206  000016                     ___ftmul@cntr:
   207                           	opt stack 0
   208                           
   209                           ; 1 bytes @ 0x15
   210  000016                     	ds	1
   211  000017                     ___ftmul@sign:
   212                           	opt stack 0
   213                           
   214                           ; 1 bytes @ 0x16
   215  000017                     	ds	1
   216  000018                     ?___ftdiv:
   217                           	opt stack 0
   218  000018                     ___ftdiv@f1:
   219                           	opt stack 0
   220                           
   221                           ; 3 bytes @ 0x17
   222  000018                     	ds	3
   223  00001B                     ___ftdiv@f2:
   224                           	opt stack 0
   225                           
   226                           ; 3 bytes @ 0x1A
   227  00001B                     	ds	3
   228  00001E                     ??___ftdiv:
   229                           
   230                           ; 1 bytes @ 0x1D
   231  00001E                     	ds	3
   232  000021                     ___ftdiv@cntr:
   233                           	opt stack 0
   234                           
   235                           ; 1 bytes @ 0x20
   236  000021                     	ds	1
   237  000022                     ___ftdiv@f3:
   238                           	opt stack 0
   239                           
   240                           ; 3 bytes @ 0x21
   241  000022                     	ds	3
   242  000025                     ___ftdiv@exp:
   243                           	opt stack 0
   244                           
   245                           ; 1 bytes @ 0x24
   246  000025                     	ds	1
   247  000026                     ___ftdiv@sign:
   248                           	opt stack 0
   249                           
   250                           ; 1 bytes @ 0x25
   251  000026                     	ds	1
   252  000027                     ??_main:
   253                           
   254                           ; 1 bytes @ 0x26
   255  000027                     	ds	2
   256                           postinc0	equ	0xFEE
   257                           wreg	equ	0xFE8
   258                           
   259 ;;
   260 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   261 ;;
   262 ;; *************** function _main *****************
   263 ;; Defined at:
   264 ;;		line 12 in file "adc_lm35.c"
   265 ;; Parameters:    Size  Location     Type
   266 ;;		None
   267 ;; Auto vars:     Size  Location     Type
   268 ;;		None
   269 ;; Return value:  Size  Location     Type
   270 ;;                  1    wreg      void 
   271 ;; Registers used:
   272 ;;		wreg, status,2, status,0, cstack
   273 ;; Tracked objects:
   274 ;;		On entry : 0/0
   275 ;;		On exit  : 0/0
   276 ;;		Unchanged: 0/0
   277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   278 ;;      Params:         0       0       0       0       0       0       0       0       0
   279 ;;      Locals:         0       0       0       0       0       0       0       0       0
   280 ;;      Temps:          2       0       0       0       0       0       0       0       0
   281 ;;      Totals:         2       0       0       0       0       0       0       0       0
   282 ;;Total ram usage:        2 bytes
   283 ;; Hardware stack levels required when called:    2
   284 ;; This function calls:
   285 ;;		___awdiv
   286 ;;		___awmod
   287 ;;		___ftdiv
   288 ;;		___ftmul
   289 ;;		___fttol
   290 ;;		___lwtoft
   291 ;; This function is called by:
   292 ;;		Startup code after reset
   293 ;; This function uses a non-reentrant model
   294 ;;
   295                           
   296                           	psect	text0
   297  007EEE                     __ptext0:
   298                           	opt stack 0
   299  007EEE                     _main:
   300                           	opt stack 29
   301                           
   302                           ;adc_lm35.c: 14: TRISD = 0x00;
   303                           
   304                           ;incstack = 0
   305  007EEE  0E00               	movlw	0
   306  007EF0  6E95               	movwf	3989,c	;volatile
   307                           
   308                           ;adc_lm35.c: 15: TRISA = 0xFF;
   309  007EF2  6892               	setf	3986,c	;volatile
   310                           
   311                           ;adc_lm35.c: 17: OSCCONbits.IRCF = 0b111;
   312  007EF4  88D3               	bsf	4051,4,c	;volatile
   313  007EF6  8AD3               	bsf	4051,5,c	;volatile
   314  007EF8  8CD3               	bsf	4051,6,c	;volatile
   315                           
   316                           ;adc_lm35.c: 18: OSCCONbits.SCS = 0b10;
   317  007EFA  50D3               	movf	4051,w,c	;volatile
   318  007EFC  0BFC               	andlw	-4
   319  007EFE  0902               	iorlw	2
   320  007F00  6ED3               	movwf	4051,c	;volatile
   321                           
   322                           ;adc_lm35.c: 21: ADCON1bits.PCFG = 0b1110;
   323  007F02  50C1               	movf	4033,w,c	;volatile
   324  007F04  0BF0               	andlw	-16
   325  007F06  090E               	iorlw	14
   326  007F08  6EC1               	movwf	4033,c	;volatile
   327                           
   328                           ;adc_lm35.c: 22: ADCON1bits.VCFG = 0b00;
   329  007F0A  0ECF               	movlw	-49
   330  007F0C  16C1               	andwf	4033,f,c	;volatile
   331                           
   332                           ;adc_lm35.c: 23: ADCON0bits.CHS = 0b0000;
   333  007F0E  94C2               	bcf	4034,2,c	;volatile
   334  007F10  96C2               	bcf	4034,3,c	;volatile
   335  007F12  98C2               	bcf	4034,4,c	;volatile
   336  007F14  9AC2               	bcf	4034,5,c	;volatile
   337                           
   338                           ;adc_lm35.c: 24: ADCON2bits.ACQT = 0b010;
   339  007F16  50C0               	movf	4032,w,c	;volatile
   340  007F18  0BC7               	andlw	-57
   341  007F1A  0910               	iorlw	16
   342  007F1C  6EC0               	movwf	4032,c	;volatile
   343                           
   344                           ;adc_lm35.c: 25: ADCON2bits.ADCS = 0b001;
   345  007F1E  50C0               	movf	4032,w,c	;volatile
   346  007F20  0BF8               	andlw	-8
   347  007F22  0901               	iorlw	1
   348  007F24  6EC0               	movwf	4032,c	;volatile
   349                           
   350                           ;adc_lm35.c: 26: ADCON2bits.ADFM = 1;
   351  007F26  8EC0               	bsf	4032,7,c	;volatile
   352                           
   353                           ;adc_lm35.c: 27: ADCON0bits.ADON = 1;
   354  007F28  80C2               	bsf	4034,0,c	;volatile
   355  007F2A                     l1228:
   356                           
   357                           ;adc_lm35.c: 43: ADCON0bits.GO_DONE = 1;
   358  007F2A  82C2               	bsf	4034,1,c	;volatile
   359  007F2C                     l32:
   360  007F2C  B2C2               	btfsc	4034,1,c	;volatile
   361  007F2E  D7FE               	goto	l32
   362                           
   363                           ;adc_lm35.c: 45: value_adc = ADRESH;
   364  007F30  CFC4 F02C          	movff	4036,_value_adc	;volatile
   365  007F34  6A2D               	clrf	_value_adc+1,c
   366                           
   367                           ;adc_lm35.c: 46: value_adc = (value_adc << 8) + ADRESL;
   368  007F36  502C               	movf	_value_adc,w,c
   369  007F38  6E27               	movwf	??_main& (0+255),c
   370  007F3A  50C3               	movf	4035,w,c	;volatile
   371  007F3C  6E2C               	movwf	_value_adc,c
   372  007F3E  C027  F02D         	movff	??_main,_value_adc+1
   373                           
   374                           ;adc_lm35.c: 47: temp = value_adc;
   375  007F42  C02C  F009         	movff	_value_adc,___lwtoft@c
   376  007F46  C02D  F00A         	movff	_value_adc+1,___lwtoft@c+1
   377  007F4A  EC2D  F03D         	call	___lwtoft	;wreg free
   378  007F4E  C009  F029         	movff	?___lwtoft,_temp
   379  007F52  C00A  F02A         	movff	?___lwtoft+1,_temp+1
   380  007F56  C00B  F02B         	movff	?___lwtoft+2,_temp+2
   381                           
   382                           ;adc_lm35.c: 48: temp = (temp * 500.0) / 1023.0;
   383  007F5A  0E00               	movlw	0
   384  007F5C  6E0C               	movwf	___ftmul@f2,c
   385  007F5E  0EFA               	movlw	250
   386  007F60  6E0D               	movwf	___ftmul@f2+1,c
   387  007F62  0E43               	movlw	67
   388  007F64  6E0E               	movwf	___ftmul@f2+2,c
   389  007F66  C029  F009         	movff	_temp,___ftmul@f1
   390  007F6A  C02A  F00A         	movff	_temp+1,___ftmul@f1+1
   391  007F6E  C02B  F00B         	movff	_temp+2,___ftmul@f1+2
   392  007F72  EC83  F03E         	call	___ftmul	;wreg free
   393  007F76  C009  F018         	movff	?___ftmul,___ftdiv@f1
   394  007F7A  C00A  F019         	movff	?___ftmul+1,___ftdiv@f1+1
   395  007F7E  C00B  F01A         	movff	?___ftmul+2,___ftdiv@f1+2
   396  007F82  0EC0               	movlw	192
   397  007F84  6E1B               	movwf	___ftdiv@f2,c
   398  007F86  0E7F               	movlw	127
   399  007F88  6E1C               	movwf	___ftdiv@f2+1,c
   400  007F8A  0E44               	movlw	68
   401  007F8C  6E1D               	movwf	___ftdiv@f2+2,c
   402  007F8E  EC10  F03E         	call	___ftdiv	;wreg free
   403  007F92  C018  F029         	movff	?___ftdiv,_temp
   404  007F96  C019  F02A         	movff	?___ftdiv+1,_temp+1
   405  007F9A  C01A  F02B         	movff	?___ftdiv+2,_temp+2
   406                           
   407                           ;adc_lm35.c: 49: lm35 = (char) temp;
   408  007F9E  C029  F001         	movff	_temp,___fttol@f1
   409  007FA2  C02A  F002         	movff	_temp+1,___fttol@f1+1
   410  007FA6  C02B  F003         	movff	_temp+2,___fttol@f1+2
   411  007FAA  ECFD  F03E         	call	___fttol	;wreg free
   412  007FAE  5001               	movf	?___fttol,w,c
   413  007FB0  6E2E               	movwf	_lm35,c
   414                           
   415                           ;adc_lm35.c: 50: LATD = (1 << 4) + (lm35 % 10);
   416  007FB2  C02E  F001         	movff	_lm35,___awmod@dividend
   417  007FB6  6A02               	clrf	___awmod@dividend+1,c
   418  007FB8  0E00               	movlw	0
   419  007FBA  6E04               	movwf	___awmod@divisor+1,c
   420  007FBC  0E0A               	movlw	10
   421  007FBE  6E03               	movwf	___awmod@divisor,c
   422  007FC0  EC3F  F03D         	call	___awmod	;wreg free
   423  007FC4  5001               	movf	?___awmod,w,c
   424  007FC6  0F10               	addlw	16
   425  007FC8  6E8C               	movwf	3980,c	;volatile
   426                           
   427                           ;adc_lm35.c: 51: _delay((unsigned long)((50)*(8000000L/4000.0)));
   428  007FCA  0E82               	movlw	130
   429  007FCC  6E27               	movwf	??_main& (0+255),c
   430  007FCE  0EDE               	movlw	222
   431  007FD0                     u827:
   432  007FD0  2EE8               	decfsz	wreg,f,c
   433  007FD2  D7FE               	bra	u827
   434  007FD4  2E27               	decfsz	??_main& (0+255),f,c
   435  007FD6  D7FC               	bra	u827
   436                           
   437                           ;adc_lm35.c: 52: LATD = (1 << 5) + (lm35 / 10);
   438  007FD8  C02E  F001         	movff	_lm35,___awdiv@dividend
   439  007FDC  6A02               	clrf	___awdiv@dividend+1,c
   440  007FDE  0E00               	movlw	0
   441  007FE0  6E04               	movwf	___awdiv@divisor+1,c
   442  007FE2  0E0A               	movlw	10
   443  007FE4  6E03               	movwf	___awdiv@divisor,c
   444  007FE6  EC77  F03D         	call	___awdiv	;wreg free
   445  007FEA  5001               	movf	?___awdiv,w,c
   446  007FEC  0F20               	addlw	32
   447  007FEE  6E8C               	movwf	3980,c	;volatile
   448                           
   449                           ;adc_lm35.c: 53: _delay((unsigned long)((50)*(8000000L/4000.0)));
   450  007FF0  0E82               	movlw	130
   451  007FF2  6E27               	movwf	??_main& (0+255),c
   452  007FF4  0EDE               	movlw	222
   453  007FF6                     u837:
   454  007FF6  2EE8               	decfsz	wreg,f,c
   455  007FF8  D7FE               	bra	u837
   456  007FFA  2E27               	decfsz	??_main& (0+255),f,c
   457  007FFC  D7FC               	bra	u837
   458  007FFE  D795               	goto	l1228
   459  008000                     __end_of_main:
   460                           	opt stack 0
   461                           postinc0	equ	0xFEE
   462                           wreg	equ	0xFE8
   463                           
   464 ;; *************** function ___lwtoft *****************
   465 ;; Defined at:
   466 ;;		line 28 in file "D:\mplab\sources\common\lwtoft.c"
   467 ;; Parameters:    Size  Location     Type
   468 ;;  c               2    8[COMRAM] unsigned int 
   469 ;; Auto vars:     Size  Location     Type
   470 ;;		None
   471 ;; Return value:  Size  Location     Type
   472 ;;                  3    8[COMRAM] float 
   473 ;; Registers used:
   474 ;;		wreg, status,2, status,0, cstack
   475 ;; Tracked objects:
   476 ;;		On entry : 0/0
   477 ;;		On exit  : 0/0
   478 ;;		Unchanged: 0/0
   479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   480 ;;      Params:         3       0       0       0       0       0       0       0       0
   481 ;;      Locals:         0       0       0       0       0       0       0       0       0
   482 ;;      Temps:          0       0       0       0       0       0       0       0       0
   483 ;;      Totals:         3       0       0       0       0       0       0       0       0
   484 ;;Total ram usage:        3 bytes
   485 ;; Hardware stack levels used:    1
   486 ;; Hardware stack levels required when called:    1
   487 ;; This function calls:
   488 ;;		___ftpack
   489 ;; This function is called by:
   490 ;;		_main
   491 ;; This function uses a non-reentrant model
   492 ;;
   493                           
   494                           	psect	text1
   495  007A5A                     __ptext1:
   496                           	opt stack 0
   497  007A5A                     ___lwtoft:
   498                           	opt stack 29
   499                           
   500                           ;incstack = 0
   501  007A5A  C009  F001         	movff	___lwtoft@c,___ftpack@arg
   502  007A5E  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
   503  007A62  6A03               	clrf	___ftpack@arg+2,c
   504  007A64  0E8E               	movlw	142
   505  007A66  6E04               	movwf	___ftpack@exp,c
   506  007A68  0E00               	movlw	0
   507  007A6A  6E05               	movwf	___ftpack@sign,c
   508  007A6C  ECB9  F03D         	call	___ftpack	;wreg free
   509  007A70  C001  F009         	movff	?___ftpack,?___lwtoft
   510  007A74  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
   511  007A78  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
   512  007A7C  0012               	return	
   513  007A7E                     __end_of___lwtoft:
   514                           	opt stack 0
   515                           postinc0	equ	0xFEE
   516                           wreg	equ	0xFE8
   517                           
   518 ;; *************** function ___fttol *****************
   519 ;; Defined at:
   520 ;;		line 44 in file "D:\mplab\sources\common\fttol.c"
   521 ;; Parameters:    Size  Location     Type
   522 ;;  f1              3    0[COMRAM] float 
   523 ;; Auto vars:     Size  Location     Type
   524 ;;  lval            4   10[COMRAM] unsigned long 
   525 ;;  exp1            1   14[COMRAM] unsigned char 
   526 ;;  sign1           1    9[COMRAM] unsigned char 
   527 ;; Return value:  Size  Location     Type
   528 ;;                  4    0[COMRAM] long 
   529 ;; Registers used:
   530 ;;		wreg, status,2, status,0
   531 ;; Tracked objects:
   532 ;;		On entry : 0/0
   533 ;;		On exit  : 0/0
   534 ;;		Unchanged: 0/0
   535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   536 ;;      Params:         4       0       0       0       0       0       0       0       0
   537 ;;      Locals:         6       0       0       0       0       0       0       0       0
   538 ;;      Temps:          5       0       0       0       0       0       0       0       0
   539 ;;      Totals:        15       0       0       0       0       0       0       0       0
   540 ;;Total ram usage:       15 bytes
   541 ;; Hardware stack levels used:    1
   542 ;; This function calls:
   543 ;;		Nothing
   544 ;; This function is called by:
   545 ;;		_main
   546 ;; This function uses a non-reentrant model
   547 ;;
   548                           
   549                           	psect	text2
   550  007DFA                     __ptext2:
   551                           	opt stack 0
   552  007DFA                     ___fttol:
   553                           	opt stack 30
   554                           
   555                           ;incstack = 0
   556  007DFA  C003  F005         	movff	___fttol@f1+2,??___fttol
   557  007DFE  6A06               	clrf	(??___fttol+1)& (0+255),c
   558  007E00  6A07               	clrf	(??___fttol+2)& (0+255),c
   559  007E02  3402               	rlcf	___fttol@f1+1,w,c
   560  007E04  3605               	rlcf	??___fttol& (0+255),f,c
   561  007E06  E301               	bnc	u731
   562  007E08  8006               	bsf	(??___fttol+1)& (0+255),0,c
   563  007E0A                     u731:
   564  007E0A  5005               	movf	??___fttol,w,c
   565  007E0C  6E0F               	movwf	___fttol@exp1,c
   566  007E0E  500F               	movf	___fttol@exp1,w,c
   567  007E10  A4D8               	btfss	status,2,c
   568  007E12  D009               	goto	l1172
   569  007E14  0E00               	movlw	0
   570  007E16  6E01               	movwf	?___fttol,c
   571  007E18  0E00               	movlw	0
   572  007E1A  6E02               	movwf	?___fttol+1,c
   573  007E1C  0E00               	movlw	0
   574  007E1E  6E03               	movwf	?___fttol+2,c
   575  007E20  0E00               	movlw	0
   576  007E22  6E04               	movwf	?___fttol+3,c
   577  007E24  0012               	return	
   578  007E26                     l1172:
   579  007E26  0E17               	movlw	23
   580  007E28  6E05               	movwf	??___fttol& (0+255),c
   581  007E2A  C001  F006         	movff	___fttol@f1,??___fttol+1
   582  007E2E  C002  F007         	movff	___fttol@f1+1,??___fttol+2
   583  007E32  C003  F008         	movff	___fttol@f1+2,??___fttol+3
   584  007E36  2805               	incf	??___fttol,w,c
   585  007E38  6E09               	movwf	(??___fttol+4)& (0+255),c
   586  007E3A  D004               	goto	u750
   587  007E3C                     u755:
   588  007E3C  90D8               	bcf	status,0,c
   589  007E3E  3208               	rrcf	??___fttol+3,f,c
   590  007E40  3207               	rrcf	??___fttol+2,f,c
   591  007E42  3206               	rrcf	??___fttol+1,f,c
   592  007E44                     u750:
   593  007E44  2E09               	decfsz	(??___fttol+4)& (0+255),f,c
   594  007E46  D7FA               	goto	u755
   595  007E48  5006               	movf	??___fttol+1,w,c
   596  007E4A  6E0A               	movwf	___fttol@sign1,c
   597  007E4C  8E02               	bsf	___fttol@f1+1,7,c
   598  007E4E  0EFF               	movlw	255
   599  007E50  1601               	andwf	___fttol@f1,f,c
   600  007E52  0EFF               	movlw	255
   601  007E54  1602               	andwf	___fttol@f1+1,f,c
   602  007E56  0E00               	movlw	0
   603  007E58  1603               	andwf	___fttol@f1+2,f,c
   604  007E5A  5001               	movf	___fttol@f1,w,c
   605  007E5C  6E0B               	movwf	___fttol@lval,c
   606  007E5E  5002               	movf	___fttol@f1+1,w,c
   607  007E60  6E0C               	movwf	___fttol@lval+1,c
   608  007E62  5003               	movf	___fttol@f1+2,w,c
   609  007E64  6E0D               	movwf	___fttol@lval+2,c
   610  007E66  6A0E               	clrf	___fttol@lval+3,c
   611  007E68  0E8E               	movlw	142
   612  007E6A  5E0F               	subwf	___fttol@exp1,f,c
   613  007E6C  AE0F               	btfss	___fttol@exp1,7,c
   614  007E6E  D016               	goto	l1194
   615  007E70  500F               	movf	___fttol@exp1,w,c
   616  007E72  0A80               	xorlw	128
   617  007E74  0F8F               	addlw	143
   618  007E76  B0D8               	btfsc	status,0,c
   619  007E78  D009               	goto	l1190
   620  007E7A  0E00               	movlw	0
   621  007E7C  6E01               	movwf	?___fttol,c
   622  007E7E  0E00               	movlw	0
   623  007E80  6E02               	movwf	?___fttol+1,c
   624  007E82  0E00               	movlw	0
   625  007E84  6E03               	movwf	?___fttol+2,c
   626  007E86  0E00               	movlw	0
   627  007E88  6E04               	movwf	?___fttol+3,c
   628  007E8A  0012               	return	
   629  007E8C                     l1190:
   630  007E8C  90D8               	bcf	status,0,c
   631  007E8E  320E               	rrcf	___fttol@lval+3,f,c
   632  007E90  320D               	rrcf	___fttol@lval+2,f,c
   633  007E92  320C               	rrcf	___fttol@lval+1,f,c
   634  007E94  320B               	rrcf	___fttol@lval,f,c
   635  007E96  3E0F               	incfsz	___fttol@exp1,f,c
   636  007E98  D7F9               	goto	l1190
   637  007E9A  D015               	goto	l1204
   638  007E9C                     l1194:
   639  007E9C  0E17               	movlw	23
   640  007E9E  640F               	cpfsgt	___fttol@exp1,c
   641  007EA0  D00F               	goto	l1202
   642  007EA2  0E00               	movlw	0
   643  007EA4  6E01               	movwf	?___fttol,c
   644  007EA6  0E00               	movlw	0
   645  007EA8  6E02               	movwf	?___fttol+1,c
   646  007EAA  0E00               	movlw	0
   647  007EAC  6E03               	movwf	?___fttol+2,c
   648  007EAE  0E00               	movlw	0
   649  007EB0  6E04               	movwf	?___fttol+3,c
   650  007EB2  0012               	return	
   651  007EB4                     l1200:
   652  007EB4  90D8               	bcf	status,0,c
   653  007EB6  360B               	rlcf	___fttol@lval,f,c
   654  007EB8  360C               	rlcf	___fttol@lval+1,f,c
   655  007EBA  360D               	rlcf	___fttol@lval+2,f,c
   656  007EBC  360E               	rlcf	___fttol@lval+3,f,c
   657  007EBE  060F               	decf	___fttol@exp1,f,c
   658  007EC0                     l1202:
   659  007EC0  500F               	movf	___fttol@exp1,w,c
   660  007EC2  A4D8               	btfss	status,2,c
   661  007EC4  D7F7               	goto	l1200
   662  007EC6                     l1204:
   663  007EC6  500A               	movf	___fttol@sign1,w,c
   664  007EC8  B4D8               	btfsc	status,2,c
   665  007ECA  D008               	goto	l1208
   666  007ECC  1E0E               	comf	___fttol@lval+3,f,c
   667  007ECE  1E0D               	comf	___fttol@lval+2,f,c
   668  007ED0  1E0C               	comf	___fttol@lval+1,f,c
   669  007ED2  6C0B               	negf	___fttol@lval,c
   670  007ED4  0E00               	movlw	0
   671  007ED6  220C               	addwfc	___fttol@lval+1,f,c
   672  007ED8  220D               	addwfc	___fttol@lval+2,f,c
   673  007EDA  220E               	addwfc	___fttol@lval+3,f,c
   674  007EDC                     l1208:
   675  007EDC  C00B  F001         	movff	___fttol@lval,?___fttol
   676  007EE0  C00C  F002         	movff	___fttol@lval+1,?___fttol+1
   677  007EE4  C00D  F003         	movff	___fttol@lval+2,?___fttol+2
   678  007EE8  C00E  F004         	movff	___fttol@lval+3,?___fttol+3
   679  007EEC  0012               	return	
   680  007EEE                     __end_of___fttol:
   681                           	opt stack 0
   682                           postinc0	equ	0xFEE
   683                           wreg	equ	0xFE8
   684                           status	equ	0xFD8
   685                           
   686 ;; *************** function ___ftmul *****************
   687 ;; Defined at:
   688 ;;		line 62 in file "D:\mplab\sources\common\ftmul.c"
   689 ;; Parameters:    Size  Location     Type
   690 ;;  f1              3    8[COMRAM] float 
   691 ;;  f2              3   11[COMRAM] float 
   692 ;; Auto vars:     Size  Location     Type
   693 ;;  f3_as_produc    3   18[COMRAM] unsigned um
   694 ;;  sign            1   22[COMRAM] unsigned char 
   695 ;;  cntr            1   21[COMRAM] unsigned char 
   696 ;;  exp             1   17[COMRAM] unsigned char 
   697 ;; Return value:  Size  Location     Type
   698 ;;                  3    8[COMRAM] float 
   699 ;; Registers used:
   700 ;;		wreg, status,2, status,0, cstack
   701 ;; Tracked objects:
   702 ;;		On entry : 0/0
   703 ;;		On exit  : 0/0
   704 ;;		Unchanged: 0/0
   705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   706 ;;      Params:         6       0       0       0       0       0       0       0       0
   707 ;;      Locals:         6       0       0       0       0       0       0       0       0
   708 ;;      Temps:          3       0       0       0       0       0       0       0       0
   709 ;;      Totals:        15       0       0       0       0       0       0       0       0
   710 ;;Total ram usage:       15 bytes
   711 ;; Hardware stack levels used:    1
   712 ;; Hardware stack levels required when called:    1
   713 ;; This function calls:
   714 ;;		___ftpack
   715 ;; This function is called by:
   716 ;;		_main
   717 ;; This function uses a non-reentrant model
   718 ;;
   719                           
   720                           	psect	text3
   721  007D06                     __ptext3:
   722                           	opt stack 0
   723  007D06                     ___ftmul:
   724                           	opt stack 29
   725                           
   726                           ;incstack = 0
   727  007D06  C00B  F00F         	movff	___ftmul@f1+2,??___ftmul
   728  007D0A  6A10               	clrf	(??___ftmul+1)& (0+255),c
   729  007D0C  6A11               	clrf	(??___ftmul+2)& (0+255),c
   730  007D0E  340A               	rlcf	___ftmul@f1+1,w,c
   731  007D10  360F               	rlcf	??___ftmul& (0+255),f,c
   732  007D12  E301               	bnc	u551
   733  007D14  8010               	bsf	(??___ftmul+1)& (0+255),0,c
   734  007D16                     u551:
   735  007D16  500F               	movf	??___ftmul,w,c
   736  007D18  6E12               	movwf	___ftmul@exp,c
   737  007D1A  5012               	movf	___ftmul@exp,w,c
   738  007D1C  A4D8               	btfss	status,2,c
   739  007D1E  D007               	goto	l1044
   740  007D20  0E00               	movlw	0
   741  007D22  6E09               	movwf	?___ftmul,c
   742  007D24  0E00               	movlw	0
   743  007D26  6E0A               	movwf	?___ftmul+1,c
   744  007D28  0E00               	movlw	0
   745  007D2A  6E0B               	movwf	?___ftmul+2,c
   746  007D2C  0012               	return	
   747  007D2E                     l1044:
   748  007D2E  C00E  F00F         	movff	___ftmul@f2+2,??___ftmul
   749  007D32  6A10               	clrf	(??___ftmul+1)& (0+255),c
   750  007D34  6A11               	clrf	(??___ftmul+2)& (0+255),c
   751  007D36  340D               	rlcf	___ftmul@f2+1,w,c
   752  007D38  360F               	rlcf	??___ftmul& (0+255),f,c
   753  007D3A  E301               	bnc	u571
   754  007D3C  8010               	bsf	(??___ftmul+1)& (0+255),0,c
   755  007D3E                     u571:
   756  007D3E  500F               	movf	??___ftmul,w,c
   757  007D40  6E17               	movwf	___ftmul@sign,c
   758  007D42  5017               	movf	___ftmul@sign,w,c
   759  007D44  A4D8               	btfss	status,2,c
   760  007D46  D007               	goto	l1050
   761  007D48  0E00               	movlw	0
   762  007D4A  6E09               	movwf	?___ftmul,c
   763  007D4C  0E00               	movlw	0
   764  007D4E  6E0A               	movwf	?___ftmul+1,c
   765  007D50  0E00               	movlw	0
   766  007D52  6E0B               	movwf	?___ftmul+2,c
   767  007D54  0012               	return	
   768  007D56                     l1050:
   769  007D56  5017               	movf	___ftmul@sign,w,c
   770  007D58  0F7B               	addlw	123
   771  007D5A  2612               	addwf	___ftmul@exp,f,c
   772  007D5C  C00B  F017         	movff	___ftmul@f1+2,___ftmul@sign
   773  007D60  500E               	movf	___ftmul@f2+2,w,c
   774  007D62  1A17               	xorwf	___ftmul@sign,f,c
   775  007D64  0E80               	movlw	128
   776  007D66  1617               	andwf	___ftmul@sign,f,c
   777  007D68  8E0A               	bsf	___ftmul@f1+1,7,c
   778  007D6A  8E0D               	bsf	___ftmul@f2+1,7,c
   779  007D6C  0EFF               	movlw	255
   780  007D6E  160C               	andwf	___ftmul@f2,f,c
   781  007D70  0EFF               	movlw	255
   782  007D72  160D               	andwf	___ftmul@f2+1,f,c
   783  007D74  0E00               	movlw	0
   784  007D76  160E               	andwf	___ftmul@f2+2,f,c
   785  007D78  0E00               	movlw	0
   786  007D7A  6E13               	movwf	___ftmul@f3_as_product,c
   787  007D7C  0E00               	movlw	0
   788  007D7E  6E14               	movwf	___ftmul@f3_as_product+1,c
   789  007D80  0E00               	movlw	0
   790  007D82  6E15               	movwf	___ftmul@f3_as_product+2,c
   791  007D84  0E07               	movlw	7
   792  007D86  6E16               	movwf	___ftmul@cntr,c
   793  007D88                     l1064:
   794  007D88  A009               	btfss	___ftmul@f1,0,c
   795  007D8A  D006               	goto	l1068
   796  007D8C  500C               	movf	___ftmul@f2,w,c
   797  007D8E  2613               	addwf	___ftmul@f3_as_product,f,c
   798  007D90  500D               	movf	___ftmul@f2+1,w,c
   799  007D92  2214               	addwfc	___ftmul@f3_as_product+1,f,c
   800  007D94  500E               	movf	___ftmul@f2+2,w,c
   801  007D96  2215               	addwfc	___ftmul@f3_as_product+2,f,c
   802  007D98                     l1068:
   803  007D98  90D8               	bcf	status,0,c
   804  007D9A  320B               	rrcf	___ftmul@f1+2,f,c
   805  007D9C  320A               	rrcf	___ftmul@f1+1,f,c
   806  007D9E  3209               	rrcf	___ftmul@f1,f,c
   807  007DA0  90D8               	bcf	status,0,c
   808  007DA2  360C               	rlcf	___ftmul@f2,f,c
   809  007DA4  360D               	rlcf	___ftmul@f2+1,f,c
   810  007DA6  360E               	rlcf	___ftmul@f2+2,f,c
   811  007DA8  2E16               	decfsz	___ftmul@cntr,f,c
   812  007DAA  D7EE               	goto	l1064
   813  007DAC  0E09               	movlw	9
   814  007DAE  6E16               	movwf	___ftmul@cntr,c
   815  007DB0                     l1074:
   816  007DB0  A009               	btfss	___ftmul@f1,0,c
   817  007DB2  D006               	goto	l1078
   818  007DB4  500C               	movf	___ftmul@f2,w,c
   819  007DB6  2613               	addwf	___ftmul@f3_as_product,f,c
   820  007DB8  500D               	movf	___ftmul@f2+1,w,c
   821  007DBA  2214               	addwfc	___ftmul@f3_as_product+1,f,c
   822  007DBC  500E               	movf	___ftmul@f2+2,w,c
   823  007DBE  2215               	addwfc	___ftmul@f3_as_product+2,f,c
   824  007DC0                     l1078:
   825  007DC0  90D8               	bcf	status,0,c
   826  007DC2  320B               	rrcf	___ftmul@f1+2,f,c
   827  007DC4  320A               	rrcf	___ftmul@f1+1,f,c
   828  007DC6  3209               	rrcf	___ftmul@f1,f,c
   829  007DC8  90D8               	bcf	status,0,c
   830  007DCA  3215               	rrcf	___ftmul@f3_as_product+2,f,c
   831  007DCC  3214               	rrcf	___ftmul@f3_as_product+1,f,c
   832  007DCE  3213               	rrcf	___ftmul@f3_as_product,f,c
   833  007DD0  2E16               	decfsz	___ftmul@cntr,f,c
   834  007DD2  D7EE               	goto	l1074
   835  007DD4  C013  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
   836  007DD8  C014  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
   837  007DDC  C015  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
   838  007DE0  C012  F004         	movff	___ftmul@exp,___ftpack@exp
   839  007DE4  C017  F005         	movff	___ftmul@sign,___ftpack@sign
   840  007DE8  ECB9  F03D         	call	___ftpack	;wreg free
   841  007DEC  C001  F009         	movff	?___ftpack,?___ftmul
   842  007DF0  C002  F00A         	movff	?___ftpack+1,?___ftmul+1
   843  007DF4  C003  F00B         	movff	?___ftpack+2,?___ftmul+2
   844  007DF8  0012               	return	
   845  007DFA                     __end_of___ftmul:
   846                           	opt stack 0
   847                           postinc0	equ	0xFEE
   848                           wreg	equ	0xFE8
   849                           status	equ	0xFD8
   850                           
   851 ;; *************** function ___ftdiv *****************
   852 ;; Defined at:
   853 ;;		line 54 in file "D:\mplab\sources\common\ftdiv.c"
   854 ;; Parameters:    Size  Location     Type
   855 ;;  f1              3   23[COMRAM] float 
   856 ;;  f2              3   26[COMRAM] float 
   857 ;; Auto vars:     Size  Location     Type
   858 ;;  f3              3   33[COMRAM] float 
   859 ;;  sign            1   37[COMRAM] unsigned char 
   860 ;;  exp             1   36[COMRAM] unsigned char 
   861 ;;  cntr            1   32[COMRAM] unsigned char 
   862 ;; Return value:  Size  Location     Type
   863 ;;                  3   23[COMRAM] float 
   864 ;; Registers used:
   865 ;;		wreg, status,2, status,0, cstack
   866 ;; Tracked objects:
   867 ;;		On entry : 0/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   871 ;;      Params:         6       0       0       0       0       0       0       0       0
   872 ;;      Locals:         6       0       0       0       0       0       0       0       0
   873 ;;      Temps:          3       0       0       0       0       0       0       0       0
   874 ;;      Totals:        15       0       0       0       0       0       0       0       0
   875 ;;Total ram usage:       15 bytes
   876 ;; Hardware stack levels used:    1
   877 ;; Hardware stack levels required when called:    1
   878 ;; This function calls:
   879 ;;		___ftpack
   880 ;; This function is called by:
   881 ;;		_main
   882 ;; This function uses a non-reentrant model
   883 ;;
   884                           
   885                           	psect	text4
   886  007C20                     __ptext4:
   887                           	opt stack 0
   888  007C20                     ___ftdiv:
   889                           	opt stack 29
   890                           
   891                           ;incstack = 0
   892  007C20  C01A  F01E         	movff	___ftdiv@f1+2,??___ftdiv
   893  007C24  6A1F               	clrf	(??___ftdiv+1)& (0+255),c
   894  007C26  6A20               	clrf	(??___ftdiv+2)& (0+255),c
   895  007C28  3419               	rlcf	___ftdiv@f1+1,w,c
   896  007C2A  361E               	rlcf	??___ftdiv& (0+255),f,c
   897  007C2C  E301               	bnc	u501
   898  007C2E  801F               	bsf	(??___ftdiv+1)& (0+255),0,c
   899  007C30                     u501:
   900  007C30  501E               	movf	??___ftdiv,w,c
   901  007C32  6E25               	movwf	___ftdiv@exp,c
   902  007C34  5025               	movf	___ftdiv@exp,w,c
   903  007C36  A4D8               	btfss	status,2,c
   904  007C38  D007               	goto	l998
   905  007C3A  0E00               	movlw	0
   906  007C3C  6E18               	movwf	?___ftdiv,c
   907  007C3E  0E00               	movlw	0
   908  007C40  6E19               	movwf	?___ftdiv+1,c
   909  007C42  0E00               	movlw	0
   910  007C44  6E1A               	movwf	?___ftdiv+2,c
   911  007C46  0012               	return	
   912  007C48                     l998:
   913  007C48  C01D  F01E         	movff	___ftdiv@f2+2,??___ftdiv
   914  007C4C  6A1F               	clrf	(??___ftdiv+1)& (0+255),c
   915  007C4E  6A20               	clrf	(??___ftdiv+2)& (0+255),c
   916  007C50  341C               	rlcf	___ftdiv@f2+1,w,c
   917  007C52  361E               	rlcf	??___ftdiv& (0+255),f,c
   918  007C54  E301               	bnc	u521
   919  007C56  801F               	bsf	(??___ftdiv+1)& (0+255),0,c
   920  007C58                     u521:
   921  007C58  501E               	movf	??___ftdiv,w,c
   922  007C5A  6E26               	movwf	___ftdiv@sign,c
   923  007C5C  5026               	movf	___ftdiv@sign,w,c
   924  007C5E  A4D8               	btfss	status,2,c
   925  007C60  D007               	goto	l1004
   926  007C62  0E00               	movlw	0
   927  007C64  6E18               	movwf	?___ftdiv,c
   928  007C66  0E00               	movlw	0
   929  007C68  6E19               	movwf	?___ftdiv+1,c
   930  007C6A  0E00               	movlw	0
   931  007C6C  6E1A               	movwf	?___ftdiv+2,c
   932  007C6E  0012               	return	
   933  007C70                     l1004:
   934  007C70  0E00               	movlw	0
   935  007C72  6E22               	movwf	___ftdiv@f3,c
   936  007C74  0E00               	movlw	0
   937  007C76  6E23               	movwf	___ftdiv@f3+1,c
   938  007C78  0E00               	movlw	0
   939  007C7A  6E24               	movwf	___ftdiv@f3+2,c
   940  007C7C  5026               	movf	___ftdiv@sign,w,c
   941  007C7E  0F89               	addlw	137
   942  007C80  5E25               	subwf	___ftdiv@exp,f,c
   943  007C82  C01A  F026         	movff	___ftdiv@f1+2,___ftdiv@sign
   944  007C86  501D               	movf	___ftdiv@f2+2,w,c
   945  007C88  1A26               	xorwf	___ftdiv@sign,f,c
   946  007C8A  0E80               	movlw	128
   947  007C8C  1626               	andwf	___ftdiv@sign,f,c
   948  007C8E  8E19               	bsf	___ftdiv@f1+1,7,c
   949  007C90  0EFF               	movlw	255
   950  007C92  1618               	andwf	___ftdiv@f1,f,c
   951  007C94  0EFF               	movlw	255
   952  007C96  1619               	andwf	___ftdiv@f1+1,f,c
   953  007C98  0E00               	movlw	0
   954  007C9A  161A               	andwf	___ftdiv@f1+2,f,c
   955  007C9C  8E1C               	bsf	___ftdiv@f2+1,7,c
   956  007C9E  0EFF               	movlw	255
   957  007CA0  161B               	andwf	___ftdiv@f2,f,c
   958  007CA2  0EFF               	movlw	255
   959  007CA4  161C               	andwf	___ftdiv@f2+1,f,c
   960  007CA6  0E00               	movlw	0
   961  007CA8  161D               	andwf	___ftdiv@f2+2,f,c
   962  007CAA  0E18               	movlw	24
   963  007CAC  6E21               	movwf	___ftdiv@cntr,c
   964  007CAE                     l1024:
   965  007CAE  90D8               	bcf	status,0,c
   966  007CB0  3622               	rlcf	___ftdiv@f3,f,c
   967  007CB2  3623               	rlcf	___ftdiv@f3+1,f,c
   968  007CB4  3624               	rlcf	___ftdiv@f3+2,f,c
   969  007CB6  501B               	movf	___ftdiv@f2,w,c
   970  007CB8  5C18               	subwf	___ftdiv@f1,w,c
   971  007CBA  501C               	movf	___ftdiv@f2+1,w,c
   972  007CBC  5819               	subwfb	___ftdiv@f1+1,w,c
   973  007CBE  501D               	movf	___ftdiv@f2+2,w,c
   974  007CC0  581A               	subwfb	___ftdiv@f1+2,w,c
   975  007CC2  A0D8               	btfss	status,0,c
   976  007CC4  D007               	goto	l337
   977  007CC6  501B               	movf	___ftdiv@f2,w,c
   978  007CC8  5E18               	subwf	___ftdiv@f1,f,c
   979  007CCA  501C               	movf	___ftdiv@f2+1,w,c
   980  007CCC  5A19               	subwfb	___ftdiv@f1+1,f,c
   981  007CCE  501D               	movf	___ftdiv@f2+2,w,c
   982  007CD0  5A1A               	subwfb	___ftdiv@f1+2,f,c
   983  007CD2  8022               	bsf	___ftdiv@f3,0,c
   984  007CD4                     l337:
   985  007CD4  90D8               	bcf	status,0,c
   986  007CD6  3618               	rlcf	___ftdiv@f1,f,c
   987  007CD8  3619               	rlcf	___ftdiv@f1+1,f,c
   988  007CDA  361A               	rlcf	___ftdiv@f1+2,f,c
   989  007CDC  2E21               	decfsz	___ftdiv@cntr,f,c
   990  007CDE  D7E7               	goto	l1024
   991  007CE0  C022  F001         	movff	___ftdiv@f3,___ftpack@arg
   992  007CE4  C023  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
   993  007CE8  C024  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
   994  007CEC  C025  F004         	movff	___ftdiv@exp,___ftpack@exp
   995  007CF0  C026  F005         	movff	___ftdiv@sign,___ftpack@sign
   996  007CF4  ECB9  F03D         	call	___ftpack	;wreg free
   997  007CF8  C001  F018         	movff	?___ftpack,?___ftdiv
   998  007CFC  C002  F019         	movff	?___ftpack+1,?___ftdiv+1
   999  007D00  C003  F01A         	movff	?___ftpack+2,?___ftdiv+2
  1000  007D04  0012               	return	
  1001  007D06                     __end_of___ftdiv:
  1002                           	opt stack 0
  1003                           postinc0	equ	0xFEE
  1004                           wreg	equ	0xFE8
  1005                           status	equ	0xFD8
  1006                           
  1007 ;; *************** function ___ftpack *****************
  1008 ;; Defined at:
  1009 ;;		line 62 in file "D:\mplab\sources\common\float.c"
  1010 ;; Parameters:    Size  Location     Type
  1011 ;;  arg             3    0[COMRAM] unsigned um
  1012 ;;  exp             1    3[COMRAM] unsigned char 
  1013 ;;  sign            1    4[COMRAM] unsigned char 
  1014 ;; Auto vars:     Size  Location     Type
  1015 ;;		None
  1016 ;; Return value:  Size  Location     Type
  1017 ;;                  3    0[COMRAM] float 
  1018 ;; Registers used:
  1019 ;;		wreg, status,2, status,0
  1020 ;; Tracked objects:
  1021 ;;		On entry : 0/0
  1022 ;;		On exit  : 0/0
  1023 ;;		Unchanged: 0/0
  1024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1025 ;;      Params:         5       0       0       0       0       0       0       0       0
  1026 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1027 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1028 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1029 ;;Total ram usage:        8 bytes
  1030 ;; Hardware stack levels used:    1
  1031 ;; This function calls:
  1032 ;;		Nothing
  1033 ;; This function is called by:
  1034 ;;		___ftdiv
  1035 ;;		___ftmul
  1036 ;;		___lwtoft
  1037 ;; This function uses a non-reentrant model
  1038 ;;
  1039                           
  1040                           	psect	text5
  1041  007B72                     __ptext5:
  1042                           	opt stack 0
  1043  007B72                     ___ftpack:
  1044                           	opt stack 29
  1045                           
  1046                           ;incstack = 0
  1047  007B72  5004               	movf	___ftpack@exp,w,c
  1048  007B74  B4D8               	btfsc	status,2,c
  1049  007B76  D005               	goto	l960
  1050  007B78  5001               	movf	___ftpack@arg,w,c
  1051  007B7A  1002               	iorwf	___ftpack@arg+1,w,c
  1052  007B7C  1003               	iorwf	___ftpack@arg+2,w,c
  1053  007B7E  A4D8               	btfss	status,2,c
  1054  007B80  D00C               	goto	l966
  1055  007B82                     l960:
  1056  007B82  0E00               	movlw	0
  1057  007B84  6E01               	movwf	?___ftpack,c
  1058  007B86  0E00               	movlw	0
  1059  007B88  6E02               	movwf	?___ftpack+1,c
  1060  007B8A  0E00               	movlw	0
  1061  007B8C  6E03               	movwf	?___ftpack+2,c
  1062  007B8E  0012               	return	
  1063  007B90                     l964:
  1064  007B90  2A04               	incf	___ftpack@exp,f,c
  1065  007B92  90D8               	bcf	status,0,c
  1066  007B94  3203               	rrcf	___ftpack@arg+2,f,c
  1067  007B96  3202               	rrcf	___ftpack@arg+1,f,c
  1068  007B98  3201               	rrcf	___ftpack@arg,f,c
  1069  007B9A                     l966:
  1070  007B9A  0E00               	movlw	0
  1071  007B9C  1401               	andwf	___ftpack@arg,w,c
  1072  007B9E  6E06               	movwf	??___ftpack& (0+255),c
  1073  007BA0  0E00               	movlw	0
  1074  007BA2  1402               	andwf	___ftpack@arg+1,w,c
  1075  007BA4  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1076  007BA6  0EFE               	movlw	254
  1077  007BA8  1403               	andwf	___ftpack@arg+2,w,c
  1078  007BAA  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1079  007BAC  5006               	movf	??___ftpack,w,c
  1080  007BAE  1007               	iorwf	??___ftpack+1,w,c
  1081  007BB0  1008               	iorwf	??___ftpack+2,w,c
  1082  007BB2  B4D8               	btfsc	status,2,c
  1083  007BB4  D00C               	goto	l972
  1084  007BB6  D7EC               	goto	l964
  1085  007BB8                     l968:
  1086  007BB8  2A04               	incf	___ftpack@exp,f,c
  1087  007BBA  0E01               	movlw	1
  1088  007BBC  2601               	addwf	___ftpack@arg,f,c
  1089  007BBE  0E00               	movlw	0
  1090  007BC0  2202               	addwfc	___ftpack@arg+1,f,c
  1091  007BC2  0E00               	movlw	0
  1092  007BC4  2203               	addwfc	___ftpack@arg+2,f,c
  1093  007BC6  90D8               	bcf	status,0,c
  1094  007BC8  3203               	rrcf	___ftpack@arg+2,f,c
  1095  007BCA  3202               	rrcf	___ftpack@arg+1,f,c
  1096  007BCC  3201               	rrcf	___ftpack@arg,f,c
  1097  007BCE                     l972:
  1098  007BCE  0E00               	movlw	0
  1099  007BD0  1401               	andwf	___ftpack@arg,w,c
  1100  007BD2  6E06               	movwf	??___ftpack& (0+255),c
  1101  007BD4  0E00               	movlw	0
  1102  007BD6  1402               	andwf	___ftpack@arg+1,w,c
  1103  007BD8  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1104  007BDA  0EFF               	movlw	255
  1105  007BDC  1403               	andwf	___ftpack@arg+2,w,c
  1106  007BDE  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1107  007BE0  5006               	movf	??___ftpack,w,c
  1108  007BE2  1007               	iorwf	??___ftpack+1,w,c
  1109  007BE4  1008               	iorwf	??___ftpack+2,w,c
  1110  007BE6  B4D8               	btfsc	status,2,c
  1111  007BE8  D006               	goto	l976
  1112  007BEA  D7E6               	goto	l968
  1113  007BEC                     l974:
  1114  007BEC  0604               	decf	___ftpack@exp,f,c
  1115  007BEE  90D8               	bcf	status,0,c
  1116  007BF0  3601               	rlcf	___ftpack@arg,f,c
  1117  007BF2  3602               	rlcf	___ftpack@arg+1,f,c
  1118  007BF4  3603               	rlcf	___ftpack@arg+2,f,c
  1119  007BF6                     l976:
  1120  007BF6  BE02               	btfsc	___ftpack@arg+1,7,c
  1121  007BF8  D003               	goto	l279
  1122  007BFA  0E02               	movlw	2
  1123  007BFC  6004               	cpfslt	___ftpack@exp,c
  1124  007BFE  D7F6               	goto	l974
  1125  007C00                     l279:
  1126  007C00  A004               	btfss	___ftpack@exp,0,c
  1127  007C02  9E02               	bcf	___ftpack@arg+1,7,c
  1128  007C04  90D8               	bcf	status,0,c
  1129  007C06  3204               	rrcf	___ftpack@exp,f,c
  1130  007C08  5004               	movf	___ftpack@exp,w,c
  1131  007C0A  1203               	iorwf	___ftpack@arg+2,f,c
  1132  007C0C  5005               	movf	___ftpack@sign,w,c
  1133  007C0E  A4D8               	btfss	status,2,c
  1134  007C10  8E03               	bsf	___ftpack@arg+2,7,c
  1135  007C12  C001  F001         	movff	___ftpack@arg,?___ftpack
  1136  007C16  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  1137  007C1A  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  1138  007C1E  0012               	return	
  1139  007C20                     __end_of___ftpack:
  1140                           	opt stack 0
  1141                           postinc0	equ	0xFEE
  1142                           wreg	equ	0xFE8
  1143                           status	equ	0xFD8
  1144                           
  1145 ;; *************** function ___awmod *****************
  1146 ;; Defined at:
  1147 ;;		line 8 in file "D:\mplab\sources\common\awmod.c"
  1148 ;; Parameters:    Size  Location     Type
  1149 ;;  dividend        2    0[COMRAM] int 
  1150 ;;  divisor         2    2[COMRAM] int 
  1151 ;; Auto vars:     Size  Location     Type
  1152 ;;  sign            1    5[COMRAM] unsigned char 
  1153 ;;  counter         1    4[COMRAM] unsigned char 
  1154 ;; Return value:  Size  Location     Type
  1155 ;;                  2    0[COMRAM] int 
  1156 ;; Registers used:
  1157 ;;		wreg, status,2, status,0
  1158 ;; Tracked objects:
  1159 ;;		On entry : 0/0
  1160 ;;		On exit  : 0/0
  1161 ;;		Unchanged: 0/0
  1162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1163 ;;      Params:         4       0       0       0       0       0       0       0       0
  1164 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1165 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1166 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1167 ;;Total ram usage:        6 bytes
  1168 ;; Hardware stack levels used:    1
  1169 ;; This function calls:
  1170 ;;		Nothing
  1171 ;; This function is called by:
  1172 ;;		_main
  1173 ;; This function uses a non-reentrant model
  1174 ;;
  1175                           
  1176                           	psect	text6
  1177  007A7E                     __ptext6:
  1178                           	opt stack 0
  1179  007A7E                     ___awmod:
  1180                           	opt stack 30
  1181                           
  1182                           ;incstack = 0
  1183  007A7E  0E00               	movlw	0
  1184  007A80  6E06               	movwf	___awmod@sign,c
  1185  007A82  AE02               	btfss	___awmod@dividend+1,7,c
  1186  007A84  D006               	goto	l1138
  1187  007A86  6C01               	negf	___awmod@dividend,c
  1188  007A88  1E02               	comf	___awmod@dividend+1,f,c
  1189  007A8A  B0D8               	btfsc	status,0,c
  1190  007A8C  2A02               	incf	___awmod@dividend+1,f,c
  1191  007A8E  0E01               	movlw	1
  1192  007A90  6E06               	movwf	___awmod@sign,c
  1193  007A92                     l1138:
  1194  007A92  AE04               	btfss	___awmod@divisor+1,7,c
  1195  007A94  D004               	goto	l1142
  1196  007A96  6C03               	negf	___awmod@divisor,c
  1197  007A98  1E04               	comf	___awmod@divisor+1,f,c
  1198  007A9A  B0D8               	btfsc	status,0,c
  1199  007A9C  2A04               	incf	___awmod@divisor+1,f,c
  1200  007A9E                     l1142:
  1201  007A9E  5003               	movf	___awmod@divisor,w,c
  1202  007AA0  1004               	iorwf	___awmod@divisor+1,w,c
  1203  007AA2  B4D8               	btfsc	status,2,c
  1204  007AA4  D018               	goto	l1158
  1205  007AA6  0E01               	movlw	1
  1206  007AA8  6E05               	movwf	___awmod@counter,c
  1207  007AAA  D004               	goto	l1148
  1208  007AAC                     l1146:
  1209  007AAC  90D8               	bcf	status,0,c
  1210  007AAE  3603               	rlcf	___awmod@divisor,f,c
  1211  007AB0  3604               	rlcf	___awmod@divisor+1,f,c
  1212  007AB2  2A05               	incf	___awmod@counter,f,c
  1213  007AB4                     l1148:
  1214  007AB4  AE04               	btfss	___awmod@divisor+1,7,c
  1215  007AB6  D7FA               	goto	l1146
  1216  007AB8                     l1150:
  1217  007AB8  5003               	movf	___awmod@divisor,w,c
  1218  007ABA  5C01               	subwf	___awmod@dividend,w,c
  1219  007ABC  5004               	movf	___awmod@divisor+1,w,c
  1220  007ABE  5802               	subwfb	___awmod@dividend+1,w,c
  1221  007AC0  A0D8               	btfss	status,0,c
  1222  007AC2  D004               	goto	l1154
  1223  007AC4  5003               	movf	___awmod@divisor,w,c
  1224  007AC6  5E01               	subwf	___awmod@dividend,f,c
  1225  007AC8  5004               	movf	___awmod@divisor+1,w,c
  1226  007ACA  5A02               	subwfb	___awmod@dividend+1,f,c
  1227  007ACC                     l1154:
  1228  007ACC  90D8               	bcf	status,0,c
  1229  007ACE  3204               	rrcf	___awmod@divisor+1,f,c
  1230  007AD0  3203               	rrcf	___awmod@divisor,f,c
  1231  007AD2  2E05               	decfsz	___awmod@counter,f,c
  1232  007AD4  D7F1               	goto	l1150
  1233  007AD6                     l1158:
  1234  007AD6  5006               	movf	___awmod@sign,w,c
  1235  007AD8  B4D8               	btfsc	status,2,c
  1236  007ADA  D004               	goto	l1162
  1237  007ADC  6C01               	negf	___awmod@dividend,c
  1238  007ADE  1E02               	comf	___awmod@dividend+1,f,c
  1239  007AE0  B0D8               	btfsc	status,0,c
  1240  007AE2  2A02               	incf	___awmod@dividend+1,f,c
  1241  007AE4                     l1162:
  1242  007AE4  C001  F001         	movff	___awmod@dividend,?___awmod
  1243  007AE8  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1244  007AEC  0012               	return	
  1245  007AEE                     __end_of___awmod:
  1246                           	opt stack 0
  1247                           postinc0	equ	0xFEE
  1248                           wreg	equ	0xFE8
  1249                           status	equ	0xFD8
  1250                           
  1251 ;; *************** function ___awdiv *****************
  1252 ;; Defined at:
  1253 ;;		line 8 in file "D:\mplab\sources\common\awdiv.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;  dividend        2    0[COMRAM] int 
  1256 ;;  divisor         2    2[COMRAM] int 
  1257 ;; Auto vars:     Size  Location     Type
  1258 ;;  quotient        2    6[COMRAM] int 
  1259 ;;  sign            1    5[COMRAM] unsigned char 
  1260 ;;  counter         1    4[COMRAM] unsigned char 
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  2    0[COMRAM] int 
  1263 ;; Registers used:
  1264 ;;		wreg, status,2, status,0
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1270 ;;      Params:         4       0       0       0       0       0       0       0       0
  1271 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1272 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1273 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1274 ;;Total ram usage:        8 bytes
  1275 ;; Hardware stack levels used:    1
  1276 ;; This function calls:
  1277 ;;		Nothing
  1278 ;; This function is called by:
  1279 ;;		_main
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283                           	psect	text7
  1284  007AEE                     __ptext7:
  1285                           	opt stack 0
  1286  007AEE                     ___awdiv:
  1287                           	opt stack 30
  1288                           
  1289                           ;incstack = 0
  1290  007AEE  0E00               	movlw	0
  1291  007AF0  6E06               	movwf	___awdiv@sign,c
  1292  007AF2  AE04               	btfss	___awdiv@divisor+1,7,c
  1293  007AF4  D006               	goto	l1094
  1294  007AF6  6C03               	negf	___awdiv@divisor,c
  1295  007AF8  1E04               	comf	___awdiv@divisor+1,f,c
  1296  007AFA  B0D8               	btfsc	status,0,c
  1297  007AFC  2A04               	incf	___awdiv@divisor+1,f,c
  1298  007AFE  0E01               	movlw	1
  1299  007B00  6E06               	movwf	___awdiv@sign,c
  1300  007B02                     l1094:
  1301  007B02  AE02               	btfss	___awdiv@dividend+1,7,c
  1302  007B04  D006               	goto	l1100
  1303  007B06  6C01               	negf	___awdiv@dividend,c
  1304  007B08  1E02               	comf	___awdiv@dividend+1,f,c
  1305  007B0A  B0D8               	btfsc	status,0,c
  1306  007B0C  2A02               	incf	___awdiv@dividend+1,f,c
  1307  007B0E  0E01               	movlw	1
  1308  007B10  1A06               	xorwf	___awdiv@sign,f,c
  1309  007B12                     l1100:
  1310  007B12  0E00               	movlw	0
  1311  007B14  6E08               	movwf	___awdiv@quotient+1,c
  1312  007B16  0E00               	movlw	0
  1313  007B18  6E07               	movwf	___awdiv@quotient,c
  1314  007B1A  5003               	movf	___awdiv@divisor,w,c
  1315  007B1C  1004               	iorwf	___awdiv@divisor+1,w,c
  1316  007B1E  B4D8               	btfsc	status,2,c
  1317  007B20  D01C               	goto	l1122
  1318  007B22  0E01               	movlw	1
  1319  007B24  6E05               	movwf	___awdiv@counter,c
  1320  007B26  D004               	goto	l1108
  1321  007B28                     l1106:
  1322  007B28  90D8               	bcf	status,0,c
  1323  007B2A  3603               	rlcf	___awdiv@divisor,f,c
  1324  007B2C  3604               	rlcf	___awdiv@divisor+1,f,c
  1325  007B2E  2A05               	incf	___awdiv@counter,f,c
  1326  007B30                     l1108:
  1327  007B30  AE04               	btfss	___awdiv@divisor+1,7,c
  1328  007B32  D7FA               	goto	l1106
  1329  007B34                     l1110:
  1330  007B34  90D8               	bcf	status,0,c
  1331  007B36  3607               	rlcf	___awdiv@quotient,f,c
  1332  007B38  3608               	rlcf	___awdiv@quotient+1,f,c
  1333  007B3A  5003               	movf	___awdiv@divisor,w,c
  1334  007B3C  5C01               	subwf	___awdiv@dividend,w,c
  1335  007B3E  5004               	movf	___awdiv@divisor+1,w,c
  1336  007B40  5802               	subwfb	___awdiv@dividend+1,w,c
  1337  007B42  A0D8               	btfss	status,0,c
  1338  007B44  D005               	goto	l1118
  1339  007B46  5003               	movf	___awdiv@divisor,w,c
  1340  007B48  5E01               	subwf	___awdiv@dividend,f,c
  1341  007B4A  5004               	movf	___awdiv@divisor+1,w,c
  1342  007B4C  5A02               	subwfb	___awdiv@dividend+1,f,c
  1343  007B4E  8007               	bsf	___awdiv@quotient,0,c
  1344  007B50                     l1118:
  1345  007B50  90D8               	bcf	status,0,c
  1346  007B52  3204               	rrcf	___awdiv@divisor+1,f,c
  1347  007B54  3203               	rrcf	___awdiv@divisor,f,c
  1348  007B56  2E05               	decfsz	___awdiv@counter,f,c
  1349  007B58  D7ED               	goto	l1110
  1350  007B5A                     l1122:
  1351  007B5A  5006               	movf	___awdiv@sign,w,c
  1352  007B5C  B4D8               	btfsc	status,2,c
  1353  007B5E  D004               	goto	l1126
  1354  007B60  6C07               	negf	___awdiv@quotient,c
  1355  007B62  1E08               	comf	___awdiv@quotient+1,f,c
  1356  007B64  B0D8               	btfsc	status,0,c
  1357  007B66  2A08               	incf	___awdiv@quotient+1,f,c
  1358  007B68                     l1126:
  1359  007B68  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1360  007B6C  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1361  007B70  0012               	return	
  1362  007B72                     __end_of___awdiv:
  1363                           	opt stack 0
  1364  0000                     postinc0	equ	0xFEE
  1365                           wreg	equ	0xFE8
  1366                           status	equ	0xFD8
  1367                           postinc0	equ	0xFEE
  1368                           wreg	equ	0xFE8
  1369                           status	equ	0xFD8
  1370                           
  1371                           	psect	rparam
  1372  0000                     postinc0	equ	0xFEE
  1373                           wreg	equ	0xFE8
  1374                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     40      47
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___ftdiv
    ___lwtoft->___ftpack
    ___ftmul->___ftpack
    ___ftdiv->___ftmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6040
                                             38 COMRAM     2     2      0
                            ___awdiv
                            ___awmod
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    1403
                                              8 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     295
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    1810
                                              8 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    1764
                                             23 COMRAM    15     9      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1338
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     382
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     386
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
   ___ftdiv
     ___ftmul (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___ftmul
     ___ftpack
   ___fttol
   ___lwtoft
     ___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     28      2F       1       49.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2F      20        0.0%
DATA                 0      0      2F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Sep 17 12:18:04 2021

                     l32 7F2C             ___awdiv@sign 0006              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000                      l337 7CD4                      l279 7C00  
                    l960 7B82                      l972 7BCE                      l964 7B90  
                    l974 7BEC                      l966 7B9A                      l976 7BF6  
                    l968 7BB8                      l998 7C48             __CFG_CPB$OFF 000000  
                    u501 7C30                      u521 7C58             __CFG_CPD$OFF 000000  
                    u551 7D16                      u571 7D3E                      u731 7E0A  
                    u750 7E44                      u755 7E3C                      u827 7FD0  
                    u837 7FF6             __CFG_BOR$OFF 000000             ___awmod@sign 0006  
                    wreg 000FE8             __CFG_IESO$ON 000000             __CFG_LVP$OFF 000000  
           ___ftdiv@cntr 0021             ___ftdiv@sign 0026             __CFG_WDT$OFF 000000  
                   l1100 7B12                     l1004 7C70                     l1110 7B34  
                   l1024 7CAE                     l1200 7EB4                     l1106 7B28  
                   l1122 7B5A                     l1050 7D56                     l1202 7EC0  
                   l1108 7B30                     l1044 7D2E                     l1204 7EC6  
                   l1126 7B68                     l1118 7B50                     l1150 7AB8  
                   l1142 7A9E                     l1064 7D88                     l1208 7EDC  
                   l1162 7AE4                     l1154 7ACC                     l1146 7AAC  
                   l1138 7A92                     l1074 7DB0                     l1148 7AB4  
                   l1068 7D98                     l1172 7E26                     l1228 7F2A  
                   l1094 7B02                     l1158 7AD6                     l1078 7DC0  
                   l1190 7E8C                     l1194 7E9C                     _LATD 000F8C  
           __CFG_PWRT$ON 000000                     _lm35 002E                     _main 7EEE  
           ___ftpack@arg 0001             ___ftpack@exp 0004                     _temp 0029  
                   start 0000             ___ftmul@cntr 0016             ___param_bank 000000  
           ___ftmul@sign 0017             ___fttol@exp1 000F             ___fttol@lval 000B  
          __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000                    ?_main 0001  
        __end_of___awdiv 7B72          __end_of___awmod 7AEE          __end_of___ftdiv 7D06  
        __end_of___ftmul 7DFA          ___awdiv@divisor 0003          __end_of___fttol 7EEE  
        ___awdiv@counter 0005            __CFG_USBDIV$1 000000                    _TRISA 000F92  
                  _TRISD 000F95            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000            ___ftpack@sign 0005  
                  status 000FD8           __CFG_ICPRT$OFF 000000           __CFG_MCLRE$OFF 000000  
        __initialization 7A48             __end_of_main 8000                   ??_main 0027  
          ___fttol@sign1 000A            __activetblptr 000000                   _ADRESH 000FC4  
                 _ADRESL 000FC3         ___awdiv@dividend 0001         __end_of___ftpack 7C20  
       __end_of___lwtoft 7A7E           __CFG_XINST$OFF 000000                ??___awdiv 0005  
         __CFG_STVREN$ON 000000                ??___awmod 0005                ??___ftdiv 001E  
              ??___ftmul 000F                ??___fttol 0005                   clear_0 7A4E  
       ___awdiv@quotient 0007          ___awmod@divisor 0003          ___awmod@counter 0005  
  ___ftmul@f3_as_product 0013               __accesstop 0060  __end_of__initialization 7A54  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001               ___ftdiv@f1 0018  
             ___ftdiv@f2 001B               ___ftdiv@f3 0022               ___ftmul@f1 0009  
             ___ftmul@f2 000C               ___fttol@f1 0001           __pcstackCOMRAM 0001  
             ___lwtoft@c 0009           _counter_digito 002F                ?___ftpack 0001  
              ?___lwtoft 0009          __CFG_VREGEN$OFF 000000                  __Hparam 0000  
                __Lparam 0000                  ___awdiv 7AEE                  ___awmod 7A7E  
                ___ftdiv 7C20                  ___ftmul 7D06                  ___fttol 7DFA  
                __pcinit 7A48               ??___ftpack 0006                  __ramtop 0800  
                __ptext0 7EEE                  __ptext1 7A5A                  __ptext2 7DFA  
                __ptext3 7D06                  __ptext4 7C20                  __ptext5 7B72  
                __ptext6 7A7E                  __ptext7 7AEE               ??___lwtoft 000C  
       ___awmod@dividend 0001     end_of_initialization 7A54                  postinc0 000FEE  
            ___ftdiv@exp 0025              ___ftmul@exp 0012      start_initialization 7A48  
       __CFG_LPT1OSC$OFF 000000        __size_of___ftpack 00AE              __pbssCOMRAM 0029  
      __size_of___lwtoft 0024                 ?___awdiv 0001                 ?___awmod 0001  
               ?___ftdiv 0018                 ?___ftmul 0009                 ?___fttol 0001  
       __CFG_WDTPS$32768 000000                _value_adc 002C               _ADCON0bits 000FC2  
             _ADCON1bits 000FC1               _ADCON2bits 000FC0                 __Hrparam 0000  
               __Lrparam 0000         __size_of___awdiv 0084         __size_of___awmod 0070  
       __size_of___ftdiv 00E6         __size_of___ftmul 00F4         __size_of___fttol 00F4  
               ___ftpack 7B72    __CFG_FOSC$INTOSCIO_EC 000000                 ___lwtoft 7A5A  
          __size_of_main 0112    __CFG_CPUDIV$OSC1_PLL2 000000               _OSCCONbits 000FD3  
